{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/PatientInput.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/PatientInput.vue","mtime":1586724179216},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKaW1wb3J0IEFwaSBmcm9tICdAL2FwaScKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnCmltcG9ydCB7IFBhdGllbnQgfSBmcm9tICdAL2FwaS9Td2FnZ2VyQXBpJwoKLyoqCiAqIEF1dG9jb21wbGV0ZSBmb3IgUGF0aWVudHMKICoKICogcHJvcHM6CiAqIC0gdmFsaWRhdGlvbjogcHV0IGluIHYtZGVjb3JhdG9yIG9iamVjdAogKi8KCmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUgewogIHJlc3VsdDogUGF0aWVudFtdOwp9CgpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICBuYW1lOiAnUGF0aWVudElucHV0JywKICBwcm9wczogWyd2YWxpZGF0aW9uJywgJ2xhYmVsJywgJ2Zvcm0nXSwKICBkYXRhKCk6IFN0YXRlIHsKICAgIHJldHVybiB7CiAgICAgIHJlc3VsdDogW10sCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBoYW5kbGVTZWFyY2godmFsdWU6IHN0cmluZykgewogICAgICBsZXQgcmVzdWx0OiBQYXRpZW50W10KICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZS5sZW5ndGggPCAyKSB7CiAgICAgICAgcmVzdWx0ID0gW10KICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSBhd2FpdCBBcGkuYXBpLnF1ZXJ5UGF0aWVudHNTaW1wbGVVc2luZ1Bvc3QoewogICAgICAgICAgcXVlcnk6IHZhbHVlLAogICAgICAgICAgb2Zmc2V0UGFnZTogMCwKICAgICAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgICAgIG9yZGVyOiAnYXNjJywKICAgICAgICAgIG9yZGVyQnk6ICdsYXN0TmFtZScsCiAgICAgICAgfSkKICAgICAgfQogICAgICB0aGlzLnJlc3VsdCA9IHJlc3VsdAogICAgfSwKICAgIGVtaXRTZWxlY3Rpb24odmFsdWU6IHN0cmluZykgewogICAgICB0aGlzLiRlbWl0KCdzZWxlY3QnLCB2YWx1ZSkKICAgIH0sCiAgfSwKfSkK"},{"version":3,"sources":["PatientInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PatientInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a-form-item :label=\"label\">\n    <a-auto-complete @search=\"handleSearch\" placeholder=\"Suche Ã¼ber ID, Name, Telefon, Mail\" v-decorator=\"validation\"\n                     @select=\"emitSelection\" :defaultActiveFirstOption=\"false\">\n      <template slot=\"dataSource\">\n        <a-select-option v-for=\"patient in result\" :key=\"patient.id\">\n          {{patient.firstName}} {{patient.lastName}} ({{patient.id}})\n        </a-select-option>\n      </template>\n    </a-auto-complete>\n  </a-form-item>\n</template>\n\n<script lang=\"ts\">\n\nimport Api from '@/api'\nimport Vue from 'vue'\nimport { Patient } from '@/api/SwaggerApi'\n\n/**\n * Autocomplete for Patients\n *\n * props:\n * - validation: put in v-decorator object\n */\n\nexport interface State {\n  result: Patient[];\n}\n\nexport default Vue.extend({\n  name: 'PatientInput',\n  props: ['validation', 'label', 'form'],\n  data(): State {\n    return {\n      result: [],\n    }\n  },\n  methods: {\n    async handleSearch(value: string) {\n      let result: Patient[]\n      if (!value || value.length < 2) {\n        result = []\n      } else {\n        result = await Api.api.queryPatientsSimpleUsingPost({\n          query: value,\n          offsetPage: 0,\n          pageSize: 10,\n          order: 'asc',\n          orderBy: 'lastName',\n        })\n      }\n      this.result = result\n    },\n    emitSelection(value: string) {\n      this.$emit('select', value)\n    },\n  },\n})\n</script>\n\n<style>\n\n</style>\n"]}]}