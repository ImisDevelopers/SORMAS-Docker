{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/EditExposureContact.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/EditExposureContact.vue","mtime":1589906836721},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZScKaW1wb3J0IG1peGlucyBmcm9tICd2dWUtdHlwZWQtbWl4aW5zJwppbXBvcnQgKiBhcyB0eXBpbmcgZnJvbSAnQC91dGlsL3R5cGluZycKaW1wb3J0IEFwaSBmcm9tICdAL2FwaScKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnCgppbXBvcnQgRGF0ZUlucHV0IGZyb20gJ0AvY29tcG9uZW50cy9EYXRlSW5wdXQudnVlJwppbXBvcnQgUGF0aWVudElucHV0IGZyb20gJ0AvY29tcG9uZW50cy9QYXRpZW50SW5wdXQudnVlJwppbXBvcnQgeyBGb3JtR3JvdXBNaXhpbiB9IGZyb20gJ0AvdXRpbC9mb3Jtcy50cycKCmNvbnN0IGV4cG9zdXJlQ29udGV4dHMgPSBbCiAgJ0hhdXNoYWx0c2tvbnRha3QnLAogICdCZXJ1ZnNrb250YWt0JywKICAnS29udGFrdCBpbiBHZW1laW5zY2hhZnRzZWlucmljaHR1bmcnLApdCgpleHBvcnQgZGVmYXVsdCBtaXhpbnMoRm9ybUdyb3VwTWl4aW4pLmV4dGVuZCh7CiAgbmFtZTogJ0VkaXRFeHBvc3VyZUZvcm1Hcm91cCcsCiAgY29tcG9uZW50czogewogICAgRGF0ZUlucHV0LAogICAgUGF0aWVudElucHV0LAogIH0sCiAgZmllbGRJZGVudGlmaWVyczogWwogICAgJ2lkJywKICAgICdzb3VyY2UnLAogICAgJ2NvbnRhY3QnLAogICAgJ2RhdGVPZkNvbnRhY3QnLAogICAgJ2NvbnRleHQnLAogICAgJ2NvbW1lbnQnLAogIF0sCiAgcHJvcHM6IHsKICAgIHNob3dPcmlnaW5hdG9yUGF0aWVudDogeyBkZWZhdWx0OiB0cnVlIH0sCiAgICBzaG93Q29udGFjdFBhdGllbnQ6IHsgZGVmYXVsdDogdHJ1ZSB9LAogICAgZGlzYWJsZU9yaWdpbmF0b3JQYXRpZW50OiB7IGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBkaXNhYmxlQ29udGFjdFBhdGllbnQ6IHsgZGVmYXVsdDogZmFsc2UgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb250ZXh0czogZXhwb3N1cmVDb250ZXh0cywKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHdpdGhFeHRzKCkgewogICAgICByZXR1cm4gdHlwaW5nLmV4dGVuZGVkKHRoaXMsIHR5cGluZy5UeXBlQXJnPEZvcm1Hcm91cE1peGluPigpKQogICAgfSwKICAgIG1vbWVudCwKICAgIGZpbHRlckNvbnRhY3RzKGlucHV0VmFsOiBzdHJpbmcsIG9wdGlvbjogYW55KTogYm9vbGVhbiB7CiAgICAgIHJldHVybiBvcHRpb24ua2V5ICE9PSB0aGlzLndpdGhFeHRzKCkuZ2V0U2luZ2xlVmFsdWUoJ3NvdXJjZScpCiAgICB9LAogICAgZmlsdGVyU291cmNlcyhpbnB1dFZhbDogc3RyaW5nLCBvcHRpb246IGFueSk6IGJvb2xlYW4gewogICAgICByZXR1cm4gb3B0aW9uLmtleSAhPT0gdGhpcy53aXRoRXh0cygpLmdldFNpbmdsZVZhbHVlKCdjb250YWN0JykKICAgIH0sCiAgfSwKfSkK"},{"version":3,"sources":["EditExposureContact.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EditExposureContact.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"edit-exposure-contact\">\n    <a-form-item style=\"display: none;\" :selfUpdate=\"true\">\n      <a-input type=\"hidden\" v-decorator=\"[formFieldName('id')]\" />\n    </a-form-item>\n    <a-row class=\"patients-flex\">\n      <!-- Originating and Contact Names -->\n      <a-form-item\n        :style=\"`display: ${$props.showOriginatorPatient ? 'unset' : 'none'}`\"\n        :selfUpdate=\"true\"\n        label=\"Ursprungspatient\"\n        class=\"patient-input\"\n      >\n        <patient-input\n          v-bind=\"inputProps.source\"\n          :disabled=\"$props.disableOriginatorPatient\"\n          :filterOption=\"filterSources\"\n          v-decorator=\"[\n            formFieldName('source'),\n            {\n              rules: [\n                { required: true, message: 'Bitte Ursprungspatienten angeben' },\n              ],\n            },\n          ]\"\n        />\n      </a-form-item>\n      <a-icon\n        v-if=\"$props.showOriginatorPatient && $props.showContactPatient\"\n        type=\"swap\"\n      />\n      <a-form-item\n        :style=\"`display: ${$props.showContactPatient ? 'unset' : 'none'}`\"\n        :selfUpdate=\"true\"\n        label=\"Kontaktperson\"\n        class=\"patient-input\"\n      >\n        <patient-input\n          v-bind=\"inputProps.contact\"\n          :disabled=\"$props.disableContactPatient\"\n          :filterOption=\"filterContacts\"\n          v-decorator=\"[\n            formFieldName('contact'),\n            {\n              rules: [\n                { required: true, message: 'Bitte Kontaktperson angeben' },\n              ],\n            },\n          ]\"\n        />\n      </a-form-item>\n    </a-row>\n    <a-row>\n      <!-- When and How -->\n      <a-col :md=\"11\" :sm=\"24\">\n        <a-form-item label=\"Datum des Kontakts\" :selfUpdate=\"true\">\n          <date-input\n            v-bind=\"inputProps.dateOfContact\"\n            :disabledDate=\"(date) => date.isAfter(moment())\"\n            v-decorator=\"[\n              formFieldName('dateOfContact'),\n              {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Bitte ein gÃ¼ltiges Datum angeben',\n                  },\n                ],\n              },\n            ]\"\n          />\n        </a-form-item>\n      </a-col>\n      <a-col :md=\"2\" :sm=\"0\"></a-col>\n      <a-col :md=\"11\" :sm=\"24\">\n        <a-form-item label=\"Umgebung / Kontext\" :selfUpdate=\"true\">\n          <a-auto-complete\n            v-bind=\"inputProps.context\"\n            :dataSource=\"contexts\"\n            :filterOption=\"false\"\n            v-decorator=\"[\n              formFieldName('context'),\n              {\n                rules: [\n                  {\n                    required: true,\n                    message: 'Bitte den Umstand des Kontakts angeben',\n                  },\n                ],\n              },\n            ]\"\n          />\n        </a-form-item>\n      </a-col>\n    </a-row>\n    <a-row>\n      <!-- Comment Space -->\n      <a-form-item label=\"Sonstiges / Kommentar\" :selfUpdate=\"true\">\n        <a-textarea\n          v-bind=\"inputProps.comment\"\n          v-decorator=\"[\n            formFieldName('comment'),\n            {\n              rules: [],\n            },\n          ]\"\n        />\n      </a-form-item>\n    </a-row>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport mixins from 'vue-typed-mixins'\nimport * as typing from '@/util/typing'\nimport Api from '@/api'\nimport moment from 'moment'\n\nimport DateInput from '@/components/DateInput.vue'\nimport PatientInput from '@/components/PatientInput.vue'\nimport { FormGroupMixin } from '@/util/forms.ts'\n\nconst exposureContexts = [\n  'Haushaltskontakt',\n  'Berufskontakt',\n  'Kontakt in Gemeinschaftseinrichtung',\n]\n\nexport default mixins(FormGroupMixin).extend({\n  name: 'EditExposureFormGroup',\n  components: {\n    DateInput,\n    PatientInput,\n  },\n  fieldIdentifiers: [\n    'id',\n    'source',\n    'contact',\n    'dateOfContact',\n    'context',\n    'comment',\n  ],\n  props: {\n    showOriginatorPatient: { default: true },\n    showContactPatient: { default: true },\n    disableOriginatorPatient: { default: false },\n    disableContactPatient: { default: false },\n  },\n  data() {\n    return {\n      contexts: exposureContexts,\n    }\n  },\n  methods: {\n    withExts() {\n      return typing.extended(this, typing.TypeArg<FormGroupMixin>())\n    },\n    moment,\n    filterContacts(inputVal: string, option: any): boolean {\n      return option.key !== this.withExts().getSingleValue('source')\n    },\n    filterSources(inputVal: string, option: any): boolean {\n      return option.key !== this.withExts().getSingleValue('contact')\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.edit-exposure-contact {\n  .patients-flex {\n    display: flex;\n    flex-flow: row wrap;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n  }\n\n  .patients-flex > * {\n    flex: 1 1;\n  }\n\n  .patients-flex > .patient-input {\n    min-width: 47%;\n  }\n}\n</style>\n"]}]}