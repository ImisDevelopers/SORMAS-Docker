{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientDetails.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientDetails.vue","mtime":1589906836724},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PatientDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqcfile":"PatientDetails.vue","sourceRoot":"src/views","sourcesContent":["<template style=\"margin: auto;\">\n  <div>\n    <ChangePatientStammdatenForm\n      @cancel=\"\n        () => {\n          showChangePatientStammdatenForm = false\n        }\n      \"\n      @create=\"\n        () => {\n          showChangePatientStammdatenForm = false\n          this.loadData()\n        }\n      \"\n      :visible=\"showChangePatientStammdatenForm\"\n      :patient=\"patient\"\n    />\n    <div style=\"max-width: 1020px; margin: 0 auto; padding: 0 1rem;\">\n      <a-page-header\n        v-if=\"patient\"\n        :title=\"`${patient.lastName}, ${patient.firstName}`\"\n        :sub-title=\"patient.id\"\n        @back=\"() => $router.go(-1)\"\n        style=\"padding: 1rem 0;\"\n      >\n        <template slot=\"tags\">\n          <a-tag v-if=\"patientStatus\">\n            {{ patientStatus.label }}\n          </a-tag>\n        </template>\n        <template slot=\"extra\">\n          <a-dropdown>\n            <a-menu slot=\"overlay\" @click=\"handleActionClick\">\n              <a-menu-item key=\"ARRANGE_TEST\">\n                <a-icon type=\"user\" />\n                Neuen Test anordnen\n              </a-menu-item>\n              <a-menu-item\n                key=\"SEND_TO_QUARANTINE\"\n                v-if=\"permissions.sendToQuarantine\"\n              >\n                <a-icon type=\"user\" />\n                Quarantäne vormerken\n              </a-menu-item>\n            </a-menu>\n            <a-button style=\"margin-left: 8px;\">\n              Aktionen\n              <a-icon type=\"down\" />\n            </a-button>\n          </a-dropdown>\n        </template>\n      </a-page-header>\n\n      <a-tabs\n        defaultActiveKey=\"master-data\"\n        v-if=\"patient\"\n        style=\"text-align: left;\"\n      >\n        <a-tab-pane key=\"master-data\" tab=\"Stammdaten\">\n          <div\n            style=\"\n              display: flex;\n              justify-content: flex-end;\n              padding-bottom: 10px;\n            \"\n          >\n            <a-button icon=\"edit\" @click=\"editPatientStammdaten\">\n              Daten ändern\n            </a-button>\n          </div>\n          <!-- Allgemein & Adresse -->\n          <a-row :gutter=\"8\">\n            <a-col :md=\"12\" :span=\"24\">\n              <a-card :extra=\"this.patient.id\" align=\"left\" title=\"Allgemein\">\n                <table>\n                  <tr>\n                    <td>Name:</td>\n                    <td>{{ patient.lastName }}, {{ patient.firstName }}</td>\n                  </tr>\n                  <tr>\n                    <td>Geburtsdatum:</td>\n                    <td>{{ dateOfBirth }}</td>\n                  </tr>\n                  <tr>\n                    <td>Geschlecht:</td>\n                    <td>{{ gender }}</td>\n                  </tr>\n                  <tr>\n                    <td>Staatsangehörigkeit:</td>\n                    <td>{{ patient.nationality }}</td>\n                  </tr>\n                </table>\n              </a-card>\n            </a-col>\n            <a-col :md=\"12\" :span=\"24\">\n              <a-card align=\"left\" title=\"Adresse\">\n                <table>\n                  <tr>\n                    <td>Straße/Hausnr.:</td>\n                    <td>{{ patient.street }} {{ patient.houseNumber }}</td>\n                  </tr>\n                  <tr>\n                    <td>PLZ/Ort:</td>\n                    <td>{{ patient.zip }} {{ patient.city }}</td>\n                  </tr>\n                  <tr>\n                    <td>Land:</td>\n                    <td>{{ patient.country }}</td>\n                  </tr>\n                </table>\n              </a-card>\n            </a-col>\n          </a-row>\n\n          <!-- Kontakt & Versicherung & Arbeitgeber -->\n          <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n            <a-col :md=\"8\" :span=\"24\">\n              <a-card align=\"left\" title=\"Kontakt\">\n                <table>\n                  <tr>\n                    <td>Telefonnummer:</td>\n                    <td>{{ patient.phoneNumber }}</td>\n                  </tr>\n                  <tr>\n                    <td>Email:</td>\n                    <td>\n                      <a href=\"\">{{ patient.email }}</a>\n                    </td>\n                  </tr>\n                </table>\n              </a-card>\n            </a-col>\n            <a-col :md=\"8\" :span=\"24\">\n              <a-card align=\"left\" title=\"Versicherung\">\n                <table>\n                  <tr>\n                    <td>Versicherung:</td>\n                    <td>{{ patient.insuranceCompany }}</td>\n                  </tr>\n                  <tr>\n                    <td>V-Nr:</td>\n                    <td>{{ patient.insuranceMembershipNumber }}</td>\n                  </tr>\n                </table>\n              </a-card>\n            </a-col>\n            <a-col :md=\"8\" :span=\"24\">\n              <a-card align=\"left\" title=\"Arbeit\">\n                <table>\n                  <tr>\n                    <td>Beruf:</td>\n                    <td>{{ patient.occupation || 'Keine Angabe' }}</td>\n                  </tr>\n                  <tr>\n                    <td>Arbeitgeber:</td>\n                    <td>{{ patient.employer || 'Keine Angabe' }}</td>\n                  </tr>\n                </table>\n              </a-card>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n\n        <a-tab-pane key=\"overview\" tab=\"Falldaten\">\n          <!-- Tests -->\n          <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n            <a-col span=\"24\">\n              <div style=\"background: white; border: 1px solid #e8e8e8;\">\n                <div class=\"card-header\">\n                  <div>\n                    Fall-Status:\n                    {{\n                      (patientStatus ? patientStatus.label : 'Unbekannt') +\n                      (patient.quarantineUntil\n                        ? ', Quarantäne angeordnet bis ' +\n                          patient.quarantineUntil\n                        : '')\n                    }}\n                  </div>\n                  <div class=\"card-header-subtitle\">\n                    Erkrankungsdatum: {{ dateOfIllness }}\n                  </div>\n                  <div class=\"card-header-subtitle\">\n                    Meldedatum: {{ dateOfReporting }}\n                  </div>\n                </div>\n                <a-table\n                  :columns=\"columnsTests\"\n                  :dataSource=\"tests\"\n                  :scroll=\"{ x: 0, y: 0 }\"\n                  class=\"imis-table-no-pagination\"\n                  rowKey=\"id\"\n                >\n                  <div slot=\"lastUpdate\" slot-scope=\"lastUpdate\">\n                    {{ getDate(lastUpdate) }}\n                  </div>\n                  <div slot=\"testStatus\" slot-scope=\"testStatus\">\n                    <a-icon\n                      :type=\"\n                        testResults.find((type) => type.id === testStatus).icon\n                      \"\n                      style=\"margin-right: 5px;\"\n                    />\n                    {{\n                      testResults.find((type) => type.id === testStatus).label\n                    }}\n                  </div>\n                  <div slot=\"testType\" slot-scope=\"testType\">\n                    <a-icon\n                      :type=\"\n                        testTypes.find((type) => type.id === testType).icon\n                      \"\n                      style=\"margin-right: 5px;\"\n                    />\n                    {{ testTypes.find((type) => type.id === testType).label }}\n                  </div>\n                </a-table>\n              </div>\n            </a-col>\n          </a-row>\n\n          <!-- Symptome und Risiken -->\n          <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n            <a-col :md=\"8\" :span=\"24\">\n              <a-card align=\"left\" title=\"Infektionskette\">\n                <a-descriptions layout=\"vertical\" :column=\"1\">\n                  <a-descriptions-item>\n                    <span slot=\"label\"\n                      ><a-icon type=\"arrow-right\" /><a-icon\n                        type=\"user\"\n                        style=\"margin-right: 5px;\"\n                      />\n                      Kontakte mit Indexpatienten</span\n                    >\n                    <span v-if=\"patientInfectionSources.length > 0\">{{\n                      patientInfectionSources.length\n                    }}</span>\n                    <span v-else>Keine</span>\n                    bekannt\n                  </a-descriptions-item>\n                  <a-descriptions-item>\n                    <span slot=\"label\"\n                      ><a-icon type=\"user\" /><a-icon\n                        type=\"arrow-right\"\n                        style=\"margin-right: 5px;\"\n                      />\n                      Eigene Kontaktpersonen</span\n                    >\n                    <span v-if=\"exposureContacts.length > 0\">{{\n                      exposureContacts.length\n                    }}</span>\n                    <span v-else>Keine</span>\n                    angegeben\n                  </a-descriptions-item>\n                </a-descriptions>\n              </a-card>\n            </a-col>\n\n            <a-col :md=\"8\" :span=\"24\">\n              <a-card align=\"left\" title=\"Vorerkrankungen und Risikofaktoren\">\n                <div v-bind:key=\"illness\" v-for=\"illness in preIllnesses\">\n                  {{ illness }}\n                </div>\n              </a-card>\n            </a-col>\n            <a-col :md=\"8\" :span=\"24\">\n              <a-card\n                :extra=\"'Stand: ' + formatTimestamp(patient.creationTimestamp)\"\n                align=\"left\"\n                title=\"Symptome\"\n              >\n                <div v-bind:key=\"symptom\" v-for=\"symptom in symptoms\">\n                  {{ symptom }}\n                </div>\n              </a-card>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n        <a-tab-pane forceRender key=\"timeline\" tab=\"Verlauf\">\n          <a-card>\n            <a-timeline\n              style=\"text-align: left; margin-left: 40px;\"\n              v-if=\"patient.events.length\"\n            >\n              <!-- List all the events recorded corresponding to the patient over time -->\n              <a-timeline-item\n                :color=\"timelineColor(event.eventType)\"\n                :key=\"event.id\"\n                v-for=\"event in this.patient.events\"\n              >\n                {{ formatTimestamp(event.eventTimestamp) }},\n                {{\n                  eventTypes.find((type) => type.id === event.eventType).label\n                }}\n              </a-timeline-item>\n            </a-timeline>\n          </a-card>\n        </a-tab-pane>\n        <a-tab-pane forceRender key=\"infection-chain\" tab=\"Infektionskette\">\n          <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n            <a-card align=\"left\" title=\"Infektionsquellen\">\n              <a-descriptions\n                layout=\"vertical\"\n                :column=\"{ xs: 1, sm: 1, md: 2, lg: 2 }\"\n              >\n                <a-descriptions-item>\n                  <span slot=\"label\"\n                    ><a-icon type=\"user\" style=\"margin-right: 5px;\" /> Kontakte\n                    mit Indexpatienten\n                    <span v-if=\"patientInfectionSources.length > 0\"\n                      >({{ patientInfectionSources.length }})</span\n                    ></span\n                  >\n                  <div v-if=\"patientInfectionSources.length > 0\">\n                    <a-table\n                      class=\"table-index-patients\"\n                      :columns=\"columnsIndexPatients\"\n                      :dataSource=\"patientInfectionSources\"\n                      :rowKey=\"(contact) => contact.id\"\n                      :showHeader=\"false\"\n                      :pagination=\"false\"\n                    >\n                      <template slot=\"name\" slot-scope=\"contact\">\n                        <a @click=\"showPatient(contact.source.id)\"\n                          >{{ contact.source.firstName }}\n                          {{ contact.source.lastName }}</a\n                        >,\n                      </template>\n                      <template slot=\"dateOfContact\" slot-scope=\"contact\">\n                        am\n                        {{\n                          moment(contact.dateOfContact).format('DD.MM.YYYY')\n                        }},\n                      </template>\n                    </a-table>\n                  </div>\n                  <div v-else>\n                    Keine bekannt\n                  </div>\n                </a-descriptions-item>\n                <a-descriptions-item label=\"Sonstige\">\n                  Keine bekannt\n                </a-descriptions-item>\n              </a-descriptions>\n            </a-card>\n          </a-row>\n\n          <!-- exposed contacts -->\n          <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n            <a-card\n              title=\"Kontaktpersonen\"\n              align=\"left\"\n              :bodyStyle=\"{ padding: 0 }\"\n            >\n              <div slot=\"extra\">\n                <a-button\n                  icon=\"plus\"\n                  type=\"primary\"\n                  @click=\"addExposureContact\"\n                >\n                  Hinzufügen\n                </a-button>\n              </div>\n\n              <a-table\n                :columns=\"columnsExposureContacts\"\n                :pagination=\"false\"\n                :dataSource=\"exposureContacts\"\n                class=\"imis-table-no-pagination\"\n                :rowKey=\"(contact) => contact.contact.id\"\n                :loading=\"exposureContactsLoading\"\n                :customRow=\"\n                  (contact) => ({\n                    on: { dblclick: () => showExposureContact(contact.id) },\n                  })\n                \"\n              >\n                <template slot=\"gotoPatient\" slot-scope=\"contact\">\n                  <a-button\n                    ghost\n                    icon=\"user\"\n                    type=\"primary\"\n                    title=\"Patientendaten anzeigen\"\n                    @click=\"showPatient(contact.contact.id)\"\n                  />\n                </template>\n                <template slot=\"dateOfContact\" slot-scope=\"contact\">\n                  {{ moment(contact.dateOfContact).format('DD.MM.YYYY') }}\n                </template>\n                <template slot=\"infectionState\" slot-scope=\"contact\">\n                  <span v-if=\"contact.contact.infected\" style=\"color: red;\">\n                    Infiziert\n                  </span>\n                  <span v-else>\n                    Unbekannt\n                  </span>\n                </template>\n                <template slot=\"quarantineState\" slot-scope=\"contact\">\n                  <span v-if=\"contact.contact.inQuarantine\">\n                    In Quarantäne\n                  </span>\n                  <span\n                    v-else\n                    :style=\"`color: ${\n                      contact.contact.infected ? 'red' : 'unset'\n                    };`\"\n                  >\n                    Keine Quarantäne\n                  </span>\n                </template>\n                <template slot=\"actions\" slot-scope=\"contact\">\n                  <div class=\"inline-buttons\">\n                    <a-button\n                      ghost\n                      icon=\"edit\"\n                      type=\"primary\"\n                      title=\"Bearbeiten\"\n                      @click=\"showExposureContact(contact.id)\"\n                    />\n                    <a-button\n                      ghost\n                      icon=\"close\"\n                      type=\"danger\"\n                      title=\"Entfernen\"\n                      @click=\"removeExposureContact(contact.id)\"\n                    />\n                  </div>\n                </template>\n              </a-table>\n            </a-card>\n          </a-row>\n          <a-modal\n            title=\"Kontaktperson bearbeiten\"\n            ref=\"exposureContactModal\"\n            :visible=\"!!exposureContactInEditing\"\n            @ok=\"\n              persistExposureContact().then((success) => {\n                if (success) exposureContactInEditing = null\n              })\n            \"\n            @cancel=\"exposureContactInEditing = null\"\n          >\n            <a-form :form=\"exposureContactForm\" :selfUpdate=\"true\">\n              <EditExposureContact :disableOriginatorPatient=\"true\" />\n            </a-form>\n          </a-modal>\n        </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport moment, { Moment } from 'moment'\nimport Api from '@/api'\nimport * as permissions from '@/util/permissions'\nimport {\n  LabTest,\n  Patient,\n  Timestamp,\n  ExposureContactFromServer,\n} from '@/api/SwaggerApi'\nimport { patientMapper } from '@/store/modules/patients.module'\nimport {\n  EventTypeItem,\n  eventTypes,\n  testResults,\n  TestResultType,\n} from '@/models/event-types'\nimport { SYMPTOMS } from '@/models/symptoms'\nimport { PRE_ILLNESSES } from '@/models/pre-illnesses'\nimport { Column } from 'ant-design-vue/types/table/column'\nimport { TestTypeItem, testTypes } from '@/models/test-types'\nimport ChangePatientStammdatenForm from '@/components/ChangePatientStammdatenForm.vue'\nimport EditExposureContact from '@/components/EditExposureContact.vue'\nimport { map } from '@/util/mapping'\n\nconst columnsTests: Partial<Column>[] = [\n  {\n    title: 'Test ID',\n    dataIndex: 'testId',\n    key: 'testId',\n  },\n  {\n    title: 'Test Typ',\n    dataIndex: 'testType',\n    key: 'testType',\n    scopedSlots: {\n      customRender: 'testType',\n    },\n  },\n  {\n    title: 'Test Status',\n    dataIndex: 'testStatus',\n    key: 'testStatus',\n    scopedSlots: {\n      customRender: 'testStatus',\n    },\n  },\n  {\n    title: 'Aktualisiert',\n    dataIndex: 'lastUpdate',\n    key: 'lastUpdate',\n    scopedSlots: {\n      customRender: 'lastUpdate',\n    },\n  },\n  {\n    title: 'Kommentar',\n    dataIndex: 'comment',\n    key: 'comment',\n  },\n]\n\nconst columnsExposureContacts: Partial<Column>[] = [\n  {\n    key: 'gotoPatient',\n    width: '40pt',\n    align: 'center',\n    scopedSlots: {\n      customRender: 'gotoPatient',\n    },\n  },\n  {\n    title: 'Nachname',\n    key: 'lastName',\n    dataIndex: 'contact.lastName',\n  },\n  {\n    title: 'Vorname',\n    key: 'firstName',\n    dataIndex: 'contact.firstName',\n  },\n  {\n    title: 'Datum des Kontakts',\n    key: 'dateOfContact',\n    scopedSlots: {\n      customRender: 'dateOfContact',\n    },\n  },\n  {\n    title: 'Kontaktart',\n    key: 'context',\n    dataIndex: 'context',\n  },\n  {\n    title: 'Infektionsstatus',\n    key: 'infected',\n    scopedSlots: {\n      customRender: 'infectionState',\n    },\n  },\n  {\n    title: 'Quarantänestatus',\n    key: 'quarantine',\n    scopedSlots: {\n      customRender: 'quarantineState',\n    },\n  },\n  {\n    title: 'Aktionen',\n    key: 'actions',\n    width: '120pt',\n    align: 'center',\n    scopedSlots: {\n      customRender: 'actions',\n    },\n  },\n]\n\nconst columnsIndexPatients = [\n  {\n    title: 'Name',\n    key: 'name',\n    scopedSlots: {\n      customRender: 'name',\n    },\n  },\n  {\n    title: 'Kontaktdatum',\n    key: 'dateOfContact',\n    scopedSlots: {\n      customRender: 'dateOfContact',\n    },\n  },\n  {\n    title: 'Kontaktart',\n    key: 'context',\n    dataIndex: 'context',\n  },\n]\n\ninterface State {\n  permissions: {\n    sendToQuarantine: boolean\n  }\n  patient: undefined | Patient\n  patientInfectionSources: ExposureContactFromServer[]\n  exposureContacts: ExposureContactFromServer[]\n  exposureContactsLoading: boolean\n  exposureContactForm: any\n  exposureContactInEditing: any\n  patientStatus: EventTypeItem | undefined\n  eventTypes: any[]\n  symptoms: string[]\n  preIllnesses: string[]\n  dateOfBirth: string\n  showChangePatientStammdatenForm: boolean\n  gender: string\n  tests: LabTest[]\n  columnsTests: Partial<Column>[]\n  columnsExposureContacts: Partial<Column>[]\n  columnsIndexPatients: Partial<Column>[]\n  testResults: TestResultType[]\n  testTypes: TestTypeItem[]\n  dateOfReporting: string\n  dateOfIllness: string\n  dateFormat: string\n}\n\nexport default Vue.extend({\n  name: 'PatientDetails',\n  components: {\n    ChangePatientStammdatenForm,\n    EditExposureContact,\n  },\n  computed: {\n    ...patientMapper.mapGetters({\n      patientById: 'patientById',\n    }),\n  },\n\n  async created() {\n    this.loadData()\n    this.exposureContactForm = this.$form.createForm(\n      this.$refs.exposureContactModal as Vue,\n      {\n        name: 'exposure-contact',\n      }\n    )\n  },\n\n  data(): State {\n    return {\n      permissions: {\n        sendToQuarantine: false,\n      },\n      dateFormat: 'DD.MM.YYYY',\n      patient: undefined,\n      patientInfectionSources: [],\n      exposureContacts: [],\n      exposureContactsLoading: false,\n      exposureContactForm: undefined,\n      exposureContactInEditing: null,\n      patientStatus: undefined,\n      eventTypes: eventTypes,\n      testResults: testResults,\n      testTypes: testTypes,\n      symptoms: [],\n      showChangePatientStammdatenForm: false,\n      preIllnesses: [],\n      dateOfBirth: '',\n      gender: '',\n      tests: [],\n      columnsTests,\n      columnsExposureContacts,\n      columnsIndexPatients,\n      dateOfReporting: '',\n      dateOfIllness: '',\n    }\n  },\n\n  watch: {\n    '$route.params.id'() {\n      this.loadData()\n    },\n  },\n\n  methods: {\n    ...patientMapper.mapMutations({\n      setPatient: 'setPatient',\n    }),\n    async loadData() {\n      this.exposureContactsLoading = true\n      try {\n        this.permissions = await permissions.checkAllowed({\n          sendToQuarantine: Api.sendToQuarantineUsingPost,\n        })\n      } catch (err) {\n        console.log(err)\n      }\n\n      // Load Patient\n      const patientId = this.$route.params.id\n      this.patient = this.patientById(this.$route.params.id)\n      if (!this.patient) {\n        const patient = await Api.getPatientForIdUsingGet(patientId)\n        this.setPatient(patient)\n        this.patient = patient\n      }\n\n      if (this.patient.events) {\n        const event = this.patient.events.find(\n          (event) =>\n            event.eventType === 'REGISTERED' || event.eventType === 'SUSPECTED'\n        )\n        if (event) {\n          this.dateOfReporting = moment(event.eventTimestamp).format(\n            this.dateFormat\n          )\n        }\n      }\n\n      if (this.patient.dateOfIllness) {\n        this.dateOfIllness = moment(this.patient.dateOfIllness).format(\n          this.dateFormat\n        )\n      } else {\n        this.dateOfIllness = this.dateOfReporting\n      }\n\n      // Map patient attributes to their display representation\n      this.patientStatus = eventTypes.find(\n        (type) => type.id === this.patient?.patientStatus\n      )\n      this.symptoms =\n        this.patient.symptoms?.map((symptom) => {\n          const patientSymptom = SYMPTOMS.find(\n            (symptomFind) => symptomFind.value === symptom\n          )\n          return patientSymptom ? patientSymptom.label : symptom\n        }) || []\n      this.preIllnesses =\n        this.patient.preIllnesses?.map((preIllness) => {\n          const patientIllness = PRE_ILLNESSES.find(\n            (illness) => illness.value === preIllness\n          )\n          return patientIllness ? patientIllness.label : preIllness\n        }) || []\n      this.dateOfBirth = moment(this.patient.dateOfBirth).format(\n        this.dateFormat\n      )\n      const patientGender = this.patient.gender || ''\n      this.gender =\n        patientGender === 'male'\n          ? 'männlich'\n          : patientGender === 'female'\n          ? 'weiblich'\n          : 'divers'\n\n      // Source of Infection\n      try {\n        this.patientInfectionSources = await Api.getExposureSourceContactsForPatientUsingGet(\n          patientId\n        )\n      } catch (e) {\n        this.patientInfectionSources = []\n      }\n\n      // Tests\n      this.tests = await Api.getLabTestForPatientUsingGet(patientId)\n\n      // Retrieve exposure contacts data\n      this.exposureContacts = await Api.getExposureContactsForPatientUsingGet(\n        patientId\n      )\n      this.exposureContactsLoading = false\n    },\n    timelineColor(eventType: any) {\n      switch (eventType) {\n        case 'TEST_FINISHED_POSITIVE':\n          return 'red'\n        case 'TEST_FINISHED_NEGATIVE':\n          return 'green'\n        default:\n          return 'grey'\n      }\n    },\n    formatTimestamp(timestamp: Timestamp): string {\n      const momentTimestamp = moment(timestamp)\n      if (momentTimestamp.isValid()) {\n        return moment(timestamp).format('DD.MM.YYYY HH:mm')\n      } else {\n        return 'Unbekannt'\n      }\n    },\n    editPatientStammdaten(): void {\n      this.showChangePatientStammdatenForm = true\n    },\n    handleActionClick(e: { key: string }) {\n      switch (e.key) {\n        case 'SEND_TO_QUARANTINE':\n          this.$router.push({\n            name: 'request-quarantine',\n            params: { patientId: this.patient?.id || '' },\n          })\n          break\n        case 'ARRANGE_TEST':\n          this.scheduleTest()\n          break\n      }\n    },\n    scheduleTest() {\n      if (this.patient) {\n        Api.createOrderTestEventUsingPost({\n          patientId: this.patient.id,\n        })\n          .then(() => {\n            this.$notification.success({\n              message: 'Test angefordert',\n              description: '',\n            })\n            this.loadData()\n          })\n          .catch(() => {\n            this.$notification.error({\n              message: 'Es ist ein Fehler aufgetreten',\n              description: '',\n            })\n          })\n      }\n    },\n    addExposureContact() {\n      this.exposureContactInEditing = {}\n\n      Vue.nextTick(() => {\n        this.exposureContactForm.resetFields()\n        this.exposureContactForm.setFieldsValue({\n          source: this.patient,\n        })\n      })\n    },\n    showExposureContact(contactId: number) {\n      const contact = this.exposureContacts.find(\n        (contact: any) => contact.id === contactId\n      )\n\n      this.exposureContactInEditing = contact\n\n      Vue.nextTick(() => {\n        this.exposureContactForm.setFieldsValue(\n          map(contact as { [x: string]: any }, {\n            // source: patient => patient.id,\n            // contact: patient => patient.id,\n            dateOfContact: moment,\n          })\n        )\n      })\n    },\n    persistExposureContact(): Promise<boolean> {\n      const stringFromMoment = (value: Moment): string =>\n        value.format('YYYY-MM-DD')\n\n      return new Promise((resolve: (success: boolean) => void) => {\n        this.exposureContactForm.validateFields(\n          async (err: Error[], values: { [x: string]: any }) => {\n            if (err) {\n              resolve(false)\n              return\n            }\n\n            // Convert values to transport format\n            values = map(values, {\n              id: parseInt,\n              dateOfContact: stringFromMoment,\n            })\n\n            if (values.id) {\n              Object.assign(\n                this.exposureContactInEditing,\n                await Api.updateExposureContactUsingPut(values)\n              )\n            } else {\n              this.exposureContacts.push(\n                await Api.createExposureContactUsingPost(values)\n              )\n            }\n\n            resolve(true)\n          }\n        )\n      })\n    },\n    async removeExposureContact(contactId: number) {\n      await Api.removeExposureContactUsingDelete(contactId)\n      this.exposureContacts = this.exposureContacts.filter(\n        (contact) => contact.id !== contactId\n      )\n    },\n    showPatient(patientId: string) {\n      this.$router.push({ name: 'patient-detail', params: { id: patientId } })\n    },\n    moment,\n    getDate(date: string) {\n      return moment(date).format(this.dateFormat)\n    },\n  },\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\ntable {\n  border-collapse: separate;\n  border-spacing: 5px;\n\n  tr {\n    padding: 15px;\n\n    td:first-of-type {\n      padding-right: 15px;\n    }\n  }\n}\n\ntable.compact {\n  border-spacing: 15px 3px;\n}\n\n.inline-buttons > button {\n  margin-left: 2px;\n  margin-right: 2px;\n}\n\n.card-header {\n  padding: 16px 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: rgba(0, 0, 0, 0.85);\n  font-weight: 500;\n  font-size: 16px;\n  border-bottom: 1px solid #e8e8e8;\n}\n\n.card-header-subtitle {\n  font-size: 14px;\n  font-weight: normal;\n  color: rgba(0, 0, 0, 0.65);\n}\n</style>\n\n<style lang=\"scss\">\n.table-index-patients {\n  table {\n    width: unset;\n  }\n  .ant-table-tbody > tr > td {\n    border-bottom: none;\n    padding: 4px;\n  }\n}\n.ant-descriptions-item {\n  vertical-align: top;\n}\n</style>\n"]}]}