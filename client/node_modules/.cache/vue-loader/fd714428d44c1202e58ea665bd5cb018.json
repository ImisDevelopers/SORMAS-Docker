{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/Account.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/Account.vue","mtime":1586713315430},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/css-loader/dist/cjs.js","mtime":1584795993125},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584795993380},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/postcss-loader/src/index.js","mtime":1584795993354},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYmxlLWNvbnRhaW5lciB7CiAgd2lkdGg6IDEwMCU7Cn0K"},{"version":3,"sources":["Account.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA","file":"Account.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <a-card class=\"table-container\">\n    <h3>Eingeloggt: {{ username }}</h3>\n    <a-form\n      :form=\"registerUserForm\"\n      :layout=\"'horizontal'\"\n      :labelCol=\"{ span: 8 }\"\n      :wrapperCol=\"{ span: 16}\"\n      @submit.prevent=\"handleRegisterUser\"\n    >\n      <p>Füge einen Nutzer hinzu</p>\n      <a-form-item label=\"username\">\n        <a-input\n          v-decorator=\"['username', { rules: [{ required: true }] }]\"\n        />\n      </a-form-item>\n      <a-form-item label=\"password\">\n        <a-input\n          type=\"password\"\n          v-decorator=\"['password', { rules: [{ required: true }] }]\"\n        />\n      </a-form-item>\n      <a-form-item label=\"Rolle\">\n        <a-select\n          v-decorator=\"['userRole', { rules: [{ required: true }] }]\"\n        >\n          <a-select-option value=\"USER_ROLE_ADMIN\">Admin</a-select-option>\n          <a-select-option value=\"USER_ROLE_REGULAR\">Regular</a-select-option>\n        </a-select>\n      </a-form-item>\n      <a-button type=\"primary\" html-type=\"submit\">\n        Nutzer hinzufügen\n      </a-button>\n    </a-form>\n    <a-table\n      :columns=\"tableColumns\"\n      :dataSource=\"users()\"\n      :scroll=\"{x: 1, y: 0}\"\n      rowKey=\"email\"\n    >\n      <div slot=\"role\" slot-scope=\"role\">\n        {{ roleMapping[role]}}\n      </div>\n    </a-table>\n\n  </a-card>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport { UserRole } from '@/models'\nimport { authMapper } from '@/store/modules/auth.module'\n\nconst tableColumns = [\n  // {\n  //   title: 'Vorname',\n  //   key: 'firstName',\n  //   dataIndex: 'firstName',\n  // },\n  // {\n  //   title: 'Nachname',\n  //   key: 'lastName',\n  //   dataIndex: 'lastName',\n  // },\n  {\n    title: 'Username',\n    key: 'username',\n    dataIndex: 'username',\n  },\n  {\n    title: 'Role',\n    key: 'userrole',\n    dataIndex: 'role',\n    scopedSlots: { customRender: 'role' },\n  },\n]\n\nconst roleMapping: { [key in UserRole]: string } = {\n  USER_ROLE_ADMIN: 'Admin',\n  USER_ROLE_REGULAR: 'Normal',\n}\n\nexport default Vue.extend({\n  name: 'Account',\n  data() {\n    return {\n      tableColumns,\n      roleMapping,\n      registerUserForm: this.$form.createForm(this),\n    }\n  },\n  computed: {\n    ...authMapper.mapState({\n      user: 'user',\n      institution: 'institution',\n    }),\n    ...authMapper.mapGetters({\n      users: 'institutionUsers',\n    }),\n    username(): string {\n      return this.user?.username || ''\n    },\n  },\n  methods: {\n    ...authMapper.mapActions({\n      registerUser: 'registerUserForInstitution',\n    }),\n    handleRegisterUser() {\n      this.registerUserForm.validateFields(async(err: Error, values: any) => {\n        if (err) {\n          return\n        }\n        this.registerUser({ user: values, instance: this })\n      })\n    },\n  },\n})\n</script>\n\n<style>\n  .table-container {\n    width: 100%;\n  }\n</style>\n"]}]}