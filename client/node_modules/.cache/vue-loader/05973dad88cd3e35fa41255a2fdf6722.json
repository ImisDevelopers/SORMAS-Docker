{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/LaboratoryInput.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/LaboratoryInput.vue","mtime":1586713315430},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKaW1wb3J0IEFwaSBmcm9tICdAL2FwaScKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnCmltcG9ydCB7IExhYm9yYXRvcnkgfSBmcm9tICdAL2FwaS9Td2FnZ2VyQXBpJwoKLyoqCiAqIElucHV0IHRoYXQgc3VwcG9ydHMgMWQgYW5kIDJkIEJhcmNvZGVzCiAqCiAqIHByb3BzOgogKiAtIHZhbGlkYXRpb246IHB1dCBpbiB2LWRlY29yYXRvciBvYmplY3QKICovCgpleHBvcnQgaW50ZXJmYWNlIFN0YXRlIHsKICByZXN1bHQ6IExhYm9yYXRvcnlbXTsKfQoKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgbmFtZTogJ0xhYm9yYXRvcnlJbnB1dCcsCiAgcHJvcHM6IFsnaW5pdGlhbExhYnMnLCAndmFsaWRhdGlvbicsICdsYWJlbCcsICdmb3JtJywgJ2Rpc2FibGVkJ10sCiAgZGF0YSgpOiBTdGF0ZSB7CiAgICByZXR1cm4gewogICAgICByZXN1bHQ6IFtdLAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGluaXRpYWxMYWJzOiBmdW5jdGlvbihsYWJzKSB7CiAgICAgIGlmIChsYWJzICYmIGxhYnMubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMucmVzdWx0ID0gbGFicwogICAgICB9CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgaGFuZGxlU2VhcmNoKHZhbHVlOiBzdHJpbmcpIHsKICAgICAgbGV0IHJlc3VsdDogTGFib3JhdG9yeVtdCiAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUubGVuZ3RoIDwgMikgewogICAgICAgIHJlc3VsdCA9IFtdCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzdWx0ID0gYXdhaXQgQXBpLmFwaS5xdWVyeUFsbExhYm9yYXRvcmllc1VzaW5nR2V0KHsgaWQ6IHZhbHVlIH0pCiAgICAgIH0KICAgICAgdGhpcy5yZXN1bHQgPSByZXN1bHQKICAgIH0sCiAgfSwKfSkK"},{"version":3,"sources":["LaboratoryInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LaboratoryInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a-form-item :label=\"label\">\n    <a-auto-complete @search=\"handleSearch\" placeholder=\"Suche Ã¼ber ID, Name, Stadt\" v-decorator=\"validation\"\n                     :disabled=\"disabled\">\n      <template slot=\"dataSource\">\n        <a-select-option v-for=\"laboratory in result\" :key=\"laboratory.id\">\n          {{laboratory.name}} ({{laboratory.city}})\n        </a-select-option>\n      </template>\n    </a-auto-complete>\n  </a-form-item>\n</template>\n\n<script lang=\"ts\">\n\nimport Api from '@/api'\nimport Vue from 'vue'\nimport { Laboratory } from '@/api/SwaggerApi'\n\n/**\n * Input that supports 1d and 2d Barcodes\n *\n * props:\n * - validation: put in v-decorator object\n */\n\nexport interface State {\n  result: Laboratory[];\n}\n\nexport default Vue.extend({\n  name: 'LaboratoryInput',\n  props: ['initialLabs', 'validation', 'label', 'form', 'disabled'],\n  data(): State {\n    return {\n      result: [],\n    }\n  },\n  watch: {\n    initialLabs: function(labs) {\n      if (labs && labs.length > 0) {\n        this.result = labs\n      }\n    },\n  },\n  methods: {\n    async handleSearch(value: string) {\n      let result: Laboratory[]\n      if (!value || value.length < 2) {\n        result = []\n      } else {\n        result = await Api.api.queryAllLaboratoriesUsingGet({ id: value })\n      }\n      this.result = result\n    },\n  },\n})\n</script>\n\n<style>\n\n</style>\n"]}]}