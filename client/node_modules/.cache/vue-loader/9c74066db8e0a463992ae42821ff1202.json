{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterTest.vue","mtime":1586724179216},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwoKaW1wb3J0IEFwaSBmcm9tICdAL2FwaScKaW1wb3J0IEJhcmNvZGVJbnB1dCBmcm9tICcuLi9jb21wb25lbnRzL1Rlc3RJbnB1dCcKaW1wb3J0IFBhdGllbnRJbnB1dCBmcm9tICcuLi9jb21wb25lbnRzL1BhdGllbnRJbnB1dCcKaW1wb3J0IExhYm9yYXRvcnlJbnB1dCBmcm9tICcuLi9jb21wb25lbnRzL0xhYm9yYXRvcnlJbnB1dCcKaW1wb3J0IHsgdGVzdFR5cGVzIH0gZnJvbSAnQC9tb2RlbHMvdGVzdC10eXBlcycKaW1wb3J0IENvbXBvbmVudCBmcm9tICd2dWUtY2xhc3MtY29tcG9uZW50JwppbXBvcnQgeyB0ZXN0UmVzdWx0cyB9IGZyb20gJ0AvbW9kZWxzL2V2ZW50LXR5cGVzJwoKQENvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgQmFyY29kZUlucHV0LAogICAgUGF0aWVudElucHV0LAogICAgTGFib3JhdG9yeUlucHV0LAogIH0sCn0pCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZ2lzdGVyVGVzdCBleHRlbmRzIFZ1ZSB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHRoaXMuJGZvcm0uY3JlYXRlRm9ybSh0aGlzKSwKICAgICAgY3JlYXRlZExhYlRlc3Q6IG51bGwsCiAgICAgIGNyZWF0ZWRMYWJUZXN0U3RhdHVzOiAnJywKICAgICAgdGVzdFR5cGVzOiB0ZXN0VHlwZXMsCiAgICB9CiAgfQoKICBoYW5kbGVTdWJtaXQoKSB7CiAgICB0aGlzLmZvcm0udmFsaWRhdGVGaWVsZHMoKGVyciwgdmFsdWVzKSA9PiB7CiAgICAgIGlmIChlcnIpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCByZXF1ZXN0ID0gewogICAgICAgIC4uLnZhbHVlcywKICAgICAgfQoKICAgICAgQXBpLmFwaS5jcmVhdGVUZXN0Rm9yUGF0aWVudFVzaW5nUG9zdChyZXF1ZXN0KS50aGVuKGxhYlRlc3QgPT4gewogICAgICAgIHRoaXMuY3JlYXRlZExhYlRlc3QgPSBsYWJUZXN0CiAgICAgICAgdGhpcy5jcmVhdGVkTGFiVGVzdFN0YXR1cyA9IHRlc3RSZXN1bHRzCiAgICAgICAgICAuZmluZCh0ZXN0UmVzdWx0ID0+IHRlc3RSZXN1bHQuaWQgPT09IGxhYlRlc3QudGVzdFN0YXR1cykKICAgICAgICAgIC5sYWJlbAoKICAgICAgICBjb25zdCBub3RpZmljYXRpb24gPSB7CiAgICAgICAgICBtZXNzYWdlOiAnVGVzdCBhbmdlbGVndCB1bmQgdmVya27DvHBmdC4nLAogICAgICAgICAgZGVzY3JpcHRpb246CiAgICAgICAgICAgICdEZXIgVGVzdCAnICsgbGFiVGVzdC50ZXN0SWQgKyAnIHd1cmRlIGVyZm9sZ3JlaWNoIGFuZ2VsZWd0IHVuZCBtaXQgZGVtIFBhdGllbnRlbiB2ZXJrbsO8cGZ0LicsCiAgICAgICAgfQogICAgICAgIHRoaXMuJG5vdGlmaWNhdGlvbi5zdWNjZXNzKG5vdGlmaWNhdGlvbikKICAgICAgICB0aGlzLmZvcm0ucmVzZXRGaWVsZHMoKQogICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IHsKICAgICAgICAgIG1lc3NhZ2U6ICdGZWhsZXIgYmVpbSBBbmxlZ2VuIGRlcyBUZXN0cy4nLAogICAgICAgICAgZGVzY3JpcHRpb246IGVyci5tZXNzYWdlLAogICAgICAgIH0KICAgICAgICB0aGlzLiRub3RpZmljYXRpb24uZXJyb3Iobm90aWZpY2F0aW9uKQogICAgICB9KQogICAgfSkKICB9Cn0K"},{"version":3,"sources":["RegisterTest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RegisterTest.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <a-card style=\"max-width: 500px; margin: 2rem auto; min-height: 300px\">\n    <a-form\n      :label-col=\"{ span: 6 }\"\n      :wrapper-col=\"{ span: 18 }\"\n      :colon=\"false\"\n      :form=\"form\"\n      @submit.prevent=\"handleSubmit\"\n    >\n\n      <LaboratoryInput\n        label=\"Labor\"\n        :form=\"form\"\n        :validation=\"['laboratoryId',{ rules: [{\n            required: true,\n            message: 'Bitte w채hlen Sie ein Labor aus.'\n          }]}]\"\n      />\n\n      <PatientInput\n        label=\"Patienten-ID\"\n        :form=\"form\"\n        :validation=\"['patientId',{ rules: [{\n          required: true,\n          message: 'Bitte geben Sie die Patienten-ID ein.'\n        }]}]\"\n      />\n\n      <!-- Test ID -->\n      <a-form-item label=\"Test-ID\">\n        <a-input v-decorator=\"['testId', { rules: [{\n          required: true,\n          message: 'Bitte geben Sie die Test-ID ein.'\n        }]}]\" placeholder=\"Neue Test ID\"/>\n      </a-form-item>\n\n      <!-- TestType -->\n      <a-form-item label=\"Testtyp\">\n        <a-radio-group\n          class=\"imis-radio-group\"\n          v-decorator=\"['testType', { rules: [{\n              required: true,\n              message: 'Bitte geben Sie den Typen des Tests an.'\n            }]}]\">\n          <a-radio v-for=\"testTypeItem in testTypes\" :value=\"testTypeItem.id\" :key=\"testTypeItem.id\">\n            <a-icon :type=\"testTypeItem.icon\"/>\n            {{testTypeItem.label}}\n          </a-radio>\n        </a-radio-group>\n      </a-form-item>\n\n      <!-- Kommentar -->\n      <a-form-item label=\"Kommentar\">\n        <a-textarea\n          v-decorator=\"['comment']\"\n          placeholder=\"Kommentar hinzuf체gen\"\n          :autoSize=\"{ minRows: 3, maxRows: 5 }\"\n        />\n      </a-form-item>\n\n      <!-- Submit -->\n      <a-divider/>\n      <a-form-item :wrapper-col=\"{ span: 24, offset: 0 }\">\n        <a-button type=\"primary\" html-type=\"submit\">\n          Speichern\n        </a-button>\n      </a-form-item>\n    </a-form>\n\n    <!-- Confirmation after creation -->\n    <div v-if=\"createdLabTest\">\n      <a-icon type=\"check-circle\" :style=\"{ fontSize: '38px', color: '#08c' }\" style=\"margin-bottom: 20px\"/>\n      <div>\n        <div>Der Test wurde erfolgreich angelegt.</div>\n        <br/>\n        <div>Test ID: {{ createdLabTest.testId }}</div>\n        <div>Test Status: {{ createdLabTestStatus }}</div>\n      </div>\n    </div>\n  </a-card>\n</template>\n\n<script>\nimport Vue from 'vue'\n\nimport Api from '@/api'\nimport BarcodeInput from '../components/TestInput'\nimport PatientInput from '../components/PatientInput'\nimport LaboratoryInput from '../components/LaboratoryInput'\nimport { testTypes } from '@/models/test-types'\nimport Component from 'vue-class-component'\nimport { testResults } from '@/models/event-types'\n\n@Component({\n  components: {\n    BarcodeInput,\n    PatientInput,\n    LaboratoryInput,\n  },\n})\nexport default class RegisterTest extends Vue {\n  data() {\n    return {\n      form: this.$form.createForm(this),\n      createdLabTest: null,\n      createdLabTestStatus: '',\n      testTypes: testTypes,\n    }\n  }\n\n  handleSubmit() {\n    this.form.validateFields((err, values) => {\n      if (err) {\n        return\n      }\n      const request = {\n        ...values,\n      }\n\n      Api.api.createTestForPatientUsingPost(request).then(labTest => {\n        this.createdLabTest = labTest\n        this.createdLabTestStatus = testResults\n          .find(testResult => testResult.id === labTest.testStatus)\n          .label\n\n        const notification = {\n          message: 'Test angelegt und verkn체pft.',\n          description:\n            'Der Test ' + labTest.testId + ' wurde erfolgreich angelegt und mit dem Patienten verkn체pft.',\n        }\n        this.$notification.success(notification)\n        this.form.resetFields()\n      }).catch(err => {\n        const notification = {\n          message: 'Fehler beim Anlegen des Tests.',\n          description: err.message,\n        }\n        this.$notification.error(notification)\n      })\n    })\n  }\n}\n</script>\n\n<style></style>\n"]}]}