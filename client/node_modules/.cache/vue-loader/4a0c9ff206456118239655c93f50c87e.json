{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/PatientInput.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/PatientInput.vue","mtime":1589906836721},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgQXBpIGZyb20gJ0AvYXBpJwppbXBvcnQgVnVlIGZyb20gJ3Z1ZScKaW1wb3J0IG1peGlucyBmcm9tICd2dWUtdHlwZWQtbWl4aW5zJwppbXBvcnQgeyBTZWxlY3QgfSBmcm9tICdhbnQtZGVzaWduLXZ1ZScKaW1wb3J0IHsgUGF0aWVudCB9IGZyb20gJ0AvYXBpL1N3YWdnZXJBcGknCmltcG9ydCB7IEZvcm1Db250cm9sTWl4aW4gfSBmcm9tICdAL3V0aWwvZm9ybXMnCgpkZWNsYXJlIGludGVyZmFjZSBTdGF0ZSB7CiAgcmVzdWx0OiB7CiAgICBsYWJlbD86IHN0cmluZwogICAgdmFsdWU/OiBzdHJpbmcKICB9W10KfQoKLyoqCiAqIEF1dG9jb21wbGV0ZSBmb3IgUGF0aWVudHMKICoKICogcHJvcHM6CiAqIC0gdmFsaWRhdGlvbjogcHV0IGluIHYtZGVjb3JhdG9yIG9iamVjdAogKi8KCmV4cG9ydCBkZWZhdWx0IG1peGlucyhGb3JtQ29udHJvbE1peGluKS5leHRlbmQoewogIG5hbWU6ICdQYXRpZW50SW5wdXQnLAogIGluaGVyaXRBdHRyczogZmFsc2UsCiAgcHJvcHM6IHsKICAgIHBsYWNlaG9sZGVyOiB7IGRlZmF1bHQ6ICdTdWNoZSDDvGJlciBJRCwgTmFtZSwgVGVsZWZvbiwgTWFpbCcgfSwKICAgIHZhbHVlOiB7IGRlZmF1bHQ6ICcnIH0sCiAgICBmaWx0ZXJPcHRpb246IHsgZGVmYXVsdDogZmFsc2UgfSwKICB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAndmFsdWUnLAogICAgZXZlbnQ6ICdjaGFuZ2UnLAogIH0sCiAgZmllbGRWYWx1ZUNvbnZlcnQodmFsOiBhbnkpOiBzdHJpbmcgewogICAgY29uc3QgaGFzUHJvcCA9IChvYmo6IFJlY29yZDxzdHJpbmcsIGFueT4sIHByb3A6IHN0cmluZyk6IGJvb2xlYW4gPT4KICAgICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkKCiAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiYgaGFzUHJvcCh2YWwsICdpZCcpKSB7CiAgICAgIGNvbnN0IHBhdGllbnQgPSB2YWwgYXMgUGF0aWVudAogICAgICB0aGlzLnJlc3VsdCA9IFsKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogdGhpcy5nZXRQYXRpZW50TGFiZWwocGF0aWVudCksCiAgICAgICAgICB2YWx1ZTogcGF0aWVudC5pZCwKICAgICAgICB9LAogICAgICBdCiAgICAgIHJldHVybiBwYXRpZW50LmlkIHx8ICcnCiAgICB9IGVsc2UgewogICAgICByZXR1cm4gdmFsCiAgICB9CiAgfSwKICBpbmplY3Q6IHsKICAgIEZvcm1Db250ZXh0OiB7IGRlZmF1bHQ6ICgpID0+ICh7fSkgfSwKICB9LAogIGRhdGEoKTogU3RhdGUgewogICAgcmV0dXJuIHsKICAgICAgcmVzdWx0OiBbXSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBleHRlcm5MaXN0ZW5lcnMoKSB7CiAgICAgIGNvbnN0IHsgc2VhcmNoLCAuLi5saXN0ZW5lcnMgfSA9IHRoaXMuJGxpc3RlbmVycwogICAgICByZXR1cm4gbGlzdGVuZXJzCiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UGF0aWVudExhYmVsKHBhdGllbnREYXRhOiBQYXRpZW50KSB7CiAgICAgIHJldHVybiBgJHtwYXRpZW50RGF0YS5maXJzdE5hbWV9ICR7cGF0aWVudERhdGEubGFzdE5hbWV9ICgke3BhdGllbnREYXRhLmlkfSlgCiAgICB9LAogICAgYXN5bmMgaGFuZGxlU2VhcmNoKHZhbHVlOiBzdHJpbmcpIHsKICAgICAgbGV0IHJlc3VsdDogUGF0aWVudFtdCiAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUubGVuZ3RoIDwgMikgewogICAgICAgIHJlc3VsdCA9IFtdCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzdWx0ID0gYXdhaXQgQXBpLnF1ZXJ5UGF0aWVudHNTaW1wbGVVc2luZ1Bvc3QoewogICAgICAgICAgcXVlcnk6IHZhbHVlLAogICAgICAgICAgb2Zmc2V0UGFnZTogMCwKICAgICAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgICAgIG9yZGVyOiAnYXNjJywKICAgICAgICAgIG9yZGVyQnk6ICdsYXN0TmFtZScsCiAgICAgICAgfSkKICAgICAgfQogICAgICB0aGlzLnJlc3VsdCA9IHJlc3VsdC5tYXAoKHBhdGllbnQ6IFBhdGllbnQpID0+ICh7CiAgICAgICAgbGFiZWw6IHRoaXMuZ2V0UGF0aWVudExhYmVsKHBhdGllbnQpLAogICAgICAgIHZhbHVlOiBwYXRpZW50LmlkLAogICAgICB9KSkKICAgIH0sCiAgfSwKfSkK"},{"version":3,"sources":["PatientInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PatientInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <a-select\n    ref=\"input\"\n    v-bind=\"$attrs\"\n    v-on=\"externListeners\"\n    :defaultActiveFirstOption=\"false\"\n    :placeholder=\"placeholder\"\n    :showSearch=\"true\"\n    :showArrow=\"false\"\n    :filterOption=\"filterOption\"\n    :value=\"value\"\n    @search=\"handleSearch\"\n  >\n    <a-select-option v-for=\"entry in result\" :key=\"entry.value\">\n      {{ entry.label }}\n    </a-select-option>\n  </a-select>\n</template>\n\n<script lang=\"ts\">\nimport Api from '@/api'\nimport Vue from 'vue'\nimport mixins from 'vue-typed-mixins'\nimport { Select } from 'ant-design-vue'\nimport { Patient } from '@/api/SwaggerApi'\nimport { FormControlMixin } from '@/util/forms'\n\ndeclare interface State {\n  result: {\n    label?: string\n    value?: string\n  }[]\n}\n\n/**\n * Autocomplete for Patients\n *\n * props:\n * - validation: put in v-decorator object\n */\n\nexport default mixins(FormControlMixin).extend({\n  name: 'PatientInput',\n  inheritAttrs: false,\n  props: {\n    placeholder: { default: 'Suche Ã¼ber ID, Name, Telefon, Mail' },\n    value: { default: '' },\n    filterOption: { default: false },\n  },\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  fieldValueConvert(val: any): string {\n    const hasProp = (obj: Record<string, any>, prop: string): boolean =>\n      Object.prototype.hasOwnProperty.call(obj, prop)\n\n    if (typeof val === 'object' && hasProp(val, 'id')) {\n      const patient = val as Patient\n      this.result = [\n        {\n          label: this.getPatientLabel(patient),\n          value: patient.id,\n        },\n      ]\n      return patient.id || ''\n    } else {\n      return val\n    }\n  },\n  inject: {\n    FormContext: { default: () => ({}) },\n  },\n  data(): State {\n    return {\n      result: [],\n    }\n  },\n  computed: {\n    externListeners() {\n      const { search, ...listeners } = this.$listeners\n      return listeners\n    },\n  },\n  methods: {\n    getPatientLabel(patientData: Patient) {\n      return `${patientData.firstName} ${patientData.lastName} (${patientData.id})`\n    },\n    async handleSearch(value: string) {\n      let result: Patient[]\n      if (!value || value.length < 2) {\n        result = []\n      } else {\n        result = await Api.queryPatientsSimpleUsingPost({\n          query: value,\n          offsetPage: 0,\n          pageSize: 10,\n          order: 'asc',\n          orderBy: 'lastName',\n        })\n      }\n      this.result = result.map((patient: Patient) => ({\n        label: this.getPatientLabel(patient),\n        value: patient.id,\n      }))\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\"></style>\n"]}]}