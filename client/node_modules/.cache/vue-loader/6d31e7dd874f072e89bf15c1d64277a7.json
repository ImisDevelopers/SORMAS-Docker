{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/SendToQuarantine.vue?vue&type=style&index=1&id=59c4904c&lang=scss&scoped=true&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/SendToQuarantine.vue","mtime":1589906836724},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/css-loader/dist/cjs.js","mtime":1584795993125},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584795993380},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/postcss-loader/src/index.js","mtime":1584795993354},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/sass-loader/dist/cjs.js","mtime":1586724165268},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRvd25sb2FkLWFsbC1idXR0b24gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDkwcHg7CiAgcmlnaHQ6IDI1cHg7Cn0KCi5jbGVhci1hbGwtYnV0dG9uIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAxNTBweDsKICByaWdodDogMjVweDsKfQo="},{"version":3,"sources":["SendToQuarantine.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SendToQuarantine.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"send-to-quarantine\">\n    <a-modal\n      v-model=\"confirmVisible\"\n      title=\"Bitte bestätigen\"\n      ok-text=\"Ja\"\n      cancel-text=\"Abbrechen\"\n      @ok=\"updatePatients\"\n    >\n      <p>\n        Sollen die Quarantänen von {{ quarantinesByZip.length }} Patienten in\n        den Status 'Quarantäne angeordnet' überführt werden?\n      </p>\n      <a-form :form=\"form\">\n        <a-form-item label=\"Datum der Anordnung (optional):\">\n          <DateInput\n            :defaultValue=\"today\"\n            v-decorator=\"[\n              'eventDate',\n              {\n                rules: [\n                  {\n                    required: false,\n                    message: 'Datum der Anordnung',\n                  },\n                ],\n              },\n            ]\"\n          />\n        </a-form-item>\n      </a-form>\n    </a-modal>\n    <a-button\n      class=\"download-all-button\"\n      type=\"primary\"\n      @click=\"downloadAll\"\n      icon=\"download\"\n      size=\"large\"\n    >\n      Alle Herunterladen\n    </a-button>\n    <a-button\n      class=\"clear-all-button\"\n      type=\"primary\"\n      @click=\"showModal\"\n      icon=\"play-circle\"\n      size=\"large\"\n    >\n      Quarantäne anordnen\n    </a-button>\n    <h2 style=\"margin-top: 30px;\">\n      Es wurden {{ quarantinesByZip.length }} Patienten für eine Quarantäne\n      vorgemerkt.\n    </h2>\n    <a-card\n      style=\"max-width: 500px; margin: 2rem auto;\"\n      v-for=\"quarantinesByZip of quarantinesByZip\"\n      :title=\"\n        'PLZ ' +\n        quarantinesByZip.zip +\n        (quarantinesByZip.cityName ? ' - ' + quarantinesByZip.cityName : '')\n      \"\n      align=\"left\"\n      :key=\"quarantinesByZip.zip\"\n    >\n      <a-table\n        :columns=\"columnsQuarantines\"\n        :dataSource=\"quarantinesByZip.quarantines\"\n        :rowKey=\"(contact) => contact.id\"\n        :pagination=\"false\"\n      >\n        <template slot=\"until\" slot-scope=\"until\">\n          {{ moment(until).format('DD.MM.YYYY') }}\n        </template>\n        <template slot=\"name\" slot-scope=\"patient\">\n          <a @click=\"showPatient(patient.id)\"\n            >{{ patient.firstName }} {{ patient.lastName }}</a\n          >\n        </template>\n        <template slot=\"timestamp\" slot-scope=\"timestamp\">\n          {{ moment(timestamp).format('DD.MM.YYYY HH:mm') }}\n        </template>\n      </a-table>\n    </a-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Api from '@/api'\nimport Vue from 'vue'\nimport { QuarantineIncident } from '@/api/SwaggerApi'\nimport { Column } from 'ant-design-vue/types/table/column'\nimport moment from 'moment'\nimport { getPlzs } from '@/util/plz-service'\nimport { downloadCsv } from '@/util/export-service'\nimport DateInput from '../components/DateInput.vue'\n\nconst columnsQuarantines = [\n  {\n    title: 'Quarantäne bis',\n    key: 'until',\n    scopedSlots: {\n      customRender: 'until',\n    },\n  },\n  {\n    title: 'Name',\n    key: 'name',\n    dataIndex: 'patient',\n    scopedSlots: {\n      customRender: 'name',\n    },\n  },\n  {\n    title: 'Eingereicht um',\n    key: 'timestmap',\n    dataIndex: 'versionTimestamp',\n    scopedSlots: {\n      customRender: 'timestamp',\n    },\n  },\n]\n\ninterface QuarantinesForZip {\n  zip: string\n  quarantines: QuarantineIncident[]\n  cityName: string\n}\n\ninterface State {\n  quarantinesByZip: QuarantinesForZip[]\n  columnsQuarantines: Partial<Column>[]\n  confirmVisible: boolean // eslint-disable-next-line\n  form: any; \n  today: moment.Moment\n}\n\nexport default Vue.extend({\n  name: 'SendToQuarantine',\n  components: {\n    DateInput,\n  },\n  async created() {\n    const quarantineIncidents = await Api.getSelectedForQuarantineUsingGet()\n    const quarantinesByZip: QuarantinesForZip[] = []\n    for (const quarantineIncident of quarantineIncidents) {\n      const zip = quarantineIncident?.patient?.zip || 'Unbekannt'\n      let byZip = quarantinesByZip.find((quarantine) => quarantine.zip === zip)\n      if (!byZip) {\n        byZip = {\n          zip: zip,\n          quarantines: [],\n          cityName: '',\n        }\n        quarantinesByZip.push(byZip)\n      }\n      byZip.quarantines.push(quarantineIncident)\n    }\n    this.quarantinesByZip = quarantinesByZip\n    for (const quarantinesForZip of quarantinesByZip) {\n      getPlzs(quarantinesForZip.zip).then((plzs) => {\n        if (plzs && plzs.length > 0) {\n          quarantinesForZip.cityName = plzs[0].fields.note\n        }\n      })\n    }\n  },\n  data(): State {\n    return {\n      quarantinesByZip: [],\n      columnsQuarantines: columnsQuarantines,\n      confirmVisible: false,\n      form: this.$form.createForm(this),\n      today: moment(),\n    }\n  },\n  methods: {\n    moment,\n    showPatient(patientId: string) {\n      this.$router.push({ name: 'patient-detail', params: { id: patientId } })\n    },\n    downloadAll() {\n      const header = 'PLZ;Quarantäne bis;Vorname;Nachname;Adresse'\n      let content = ''\n      for (const quarantineIncidents of this.quarantinesByZip) {\n        content +=\n          quarantineIncidents.quarantines\n            .map((quarantine) => {\n              const patient = quarantine.patient\n              if (patient) {\n                const address = `${patient.street} ${patient.houseNumber} ${patient.zip} ${patient.city}`\n                return `${quarantineIncidents.zip};${moment(\n                  quarantine.until\n                ).format('DD.MM.YYYY')};${patient?.firstName};${\n                  patient?.lastName\n                };${address}`\n              } else {\n                console.warn('Quarantine without patient')\n                return ''\n              }\n            })\n            .join('\\n') + '\\n'\n      }\n      const filename =\n        moment().format('YYYY_MM_DD') + '_quarantaene_anordnung.csv'\n      downloadCsv(header + '\\n' + content, filename)\n    },\n    updatePatients() {\n      this.confirmVisible = false\n      const patientIds: string[] = []\n      for (const quarantinesByZip of this.quarantinesByZip) {\n        patientIds.push(\n          ...quarantinesByZip.quarantines.map(\n            (quarantine) => quarantine.patient?.id || ''\n          )\n        )\n      }\n      const request = {\n        patientIds: patientIds,\n        eventDate: this.form.getFieldValue('eventDate')\n          ? this.form.getFieldValue('eventDate').format('YYYY-MM-DD')\n          : undefined,\n      }\n      Api.sendToQuarantineUsingPost(request)\n        .then(() => {\n          const h = this.$createElement\n          this.$success({\n            title: 'Quarantänen aktualisiert.',\n            content: h('div', {}, [\n              h(\n                'div',\n                `Die Quarantänen von ${patientIds.length} Patienten wurden aktualisiert.`\n              ),\n            ]),\n          })\n          this.quarantinesByZip = []\n        })\n        .catch((error: Error) => {\n          const notification = {\n            message: 'Fehler beim Aktualisieren der Quarantänen',\n            description: error.message,\n          }\n          this.$notification.error(notification)\n        })\n    },\n    showModal() {\n      this.confirmVisible = true\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.send-to-quarantine {\n  .ant-card-body {\n    padding: 0;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n.download-all-button {\n  position: absolute;\n  top: 90px;\n  right: 25px;\n}\n\n.clear-all-button {\n  position: absolute;\n  top: 150px;\n  right: 25px;\n}\n</style>\n"]}]}