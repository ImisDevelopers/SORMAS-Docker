{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientDetails.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientDetails.vue","mtime":1586724179216},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCcKaW1wb3J0IEFwaSBmcm9tICdAL2FwaScKaW1wb3J0IHsgTGFiVGVzdCwgUGF0aWVudCwgVGltZXN0YW1wIH0gZnJvbSAnQC9hcGkvU3dhZ2dlckFwaScKaW1wb3J0IHsgcGF0aWVudE1hcHBlciB9IGZyb20gJ0Avc3RvcmUvbW9kdWxlcy9wYXRpZW50cy5tb2R1bGUnCmltcG9ydCB7IEV2ZW50VHlwZUl0ZW0sIGV2ZW50VHlwZXMsIHRlc3RSZXN1bHRzLCBUZXN0UmVzdWx0VHlwZSB9IGZyb20gJ0AvbW9kZWxzL2V2ZW50LXR5cGVzJwppbXBvcnQgeyBTWU1QVE9NUyB9IGZyb20gJ0AvbW9kZWxzL3N5bXB0b21zJwppbXBvcnQgeyBQUkVfSUxMTkVTU0VTIH0gZnJvbSAnQC9tb2RlbHMvcHJlLWlsbG5lc3NlcycKaW1wb3J0IHsgQ29sdW1uIH0gZnJvbSAnYW50LWRlc2lnbi12dWUvdHlwZXMvdGFibGUvY29sdW1uJwppbXBvcnQgeyBUZXN0VHlwZUl0ZW0sIHRlc3RUeXBlcyB9IGZyb20gJ0AvbW9kZWxzL3Rlc3QtdHlwZXMnCgpjb25zdCBjb2x1bW5zVGVzdHM6IFBhcnRpYWw8Q29sdW1uPltdID0gWwogIHsKICAgIHRpdGxlOiAnVGVzdCBJRCcsCiAgICBkYXRhSW5kZXg6ICd0ZXN0SWQnLAogICAga2V5OiAndGVzdElkJywKICB9LCB7CiAgICB0aXRsZTogJ1Rlc3QgVHlwJywKICAgIGRhdGFJbmRleDogJ3Rlc3RUeXBlJywKICAgIGtleTogJ3Rlc3RUeXBlJywKICAgIHNjb3BlZFNsb3RzOiB7CiAgICAgIGN1c3RvbVJlbmRlcjogJ3Rlc3RUeXBlJywKICAgIH0sCiAgfSwgewogICAgdGl0bGU6ICdUZXN0IFN0YXR1cycsCiAgICBkYXRhSW5kZXg6ICd0ZXN0U3RhdHVzJywKICAgIGtleTogJ3Rlc3RTdGF0dXMnLAogICAgc2NvcGVkU2xvdHM6IHsKICAgICAgY3VzdG9tUmVuZGVyOiAndGVzdFN0YXR1cycsCiAgICB9LAogIH0sIHsKICAgIHRpdGxlOiAnS29tbWVudGFyJywKICAgIGRhdGFJbmRleDogJ2NvbW1lbnQnLAogICAga2V5OiAnY29tbWVudCcsCiAgfSwKXQoKaW50ZXJmYWNlIFN0YXRlIHsKICBwYXRpZW50OiB1bmRlZmluZWQgfCBQYXRpZW50OwogIHBhdGllbnRTdGF0dXM6IEV2ZW50VHlwZUl0ZW0gfCB1bmRlZmluZWQ7CiAgZXZlbnRUeXBlczogYW55W107CiAgc3ltcHRvbXM6IHN0cmluZ1tdOwogIHByZUlsbG5lc3Nlczogc3RyaW5nW107CiAgZGF0ZU9mQmlydGg6IHN0cmluZzsKICBnZW5kZXI6IHN0cmluZzsKICB0ZXN0czogTGFiVGVzdFtdOwogIGNvbHVtbnNUZXN0czogUGFydGlhbDxDb2x1bW4+W107CiAgdGVzdFJlc3VsdHM6IFRlc3RSZXN1bHRUeXBlW107CiAgdGVzdFR5cGVzOiBUZXN0VHlwZUl0ZW1bXTsKfQoKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgbmFtZTogJ1BhdGllbnREZXRhaWxzJywKICBjb21wdXRlZDogewogICAgLi4ucGF0aWVudE1hcHBlci5tYXBHZXR0ZXJzKHsKICAgICAgcGF0aWVudEJ5SWQ6ICdwYXRpZW50QnlJZCcsCiAgICB9KSwKICB9LAoKICBhc3luYyBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkRGF0YSgpCiAgfSwKCiAgZGF0YSgpOiBTdGF0ZSB7CiAgICByZXR1cm4gewogICAgICBwYXRpZW50OiB1bmRlZmluZWQsCiAgICAgIHBhdGllbnRTdGF0dXM6IHVuZGVmaW5lZCwKICAgICAgZXZlbnRUeXBlczogZXZlbnRUeXBlcywKICAgICAgdGVzdFJlc3VsdHM6IHRlc3RSZXN1bHRzLAogICAgICB0ZXN0VHlwZXM6IHRlc3RUeXBlcywKICAgICAgc3ltcHRvbXM6IFtdLAogICAgICBwcmVJbGxuZXNzZXM6IFtdLAogICAgICBkYXRlT2ZCaXJ0aDogJycsCiAgICAgIGdlbmRlcjogJycsCiAgICAgIHRlc3RzOiBbXSwKICAgICAgY29sdW1uc1Rlc3RzLAogICAgfQogIH0sCgogIHdhdGNoOiB7CiAgICAnJHJvdXRlLnBhcmFtcy5pZCcoKSB7CiAgICAgIHRoaXMubG9hZERhdGEoKQogICAgfSwKICB9LAoKICBtZXRob2RzOiB7CiAgICAuLi5wYXRpZW50TWFwcGVyLm1hcE11dGF0aW9ucyh7CiAgICAgIHNldFBhdGllbnQ6ICdzZXRQYXRpZW50JywKICAgIH0pLAogICAgYXN5bmMgbG9hZERhdGEoKSB7CiAgICAgIC8vIExvYWQgUGF0aWVudAogICAgICBjb25zdCBwYXRpZW50SWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgICAgdGhpcy5wYXRpZW50ID0gdGhpcy5wYXRpZW50QnlJZCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpCiAgICAgIGlmICghdGhpcy5wYXRpZW50KSB7CiAgICAgICAgY29uc3QgcGF0aWVudCA9IGF3YWl0IEFwaS5hcGkuZ2V0UGF0aWVudEZvcklkVXNpbmdHZXQocGF0aWVudElkKQogICAgICAgIHRoaXMuc2V0UGF0aWVudChwYXRpZW50KQogICAgICAgIHRoaXMucGF0aWVudCA9IHBhdGllbnQKICAgICAgfQoKICAgICAgLy8gTWFwIHBhdGllbnQgYXR0cmlidXRlcyB0byB0aGVpciBkaXNwbGF5IHJlcHJlc2VudGF0aW9uCiAgICAgIHRoaXMucGF0aWVudFN0YXR1cyA9IGV2ZW50VHlwZXMuZmluZCh0eXBlID0+IHR5cGUuaWQgPT09IHRoaXMucGF0aWVudD8ucGF0aWVudFN0YXR1cykKICAgICAgdGhpcy5zeW1wdG9tcyA9IHRoaXMucGF0aWVudC5zeW1wdG9tcz8ubWFwKHN5bXB0b20gPT4gewogICAgICAgIGNvbnN0IHBhdGllbnRTeW1wdG9tID0gU1lNUFRPTVMuZmluZChzeW1wdG9tRmluZCA9PiBzeW1wdG9tRmluZC52YWx1ZSA9PT0gc3ltcHRvbSkKICAgICAgICByZXR1cm4gcGF0aWVudFN5bXB0b20gPyBwYXRpZW50U3ltcHRvbS5sYWJlbCA6IHN5bXB0b20KICAgICAgfSkgfHwgW10KICAgICAgdGhpcy5wcmVJbGxuZXNzZXMgPSB0aGlzLnBhdGllbnQucHJlSWxsbmVzc2VzPy5tYXAocHJlSWxsbmVzcyA9PiB7CiAgICAgICAgY29uc3QgcGF0aWVudElsbG5lc3MgPSBQUkVfSUxMTkVTU0VTLmZpbmQoaWxsbmVzcyA9PiBpbGxuZXNzLnZhbHVlID09PSBwcmVJbGxuZXNzKQogICAgICAgIHJldHVybiBwYXRpZW50SWxsbmVzcyA/IHBhdGllbnRJbGxuZXNzLmxhYmVsIDogcHJlSWxsbmVzcwogICAgICB9KSB8fCBbXQogICAgICB0aGlzLmRhdGVPZkJpcnRoID0gbW9tZW50KHRoaXMucGF0aWVudC5kYXRlT2ZCaXJ0aCkuZm9ybWF0KCdERC5NTS5ZWVlZJykKICAgICAgY29uc3QgcGF0aWVudEdlbmRlciA9IHRoaXMucGF0aWVudC5nZW5kZXIgfHwgJycKICAgICAgdGhpcy5nZW5kZXIgPSBwYXRpZW50R2VuZGVyID09PSAnbWFsZScgPyAnbcOkbm5saWNoJyA6IHBhdGllbnRHZW5kZXIgPT09ICdmZW1hbGUnID8gJ3dlaWJsaWNoJyA6ICdkaXZlcnMnCgogICAgICAvLyBUZXN0cwogICAgICB0aGlzLnRlc3RzID0gYXdhaXQgQXBpLmFwaS5nZXRMYWJUZXN0Rm9yUGF0aWVudFVzaW5nR2V0KHBhdGllbnRJZCkKICAgIH0sCiAgICB0aW1lbGluZUNvbG9yKGV2ZW50VHlwZTogYW55KSB7CiAgICAgIHN3aXRjaCAoZXZlbnRUeXBlKSB7CiAgICAgICAgY2FzZSAnVEVTVF9GSU5JU0hFRF9QT1NJVElWRSc6CiAgICAgICAgICByZXR1cm4gJ3JlZCcKICAgICAgICBjYXNlICdURVNUX0ZJTklTSEVEX05FR0FUSVZFJzoKICAgICAgICAgIHJldHVybiAnZ3JlZW4nCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiAnZ3JleScKICAgICAgfQogICAgfSwKICAgIGZvcm1hdFRpbWVzdGFtcCh0aW1lc3RhbXA6IFRpbWVzdGFtcCk6IHN0cmluZyB7CiAgICAgIGNvbnN0IG1vbWVudFRpbWVzdGFtcCA9IG1vbWVudCh0aW1lc3RhbXApCiAgICAgIGlmIChtb21lbnRUaW1lc3RhbXAuaXNWYWxpZCgpKSB7CiAgICAgICAgcmV0dXJuIG1vbWVudCh0aW1lc3RhbXApLmZvcm1hdCgnREQuTU0uWVlZWSBISDptbScpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICdVbmJla2FubnQnCiAgICAgIH0KICAgIH0sCiAgfSwKfSkK"},{"version":3,"sources":["PatientDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"PatientDetails.vue","sourceRoot":"src/views","sourcesContent":["<template style=\"margin: auto\">\n  <div>\n    <div style=\"max-width: 1020px; margin: 0 auto; padding: 0 1rem\">\n      <a-tabs\n        defaultActiveKey=\"1\"\n        v-if=\"patient\"\n      >\n        <a-tab-pane\n          tab=\"Stammdaten\"\n          key=\"1\"\n        >\n          <!-- display user data here-->\n          <div>\n\n            <!-- Allgemein & Adresse -->\n            <a-row :gutter=\"8\">\n              <a-col\n                :span=\"24\"\n                :md=\"12\"\n              >\n                <a-card\n                  title=\"Allgemein\"\n                  align=\"left\"\n                  :extra=\"this.patient.id\"\n                >\n                  <table>\n                    <tr>\n                      <td>Vorname:</td>\n                      <td>{{patient.firstName}}</td>\n                    </tr>\n                    <tr>\n                      <td>Nachname:</td>\n                      <td>{{patient.lastName}}</td>\n                    </tr>\n                    <tr>\n                      <td>Geburtsdatum:</td>\n                      <td>{{dateOfBirth}}</td>\n                    </tr>\n                    <tr>\n                      <td>Geschlecht:</td>\n                      <td>{{gender}}</td>\n                    </tr>\n                  </table>\n                </a-card>\n              </a-col>\n              <a-col\n                :span=\"24\"\n                :md=\"12\"\n              >\n                <a-card\n                  title=\"Adresse\"\n                  align=\"left\"\n                >\n                  <table>\n                    <tr>\n                      <td>Stra√üe:</td>\n                      <td>{{patient.street}}</td>\n                    </tr>\n                    <tr>\n                      <td>Hausnummer:</td>\n                      <td>{{patient.houseNumber}}</td>\n                    </tr>\n                    <tr>\n                      <td>PLZ:</td>\n                      <td>{{patient.zip}}</td>\n                    </tr>\n                    <tr>\n                      <td>Ort:</td>\n                      <td>{{patient.city}}</td>\n                    </tr>\n                  </table>\n                </a-card>\n              </a-col>\n            </a-row>\n\n            <!-- Kontakt & Versicherung & Arbeitgeber -->\n            <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n              <a-col :span=\"24\" :md=\"8\">\n                <a-card\n                  title=\"Kontakt\"\n                  align=\"left\"\n                >\n                  <table>\n                    <tr>\n                      <td>Telefonnummer:</td>\n                      <td>{{patient.phoneNumber}}</td>\n                    </tr>\n                    <tr>\n                      <td>Email:</td>\n                      <td><a href=\"\">{{patient.email}}</a></td>\n                    </tr>\n                  </table>\n                </a-card>\n              </a-col>\n              <a-col :span=\"24\" :md=\"8\">\n                <a-card\n                  title=\"Versicherung\"\n                  align=\"left\"\n                >\n                  <table>\n                    <tr>\n                      <td>Versicherung:</td>\n                      <td>{{patient.insuranceCompany}}</td>\n                    </tr>\n                    <tr>\n                      <td>V-Nr:</td>\n                      <td>{{patient.insuranceMembershipNumber}}</td>\n                    </tr>\n                  </table>\n                </a-card>\n              </a-col>\n              <a-col :span=\"24\" :md=\"8\">\n                <a-card\n                  title=\"Arbeit\"\n                  align=\"left\"\n                >\n                  <table>\n                    <tr>\n                      <td>Beruf:</td>\n                      <td>{{patient.occupation || 'Keine Angabe'}}</td>\n                    </tr>\n                    <tr>\n                      <td>Arbeitgeber:</td>\n                      <td>{{patient.employer || 'Keine Angabe'}}</td>\n                    </tr>\n                  </table>\n                </a-card>\n              </a-col>\n            </a-row>\n\n            <!-- Symptome und Risiken -->\n            <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n              <a-col\n                :span=\"24\"\n                :md=\"12\"\n              >\n                <a-card\n                  title=\"Vorerkrankungen und Risikofaktoren\"\n                  align=\"left\"\n                >\n                  <div v-for=\"illness in preIllnesses\" v-bind:key=\"illness\">{{illness}}</div>\n                </a-card>\n              </a-col>\n              <a-col\n                :span=\"24\"\n                :md=\"12\"\n              >\n                <a-card\n                  title=\"Symptome\"\n                  align=\"left\"\n                  :extra=\"'Stand: ' + formatTimestamp(patient.creationTimestamp)\"\n                >\n                  <div v-for=\"symptom in symptoms\" v-bind:key=\"symptom\">{{symptom}}</div>\n                </a-card>\n              </a-col>\n            </a-row>\n\n            <!-- Tests -->\n            <a-row :gutter=\"8\" style=\"margin-top: 8px;\">\n              <a-col span=\"24\">\n                <a-card\n                  :title=\"'Status: ' + (patientStatus ? patientStatus.label : 'Unbekannt')\"\n                  align=\"left\"\n                >\n                  <a-table\n                    class=\"imis-table-no-pagination\"\n                    :columns=\"columnsTests\"\n                    :dataSource=\"tests\"\n                    :scroll=\"{x: 0, y: 0}\"\n                    rowKey=\"id\"\n                  >\n                    <div slot=\"testStatus\" slot-scope=\"testStatus\">\n                      <a-icon :type=\"testResults.find(type => type.id === testStatus).icon\" style=\"margin-right: 5px\" />\n                      {{testResults.find(type => type.id === testStatus).label}}\n                    </div>\n                    <div slot=\"testType\" slot-scope=\"testType\">\n                      <a-icon :type=\"testTypes.find(type => type.id === testType).icon\" style=\"margin-right: 5px\" />\n                      {{testTypes.find(type => type.id === testType).label}}\n                    </div>\n                  </a-table>\n                </a-card>\n              </a-col>\n            </a-row>\n          </div>\n          <br>\n        </a-tab-pane>\n        <a-tab-pane\n          tab=\"Verlauf\"\n          key=\"2\"\n          forceRender\n        >\n          <a-card>\n            <a-timeline\n              style=\"text-align: left; margin-left: 40px\"\n              v-if=\"patient.events.length\"\n            >\n              <!-- List all the events recorded corresponding to the patient over time -->\n              <a-timeline-item\n                v-for=\"event in this.patient.events\"\n                :key=\"event.id\"\n                :color=\"timelineColor(event.eventType)\"\n              >\n                {{ formatTimestamp(event.eventTimestamp) }},\n                {{ eventTypes.find(type => type.id === event.eventType).label }}\n              </a-timeline-item>\n            </a-timeline>\n          </a-card>\n        </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\nimport moment from 'moment'\nimport Api from '@/api'\nimport { LabTest, Patient, Timestamp } from '@/api/SwaggerApi'\nimport { patientMapper } from '@/store/modules/patients.module'\nimport { EventTypeItem, eventTypes, testResults, TestResultType } from '@/models/event-types'\nimport { SYMPTOMS } from '@/models/symptoms'\nimport { PRE_ILLNESSES } from '@/models/pre-illnesses'\nimport { Column } from 'ant-design-vue/types/table/column'\nimport { TestTypeItem, testTypes } from '@/models/test-types'\n\nconst columnsTests: Partial<Column>[] = [\n  {\n    title: 'Test ID',\n    dataIndex: 'testId',\n    key: 'testId',\n  }, {\n    title: 'Test Typ',\n    dataIndex: 'testType',\n    key: 'testType',\n    scopedSlots: {\n      customRender: 'testType',\n    },\n  }, {\n    title: 'Test Status',\n    dataIndex: 'testStatus',\n    key: 'testStatus',\n    scopedSlots: {\n      customRender: 'testStatus',\n    },\n  }, {\n    title: 'Kommentar',\n    dataIndex: 'comment',\n    key: 'comment',\n  },\n]\n\ninterface State {\n  patient: undefined | Patient;\n  patientStatus: EventTypeItem | undefined;\n  eventTypes: any[];\n  symptoms: string[];\n  preIllnesses: string[];\n  dateOfBirth: string;\n  gender: string;\n  tests: LabTest[];\n  columnsTests: Partial<Column>[];\n  testResults: TestResultType[];\n  testTypes: TestTypeItem[];\n}\n\nexport default Vue.extend({\n  name: 'PatientDetails',\n  computed: {\n    ...patientMapper.mapGetters({\n      patientById: 'patientById',\n    }),\n  },\n\n  async created() {\n    this.loadData()\n  },\n\n  data(): State {\n    return {\n      patient: undefined,\n      patientStatus: undefined,\n      eventTypes: eventTypes,\n      testResults: testResults,\n      testTypes: testTypes,\n      symptoms: [],\n      preIllnesses: [],\n      dateOfBirth: '',\n      gender: '',\n      tests: [],\n      columnsTests,\n    }\n  },\n\n  watch: {\n    '$route.params.id'() {\n      this.loadData()\n    },\n  },\n\n  methods: {\n    ...patientMapper.mapMutations({\n      setPatient: 'setPatient',\n    }),\n    async loadData() {\n      // Load Patient\n      const patientId = this.$route.params.id\n      this.patient = this.patientById(this.$route.params.id)\n      if (!this.patient) {\n        const patient = await Api.api.getPatientForIdUsingGet(patientId)\n        this.setPatient(patient)\n        this.patient = patient\n      }\n\n      // Map patient attributes to their display representation\n      this.patientStatus = eventTypes.find(type => type.id === this.patient?.patientStatus)\n      this.symptoms = this.patient.symptoms?.map(symptom => {\n        const patientSymptom = SYMPTOMS.find(symptomFind => symptomFind.value === symptom)\n        return patientSymptom ? patientSymptom.label : symptom\n      }) || []\n      this.preIllnesses = this.patient.preIllnesses?.map(preIllness => {\n        const patientIllness = PRE_ILLNESSES.find(illness => illness.value === preIllness)\n        return patientIllness ? patientIllness.label : preIllness\n      }) || []\n      this.dateOfBirth = moment(this.patient.dateOfBirth).format('DD.MM.YYYY')\n      const patientGender = this.patient.gender || ''\n      this.gender = patientGender === 'male' ? 'm√§nnlich' : patientGender === 'female' ? 'weiblich' : 'divers'\n\n      // Tests\n      this.tests = await Api.api.getLabTestForPatientUsingGet(patientId)\n    },\n    timelineColor(eventType: any) {\n      switch (eventType) {\n        case 'TEST_FINISHED_POSITIVE':\n          return 'red'\n        case 'TEST_FINISHED_NEGATIVE':\n          return 'green'\n        default:\n          return 'grey'\n      }\n    },\n    formatTimestamp(timestamp: Timestamp): string {\n      const momentTimestamp = moment(timestamp)\n      if (momentTimestamp.isValid()) {\n        return moment(timestamp).format('DD.MM.YYYY HH:mm')\n      } else {\n        return 'Unbekannt'\n      }\n    },\n  },\n})\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  table {\n    border-collapse: separate;\n    border-spacing: 15px\n  }\n</style>\n"]}]}