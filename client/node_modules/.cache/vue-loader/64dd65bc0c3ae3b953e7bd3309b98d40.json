{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/SubmitTestResult.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/SubmitTestResult.vue","mtime":1586713315433},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBcGkgZnJvbSAnQC9hcGknCmltcG9ydCBUZXN0SW5wdXQgZnJvbSAnLi4vY29tcG9uZW50cy9UZXN0SW5wdXQnCmltcG9ydCBMYWJvcmF0b3J5SW5wdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYWJvcmF0b3J5SW5wdXQnCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgeyBhdXRoTWFwcGVyIH0gZnJvbSAnQC9zdG9yZS9tb2R1bGVzL2F1dGgubW9kdWxlJwppbXBvcnQgeyB0ZXN0UmVzdWx0cyB9IGZyb20gJ0AvbW9kZWxzL2V2ZW50LXR5cGVzJwoKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgbmFtZTogJ0xpbmtUZXN0UmVzdWx0QW5kUGF0aWVudCcsCiAgY29tcHV0ZWQ6IHsKICAgIC4uLmF1dGhNYXBwZXIubWFwR2V0dGVycyh7IGluc3RpdHV0aW9uOiAnaW5zdGl0dXRpb24nIH0pLAogIH0sCiAgY29tcG9uZW50czogewogICAgVGVzdElucHV0LAogICAgTGFib3JhdG9yeUlucHV0LAogIH0sCiAgcHJvcHM6IHt9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB0aGlzLiRmb3JtLmNyZWF0ZUZvcm0odGhpcyksCiAgICAgIGZpbGVCeXRlczogbnVsbCwKICAgICAgdGVzdFJlc3VsdHM6IHRlc3RSZXN1bHRzLAogICAgICBsYWJvcmF0b3JpZXM6IFtdLAogICAgICB1cGRhdGVkTGFiVGVzdDogbnVsbCwKICAgICAgdXBkYXRlZExhYlRlc3RTdGF0dXM6ICcnLAogICAgfQogIH0sCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIGlmICghdGhpcy5pbnN0aXR1dGlvbigpKSB7CiAgICAgIGNvbnNvbGUubG9nKCdMb2FkaW5nIGluc3RpdHV0aW9uJykKICAgICAgYXdhaXQgdGhpcy5nZXRBdXRoZW50aWNhdGVkSW5zdGl0dXRpb24oKQogICAgfQogICAgY29uc3QgbGFiID0gdGhpcy5pbnN0aXR1dGlvbigpCiAgICBpZiAobGFiICYmIGxhYi50eXBlID09PSAnTEFCT1JBVE9SWScpIHsKICAgICAgdGhpcy5sYWJvcmF0b3JpZXMgPSBbbGFiXQogICAgICB0aGlzLmZvcm0uc2V0RmllbGRzVmFsdWUoewogICAgICAgIGxhYm9yYXRvcnlJZDogbGFiLmlkLAogICAgICB9KQogICAgfSBlbHNlIHsKICAgICAgdGhpcy5mb3JtLnNldEZpZWxkc1ZhbHVlKHsKICAgICAgICBsYWJvcmF0b3J5SWQ6ICcnLAogICAgICB9KQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLi4uYXV0aE1hcHBlci5tYXBBY3Rpb25zKHsKICAgICAgZ2V0QXV0aGVudGljYXRlZEluc3RpdHV0aW9uOiAnZ2V0QXV0aGVudGljYXRlZEluc3RpdHV0aW9uJywKICAgIH0pLAogICAgdXBsb2FkSGludCgpIHsKICAgICAgY29uc3Qgbm90aWZpY2F0aW9uID0gewogICAgICAgIG1lc3NhZ2U6ICdEYXMgTGFib3Iga2FubiBoaWVyIGRlbiBCZXJpY2h0IG1pdCBob2NobGFkZW4uIEF1cyBTaWNoZXJoZWl0c2dyw7xuZGVuIGlzdCBkaWVzZSBGdW5rdGlvbiBpbSBQcm90b3R5cCBkZWFrdGl2aWVydC4nLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgfQogICAgICB0aGlzLiRub3RpZmljYXRpb24uaW5mbyhub3RpZmljYXRpb24pCiAgICB9LAogICAgYmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgY29uc3Qgc2V0RmlsZUJ5dGVzID0gZmlsZUJ5dGVzID0+IHsKICAgICAgICB0aGlzLmZpbGVCeXRlcyA9IGZpbGVCeXRlcwogICAgICB9CgogICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpCiAgICAgIHJlYWRlci5vbmxvYWQgPSBlID0+IHsKICAgICAgICBjb25zdCB1dGY4ID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGUudGFyZ2V0LnJlc3VsdCkpCiAgICAgICAgY29uc3QgYXJyYXkgPSBbXQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdXRmOC5sZW5ndGg7IGkrKykgewogICAgICAgICAgYXJyYXkucHVzaCh1dGY4LmNoYXJDb2RlQXQoaSkpCiAgICAgICAgfQogICAgICAgIHNldEZpbGVCeXRlcyhhcnJheSkKICAgICAgfQogICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKQoKICAgICAgcmV0dXJuIGZhbHNlCiAgICB9LAogICAgaGFuZGxlU3VibWl0KGUpIHsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpCgogICAgICB0aGlzLmZvcm0udmFsaWRhdGVGaWVsZHMoKGVyciwgdmFsdWVzKSA9PiB7CiAgICAgICAgaWYgKGVycikgewogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQoKICAgICAgICBjb25zdCB7IHRlc3RJZCB9ID0gdmFsdWVzCiAgICAgICAgY29uc3QgcmVxdWVzdCA9IHsKICAgICAgICAgIHRlc3RJZCwKICAgICAgICAgIHN0YXR1czogdmFsdWVzLnRlc3RSZXN1bHQsCiAgICAgICAgICBjb21tZW50OiB2YWx1ZXMuY29tbWVudCwKICAgICAgICAgIGZpbGU6IHRoaXMuZmlsZUJ5dGVzLAogICAgICAgIH0KCiAgICAgICAgY29uc3QgdGVzdFJlc3VsdCA9IHRoaXMudGVzdFJlc3VsdHMuZmluZCh0ZXN0UmVzdWx0ID0+IHZhbHVlcy50ZXN0UmVzdWx0ID09PSB0ZXN0UmVzdWx0LmlkKQogICAgICAgIEFwaS5hcGkudXBkYXRlVGVzdFN0YXR1c1VzaW5nUHV0KHZhbHVlcy5sYWJvcmF0b3J5SWQsIHJlcXVlc3QpLnRoZW4obGFiVGVzdCA9PiB7CiAgICAgICAgICBjb25zdCBub3RpZmljYXRpb24gPSB7CiAgICAgICAgICAgIG1lc3NhZ2U6ICdUZXN0ICcgKyBsYWJUZXN0LnRlc3RJZCArICcgYWt0dWFsaXNpZXJ0LicsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnU3RhdHVzIGdlw6RuZGVydCBhdWYgIicgKyB0ZXN0UmVzdWx0LmxhYmVsICsgJyInLAogICAgICAgICAgfQogICAgICAgICAgdGhpcy4kbm90aWZpY2F0aW9uLnN1Y2Nlc3Mobm90aWZpY2F0aW9uKQogICAgICAgICAgdGhpcy5mb3JtLnJlc2V0RmllbGRzKFsKICAgICAgICAgICAgJ3Rlc3RJZCcsICd0ZXN0UmVzdWx0JywgJ2NvbW1lbnQnLAogICAgICAgICAgXSkKICAgICAgICAgIHRoaXMuZmlsZUJ5dGVzID0gbnVsbAogICAgICAgICAgdGhpcy51cGRhdGVkTGFiVGVzdCA9IGxhYlRlc3QKICAgICAgICAgIHRoaXMudXBkYXRlZExhYlRlc3RTdGF0dXMgPSB0ZXN0UmVzdWx0cwogICAgICAgICAgICAuZmluZCh0ZXN0UmVzdWx0ID0+IHRlc3RSZXN1bHQuaWQgPT09IGxhYlRlc3QudGVzdFN0YXR1cykKICAgICAgICAgICAgLmxhYmVsCiAgICAgICAgfSkuY2F0Y2goZXJyID0+IHsKICAgICAgICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IHsKICAgICAgICAgICAgbWVzc2FnZTogJ0ZlaGxlciBiZWltIEhpbnp1ZsO8Z2VuIGRlcyBUZXN0ZXJnZWJuaXNzZXMuJywKICAgICAgICAgICAgZGVzY3JpcHRpb246IGVyci5tZXNzYWdlLAogICAgICAgICAgfQogICAgICAgICAgdGhpcy4kbm90aWZpY2F0aW9uLmVycm9yKG5vdGlmaWNhdGlvbikKICAgICAgICB9KQogICAgICB9KQogICAgfSwKICB9LAp9KQo="},{"version":3,"sources":["SubmitTestResult.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"SubmitTestResult.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <a-card style=\"max-width: 500px; margin: 2rem auto; min-height: 300px\">\n    <div>\n      <a-form\n        :form=\"form\"\n        :label-col=\"{ span: 6 }\"\n        :wrapper-col=\"{ span: 18 }\"\n        @submit=\"handleSubmit\"\n      >\n\n        <!-- Labor -->\n        <LaboratoryInput\n          label=\"Labor\"\n          :form=\"form\"\n          :initial-labs=\"laboratories\"\n          :validation=\"['laboratoryId', { rules: [{\n            required: true,\n            message: 'Bitte wählen Sie ein Labor aus.'\n          }]}]\"\n        />\n\n        <!-- TestId -->\n        <TestInput\n          label=\"Test-ID\"\n          placeholder=\"z.B 1337-4237-9438\"\n          :form=\"form\"\n          :validation=\"['testId', { rules: [{\n            required: true,\n            message: 'Bitte geben Sie Ihre Test-ID ein.'\n          }]}]\"\n        />\n\n        <!-- TestResult -->\n        <a-form-item label=\"Testresultat\">\n          <a-radio-group\n            class=\"imis-radio-group\"\n            v-decorator=\"['testResult', { rules: [{\n              required: true,\n              message: 'Bitte geben Sie das Testresultat an.'\n            }]}]\">\n            <a-radio v-for=\"testResult in testResults\" :value=\"testResult.id\" :key=\"testResult.id\">\n              <a-icon :type=\"testResult.icon\" />\n              {{testResult.label}}\n            </a-radio>\n          </a-radio-group>\n        </a-form-item>\n\n        <!-- Kommentar -->\n        <a-form-item label=\"Kommentar\">\n          <a-textarea\n            placeholder=\"Kommentar hinzufügen\"\n            :autoSize=\"{ minRows: 3, maxRows: 5 }\"\n            v-decorator=\"['comment']\"\n          />\n        </a-form-item>\n\n        <!-- Hochladen -->\n        <a-form-item :wrapper-col=\"{ span: 24 }\">\n          <a-button v-on:click=\"uploadHint()\">\n            <a-icon type=\"upload\" />\n            Test Report hochladen\n          </a-button>\n        </a-form-item>\n        <a-divider />\n\n        <!-- Speichern -->\n        <a-form-item :wrapper-col=\"{ span: 24, offset: 0 }\">\n          <a-button type=\"primary\" html-type=\"submit\">\n            Speichern\n          </a-button>\n        </a-form-item>\n      </a-form>\n    </div>\n\n    <!-- Confirmation after creation -->\n    <div v-if=\"updatedLabTest\">\n      <a-icon type=\"check-circle\" :style=\"{ fontSize: '38px', color: '#08c' }\" style=\"margin-bottom: 20px\" />\n      <div>\n        <div>Der Test wurde erfolgreich aktualisiert.</div>\n        <br />\n        <div>Test ID: {{ updatedLabTest.testId }}</div>\n        <div>Neuer Test Status: {{ updatedLabTestStatus }}</div>\n      </div>\n    </div>\n  </a-card>\n</template>\n\n<script>\nimport Api from '@/api'\nimport TestInput from '../components/TestInput'\nimport LaboratoryInput from '../components/LaboratoryInput'\nimport Vue from 'vue'\nimport { authMapper } from '@/store/modules/auth.module'\nimport { testResults } from '@/models/event-types'\n\nexport default Vue.extend({\n  name: 'LinkTestResultAndPatient',\n  computed: {\n    ...authMapper.mapGetters({ institution: 'institution' }),\n  },\n  components: {\n    TestInput,\n    LaboratoryInput,\n  },\n  props: {},\n  data() {\n    return {\n      form: this.$form.createForm(this),\n      fileBytes: null,\n      testResults: testResults,\n      laboratories: [],\n      updatedLabTest: null,\n      updatedLabTestStatus: '',\n    }\n  },\n  async mounted() {\n    if (!this.institution()) {\n      console.log('Loading institution')\n      await this.getAuthenticatedInstitution()\n    }\n    const lab = this.institution()\n    if (lab && lab.type === 'LABORATORY') {\n      this.laboratories = [lab]\n      this.form.setFieldsValue({\n        laboratoryId: lab.id,\n      })\n    } else {\n      this.form.setFieldsValue({\n        laboratoryId: '',\n      })\n    }\n  },\n  methods: {\n    ...authMapper.mapActions({\n      getAuthenticatedInstitution: 'getAuthenticatedInstitution',\n    }),\n    uploadHint() {\n      const notification = {\n        message: 'Das Labor kann hier den Bericht mit hochladen. Aus Sicherheitsgründen ist diese Funktion im Prototyp deaktiviert.',\n        description: '',\n      }\n      this.$notification.info(notification)\n    },\n    beforeUpload(file) {\n      const setFileBytes = fileBytes => {\n        this.fileBytes = fileBytes\n      }\n\n      const reader = new FileReader()\n      reader.onload = e => {\n        const utf8 = unescape(encodeURIComponent(e.target.result))\n        const array = []\n        for (let i = 0; i < utf8.length; i++) {\n          array.push(utf8.charCodeAt(i))\n        }\n        setFileBytes(array)\n      }\n      reader.readAsDataURL(file)\n\n      return false\n    },\n    handleSubmit(e) {\n      e.preventDefault()\n\n      this.form.validateFields((err, values) => {\n        if (err) {\n          return\n        }\n\n        const { testId } = values\n        const request = {\n          testId,\n          status: values.testResult,\n          comment: values.comment,\n          file: this.fileBytes,\n        }\n\n        const testResult = this.testResults.find(testResult => values.testResult === testResult.id)\n        Api.api.updateTestStatusUsingPut(values.laboratoryId, request).then(labTest => {\n          const notification = {\n            message: 'Test ' + labTest.testId + ' aktualisiert.',\n            description: 'Status geändert auf \"' + testResult.label + '\"',\n          }\n          this.$notification.success(notification)\n          this.form.resetFields([\n            'testId', 'testResult', 'comment',\n          ])\n          this.fileBytes = null\n          this.updatedLabTest = labTest\n          this.updatedLabTestStatus = testResults\n            .find(testResult => testResult.id === labTest.testStatus)\n            .label\n        }).catch(err => {\n          const notification = {\n            message: 'Fehler beim Hinzufügen des Testergebnisses.',\n            description: err.message,\n          }\n          this.$notification.error(notification)\n        })\n      })\n    },\n  },\n})\n</script>\n\n<style>\n</style>\n"]}]}