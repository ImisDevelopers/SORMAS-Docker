{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/LabResultComponent.vue?vue&type=style&index=0&id=154a30c3&scoped=true&lang=css&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/LabResultComponent.vue","mtime":1584871246075},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/css-loader/dist/cjs.js","mtime":1584795993125},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1584795993380},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/postcss-loader/src/index.js","mtime":1584795993354},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDMgewogIG1hcmdpbjogMjBweCAxMHB4Owp9CnNwYW4gewogIG1hcmdpbjogMTBweDsKfQo="},{"version":3,"sources":["LabResultComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA","file":"LabResultComponent.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div style=\"width: 80%\">\n    <a-form :form=\"form\" :label-col=\"{ span: 7 }\" :wrapper-col=\"{ span: 17 }\" @submit=\"handleSubmit\">\n      <a-card style=\"width: 500px\">\n      <p style=\"text-align: left\">Bitte melden Sie sich hier mit Laborkennung und Passwort an um einen Test als positiv / negativ zu kennzeichnen.</p>\n      <a-divider orientation=\"left\" style=\"margin-top: 2rem;\">Laboranmeldung</a-divider>\n        <a-form-item label=\"Laborkennung\">\n          <a-input\n            v-decorator=\"['note', { rules: [{ required: true, message: 'Bitte geben Sie Ihre Laborkennung ein.' }] }]\"\n            placeholder=\"z.B 1337-4237-9438\"\n          />\n        </a-form-item>\n        <a-form-item label=\"Passwort\">\n          <a-input\n            v-decorator=\"['note', { rules: [{ required: true, message: 'Bitte geben Sie Ihr Passwort ein.' }] }]\"\n            type=\"password\"\n          />\n        </a-form-item>\n        <a-divider orientation=\"left\" style=\"margin-top: 2rem;\">Testresultat eingeben</a-divider>\n        <a-form-item label=\"Test-ID\">\n          <a-input\n            v-decorator=\"['note', { rules: [{ required: true, message: 'Bitte geben Sie Ihre Test-ID ein.' }] }]\"\n            placeholder=\"z.B 1337-4237-9438\"\n          />\n        </a-form-item>\n        <a-form-item label=\"Testresultat\">\n          <a-radio-group v-decorator=\"['radio-group']\">\n            <a-radio value=\"true\">\n              Positiv\n            </a-radio>\n            <a-radio value=\"false\">\n              Negativ\n            </a-radio>\n          </a-radio-group>\n        </a-form-item>\n        <a-divider />\n        <a-form-item :wrapper-col=\"{ span: 24, offset: 0 }\">\n          <a-button type=\"primary\" html-type=\"submit\">\n            Abschicken\n          </a-button>\n        </a-form-item>\n      </a-card>\n    </a-form>\n  </div>\n</template>\n\n// Labs erstellen Berichte zu Tests/ProbeIDs\n\n<script>\nexport default {\n  name: 'LabResultComponent',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      entities: [],\n      content: \"\"\n    }\n  },\n  methods: {\n    create(e) {\n      e.preventDefault();\n      if (this.content.length > 0) {\n        fetch('/exampleEntities',\n                {\n                  method: 'POST',\n                  body: JSON.stringify({ content: this.content }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                })\n        .then((response) => {\n          return response.json();\n        })\n        .then((entity) => {\n          this.entities.push(entity);\n        });\n        this.content = \"\";\n      }\n    }\n  },\n  created() {\n    fetch('/exampleEntities')\n    .then((response) => {\n      return response.json();\n    })\n    .then((entities) => {\n      this.entities.push(...entities);\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 20px 10px;\n}\nspan {\n  margin: 10px;\n}\n</style>\n"]}]}