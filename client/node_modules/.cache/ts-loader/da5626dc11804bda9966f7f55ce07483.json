{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PublicRegister.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PublicRegister.vue","mtime":1589906836724},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvY2lyb3R6a2kvcHJvamVjdHMvdmlydXMvMV8wMTFfYV9pbmZla3Rpb25zZmFsbF91ZWJlcm1pdHRlbGx1bmcvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgQXBpIGZyb20gJ0AvYXBpJzsKaW1wb3J0IHsgU1lNUFRPTVMgfSBmcm9tICdAL21vZGVscy9zeW1wdG9tcyc7CmltcG9ydCB7IFBSRV9JTExORVNTRVMgfSBmcm9tICdAL21vZGVscy9wcmUtaWxsbmVzc2VzJzsKaW1wb3J0IFBhdGllbnRTdGFtbWRhdGVuIGZyb20gJ0AvY29tcG9uZW50cy9QYXRpZW50U3RhbW1kYXRlbi52dWUnOwppbXBvcnQgeyBFWFBPU1VSRV9MT0NBVElPTlMsIEVYUE9TVVJFU19QVUJMSUMgfSBmcm9tICdAL21vZGVscy9leHBvc3VyZXMnOwpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICBuYW1lOiAnUHVibGljUmVnaXN0ZXJDb21wb25lbnQnLAogIGNvbXBvbmVudHM6IHsKICAgIFBhdGllbnRTdGFtbWRhdGVuOiBQYXRpZW50U3RhbW1kYXRlbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHRoaXMuJGZvcm0uY3JlYXRlRm9ybSh0aGlzKSwKICAgICAgY3VycmVudDogMCwKICAgICAgbWF4Q3VycmVudDogMCwKICAgICAgY3JlYXRlZFBhdGllbnQ6IG51bGwsCiAgICAgIHN5bXB0b21zOiBTWU1QVE9NUywKICAgICAgcHJlSWxsbmVzc2VzOiBQUkVfSUxMTkVTU0VTLAogICAgICBleHBvc3VyZXM6IEVYUE9TVVJFU19QVUJMSUMsCiAgICAgIGV4cG9zdXJlTG9jYXRpb246IEVYUE9TVVJFX0xPQ0FUSU9OUywKICAgICAgc3RlcHM6IFt7CiAgICAgICAgdGl0bGU6ICdTeW1wdG9tZScKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAnRXhwb3NpdGlvbicKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAnUmlzaWtlbicsCiAgICAgICAgZGVzY3JpcHRpb246ICdWb3JlcmtyYW5rdW5nZW4gdW5kIFJpc2lrb2Zha3RvcmVuJwogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICdQZXJzw7ZubGljaGUgRGF0ZW4nCiAgICAgIH1dLAogICAgICBjaGVja2VkOiBmYWxzZSwKICAgICAgc2hvd0NoZWNrZWRFcnJvcjogZmFsc2UsCiAgICAgIGRpc2FibGVFeHBvc3VyZUxvY2F0aW9uOiB0cnVlLAogICAgICBzaG93T3RoZXJTeW1wdG9tczogZmFsc2UsCiAgICAgIHNob3dPdGhlclByZUlsbG5lc3NlczogZmFsc2UKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgc3RlcHNEaXJlY3Rpb246IGZ1bmN0aW9uIHN0ZXBzRGlyZWN0aW9uKCkgewogICAgICByZXR1cm4gd2luZG93LmlubmVyV2lkdGggPj0gNzAwID8gJ2hvcml6b250YWwnIDogJ3ZlcnRpY2FsJzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNjcm9sbFRvRm9ybVRvcDogZnVuY3Rpb24gc2Nyb2xsVG9Gb3JtVG9wKCkgewogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2Nyb2xsLWFuY2hvcicpLnNjcm9sbEludG9WaWV3KCk7CiAgICAgIC8qCiAgICAgIC8vIFNjcm9sbCBhbGwgcGFyZW50cwogICAgICBsZXQgY3VyckVsZW06IEVsZW1lbnQgPSBzY3JvbGxBbmNob3IKICAgICAgbGV0IGNvbnRhaW5lcjogRWxlbWVudCB8IG51bGwgPSBjdXJyRWxlbS5wYXJlbnRFbGVtZW50CiAgICAgIHdoaWxlIChjb250YWluZXIpIHsKICAgICAgICBjb250YWluZXIuc2Nyb2xsVG8oeyB0b3A6IGN1cnJFbGVtLm9mZnNldFkgfSkKICAgICAgICAgICAgICAgY3VyckVsZW0gPSBjb250YWluZXIKICAgICAgICBjb250YWluZXIgPSBjdXJyRWxlbS5wYXJlbnRFbGVtZW50CiAgICAgIH0KICAgICAgKi8KICAgIH0sCiAgICBwcmV2OiBmdW5jdGlvbiBwcmV2KCkgewogICAgICB0aGlzLmN1cnJlbnQtLTsKICAgICAgdGhpcy5zY3JvbGxUb0Zvcm1Ub3AoKTsKICAgIH0sCiAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHNob3dOZXh0ID0gZnVuY3Rpb24gc2hvd05leHQoKSB7CiAgICAgICAgX3RoaXMuY3VycmVudCsrOwogICAgICAgIF90aGlzLm1heEN1cnJlbnQgPSBNYXRoLm1heChfdGhpcy5jdXJyZW50LCBfdGhpcy5tYXhDdXJyZW50KTsKCiAgICAgICAgX3RoaXMuc2Nyb2xsVG9Gb3JtVG9wKCk7CiAgICAgIH07CgogICAgICBpZiAodGhpcy5jdXJyZW50ID09PSAzKSB7CiAgICAgICAgdGhpcy5mb3JtLnZhbGlkYXRlRmllbGRzKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgIGlmICghZXJyKSB7CiAgICAgICAgICAgIHNob3dOZXh0KCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2hvd05leHQoKTsKICAgICAgfQogICAgfSwKICAgIHNhdmU6IGZ1bmN0aW9uIHNhdmUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLmNoZWNrZWQpIHsKICAgICAgICB0aGlzLnNob3dDaGVja2VkRXJyb3IgPSB0cnVlOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5mb3JtLnZhbGlkYXRlRmllbGRzKGZ1bmN0aW9uIChlcnIsIHZhbHVlcykgewogICAgICAgIGlmIChlcnIpIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHZhciByZXF1ZXN0ID0gX29iamVjdFNwcmVhZCh7fSwgdmFsdWVzLCB7CiAgICAgICAgICBkYXRlT2ZCaXJ0aDogdmFsdWVzLmRhdGVPZkJpcnRoLmZvcm1hdCgnWVlZWS1NTS1ERCcpLAogICAgICAgICAgcGF0aWVudFN0YXR1czogJ1JFR0lTVEVSRUQnLAogICAgICAgICAgZmx1SW1tdW5pemF0aW9uOiBmYWxzZSwKICAgICAgICAgIHNwZWVkT2ZTeW1wdG9tc091dGJyZWFrOiAnJywKICAgICAgICAgIC8vIFRPRE86IGV4cG9zdXJlcyBpcyBub3QgbGlzdGVkIGhlcmUsIHNvIGN1cnJlbnRseSB3ZSAibWlzdXNlIiByaXNrIGFyZWFzLi4uCiAgICAgICAgICByaXNrQXJlYXM6IFtdCiAgICAgICAgfSk7CgogICAgICAgIGlmICghcmVxdWVzdC5zeW1wdG9tcykgewogICAgICAgICAgcmVxdWVzdC5zeW1wdG9tcyA9IFtdOwogICAgICAgIH0KCiAgICAgICAgaWYgKCFyZXF1ZXN0LnByZUlsbG5lc3NlcykgewogICAgICAgICAgcmVxdWVzdC5wcmVJbGxuZXNzZXMgPSBbXTsKICAgICAgICB9CgogICAgICAgIGlmICh2YWx1ZXMuZXhwb3N1cmVzKSB7CiAgICAgICAgICByZXF1ZXN0LnJpc2tBcmVhcyA9IHJlcXVlc3Qucmlza0FyZWFzLmNvbmNhdCh2YWx1ZXMuZXhwb3N1cmVzKTsKICAgICAgICB9CgogICAgICAgIGlmIChfdGhpczIuc2hvd090aGVyU3ltcHRvbXMpIHsKICAgICAgICAgIHJlcXVlc3Quc3ltcHRvbXMucHVzaCh2YWx1ZXMuc3ltcHRvbXNPdGhlcik7CiAgICAgICAgfQoKICAgICAgICBpZiAoX3RoaXMyLnNob3dPdGhlclByZUlsbG5lc3NlcykgewogICAgICAgICAgcmVxdWVzdC5wcmVJbGxuZXNzZXMucHVzaCh2YWx1ZXMucHJlSWxsbmVzc2VzT3RoZXIpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHZhbHVlcy5leHBvc3VyZUxvY2F0aW9uKSB7CiAgICAgICAgICByZXF1ZXN0LnJpc2tBcmVhcyA9IHJlcXVlc3Qucmlza0FyZWFzLmNvbmNhdCh2YWx1ZXMuZXhwb3N1cmVMb2NhdGlvbi5tYXAoZnVuY3Rpb24gKGxvY2F0aW9uKSB7CiAgICAgICAgICAgIHJldHVybiAnQ09OVEFDVF9XSVRIX0NPUk9OQV8nICsgbG9jYXRpb247CiAgICAgICAgICB9KSk7CiAgICAgICAgfQoKICAgICAgICByZXF1ZXN0LndlYWtlbmVkSW1tdW5lU3lzdGVtID0gISFyZXF1ZXN0LnByZUlsbG5lc3NlcyAvLyBUT0RPOiBEbyB3ZSBuZWVkIHRoaXMgZmllbGQ/CiAgICAgICAgLmZpbmQoZnVuY3Rpb24gKGlsbG5lc3MpIHsKICAgICAgICAgIHJldHVybiBpbGxuZXNzID09PSAnSU1NVU5PREVGSUNJRU5DWSc7CiAgICAgICAgfSk7CiAgICAgICAgcmVxdWVzdC5jb3JvbmFDb250YWN0cyA9ICEhcmVxdWVzdC5yaXNrQXJlYXMgLy8gVE9ETzogRE8gd2UgbmVlZCB0aGlzIGZpZWxkPwogICAgICAgIC5maW5kKGZ1bmN0aW9uIChyaXNrQXJlYSkgewogICAgICAgICAgcmV0dXJuIHJpc2tBcmVhLnN0YXJ0c1dpdGgoJ0NPTlRBQ1RfV0lUSF9DT1JPTkEnKTsKICAgICAgICB9KTsKICAgICAgICBBcGkuYWRkUGF0aWVudFVzaW5nUG9zdChyZXF1ZXN0KS50aGVuKGZ1bmN0aW9uIChwYXRpZW50KSB7CiAgICAgICAgICBfdGhpczIuY3JlYXRlZFBhdGllbnQgPSBwYXRpZW50OwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBvbkNoZWNrZWRDaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hlY2tlZENoYW5nZShlKSB7CiAgICAgIGlmICghKGUgPT09IG51bGwgfHwgZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZS50YXJnZXQpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLmNoZWNrZWQgPSBlLnRhcmdldC5jaGVja2VkOwoKICAgICAgaWYgKHRoaXMuY2hlY2tlZCkgewogICAgICAgIHRoaXMuc2hvd0NoZWNrZWRFcnJvciA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgc3ltcHRvbXNDaGFuZ2VkOiBmdW5jdGlvbiBzeW1wdG9tc0NoYW5nZWQoZXZlbnQpIHsKICAgICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDsKICAgICAgdGhpcy5zaG93T3RoZXJTeW1wdG9tcyA9IHRhcmdldC5jaGVja2VkOwogICAgfSwKICAgIHByZUlsbG5lc3Nlc0NoYW5nZWQ6IGZ1bmN0aW9uIHByZUlsbG5lc3Nlc0NoYW5nZWQoZXZlbnQpIHsKICAgICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDsKICAgICAgdGhpcy5zaG93T3RoZXJQcmVJbGxuZXNzZXMgPSB0YXJnZXQuY2hlY2tlZDsKICAgIH0sCiAgICBleHBvc3VyZXNDaGFuZ2VkOiBmdW5jdGlvbiBleHBvc3VyZXNDaGFuZ2VkKGNoZWNrZWRWYWx1ZXMpIHsKICAgICAgdGhpcy5kaXNhYmxlRXhwb3N1cmVMb2NhdGlvbiA9ICFjaGVja2VkVmFsdWVzLmluY2x1ZGVzKCdDT05UQUNUX1dJVEhfQ09ST05BX0NBU0UnKTsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PublicRegister.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Api from '@/api'\nimport { Patient } from '@/api/SwaggerApi'\nimport { Option } from '@/models'\nimport { SYMPTOMS } from '@/models/symptoms'\nimport { PRE_ILLNESSES } from '@/models/pre-illnesses'\nimport PatientStammdaten from '@/components/PatientStammdaten.vue'\nimport { EXPOSURE_LOCATIONS, EXPOSURES_PUBLIC } from '@/models/exposures'\n\ninterface State {\n  form: any\n  current: number\n  maxCurrent: number\n  createdPatient: Patient | null\n  symptoms: Option[]\n  exposures: Option[]\n  exposureLocation: Option[]\n  preIllnesses: Option[]\n  steps: any[]\n  checked: boolean\n  showCheckedError: boolean\n  disableExposureLocation: boolean\n  showOtherSymptoms: boolean\n  showOtherPreIllnesses: boolean\n}\n\nexport default Vue.extend({\n  name: 'PublicRegisterComponent',\n  components: {\n    PatientStammdaten,\n  },\n  data(): State {\n    return {\n      form: this.$form.createForm(this),\n      current: 0,\n      maxCurrent: 0,\n      createdPatient: null,\n      symptoms: SYMPTOMS,\n      preIllnesses: PRE_ILLNESSES,\n      exposures: EXPOSURES_PUBLIC,\n      exposureLocation: EXPOSURE_LOCATIONS,\n      steps: [\n        {\n          title: 'Symptome',\n        },\n        {\n          title: 'Exposition',\n        },\n        {\n          title: 'Risiken',\n          description: 'Vorerkrankungen und Risikofaktoren',\n        },\n        {\n          title: 'Persönliche Daten',\n        },\n      ],\n      checked: false,\n      showCheckedError: false,\n      disableExposureLocation: true,\n      showOtherSymptoms: false,\n      showOtherPreIllnesses: false,\n    }\n  },\n  computed: {\n    stepsDirection() {\n      return window.innerWidth >= 700 ? 'horizontal' : 'vertical'\n    },\n  },\n  methods: {\n    scrollToFormTop() {\n      (document.getElementById('scroll-anchor') as Element).scrollIntoView()\n\n      /*\n      // Scroll all parents\n      let currElem: Element = scrollAnchor\n      let container: Element | null = currElem.parentElement\n      while (container) {\n        container.scrollTo({ top: currElem.offsetY })\n\n        currElem = container\n        container = currElem.parentElement\n      }\n      */\n    },\n    prev() {\n      this.current--\n      this.scrollToFormTop()\n    },\n    next() {\n      const showNext = () => {\n        this.current++\n        this.maxCurrent = Math.max(this.current, this.maxCurrent)\n        this.scrollToFormTop()\n      }\n      if (this.current === 3) {\n        this.form.validateFields((err: any) => {\n          if (!err) {\n            showNext()\n          }\n        })\n      } else {\n        showNext()\n      }\n    },\n    save() {\n      if (!this.checked) {\n        this.showCheckedError = true\n        return\n      }\n      this.form.validateFields((err: any, values: any) => {\n        if (err) {\n          console.error(err)\n          return\n        }\n\n        const request = {\n          ...values,\n          dateOfBirth: values.dateOfBirth.format('YYYY-MM-DD'),\n          patientStatus: 'REGISTERED',\n          fluImmunization: false, // TODO: Do we need a form field for this?\n          speedOfSymptomsOutbreak: '', // TODO: Do we need a form field for this?\n          // TODO: exposures is not listed here, so currently we \"misuse\" risk areas...\n          riskAreas: [],\n        }\n        if (!request.symptoms) {\n          request.symptoms = []\n        }\n        if (!request.preIllnesses) {\n          request.preIllnesses = []\n        }\n        if (values.exposures) {\n          request.riskAreas = request.riskAreas.concat(values.exposures)\n        }\n        if (this.showOtherSymptoms) {\n          request.symptoms.push(values.symptomsOther)\n        }\n        if (this.showOtherPreIllnesses) {\n          request.preIllnesses.push(values.preIllnessesOther)\n        }\n        if (values.exposureLocation) {\n          request.riskAreas = request.riskAreas.concat(\n            values.exposureLocation.map(\n              (location: string) => 'CONTACT_WITH_CORONA_' + location\n            )\n          )\n        }\n        request.weakenedImmuneSystem = !!request.preIllnesses // TODO: Do we need this field?\n          .find((illness: string) => illness === 'IMMUNODEFICIENCY')\n        request.coronaContacts = !!request.riskAreas // TODO: DO we need this field?\n          .find((riskArea: string) =>\n            riskArea.startsWith('CONTACT_WITH_CORONA')\n          )\n        Api.addPatientUsingPost(request).then((patient) => {\n          this.createdPatient = patient\n        })\n      })\n    },\n    onCheckedChange(e: Event) {\n      if (!e?.target) {\n        return\n      }\n      this.checked = (e.target as any).checked\n      if (this.checked) {\n        this.showCheckedError = false\n      }\n    },\n    symptomsChanged(event: Event) {\n      const target = event.target as any\n      this.showOtherSymptoms = target.checked\n    },\n    preIllnessesChanged(event: Event) {\n      const target = event.target as any\n      this.showOtherPreIllnesses = target.checked\n    },\n    exposuresChanged(checkedValues: string[]) {\n      this.disableExposureLocation = !checkedValues.includes(\n        'CONTACT_WITH_CORONA_CASE'\n      )\n    },\n  },\n})\n"],"sourceRoot":""}]}