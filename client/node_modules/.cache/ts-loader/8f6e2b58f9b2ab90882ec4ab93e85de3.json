{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/IndexPatientTableCell.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/IndexPatientTableCell.vue","mtime":1589906836721},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgQXBpIGZyb20gJ0AvYXBpJzsKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgbmFtZTogJ0luZGV4UGF0aWVudFRhYmxlQ2VsbCcsCiAgcHJvcHM6IFsncGF0aWVudElkJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGluZGV4UGF0aWVudDogdW5kZWZpbmVkCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgQXBpLmdldEV4cG9zdXJlU291cmNlQ29udGFjdHNGb3JQYXRpZW50VXNpbmdHZXQodGhpcy5wYXRpZW50SWQpLnRoZW4oZnVuY3Rpb24gKGluZmVjdGlvblNvdXJjZXMpIHsKICAgICAgaWYgKGluZmVjdGlvblNvdXJjZXMubGVuZ3RoID4gMCkgewogICAgICAgIHZhciBjb250YWN0ID0gaW5mZWN0aW9uU291cmNlc1swXS5zb3VyY2U7CgogICAgICAgIGlmIChjb250YWN0KSB7CiAgICAgICAgICBfdGhpcy5pbmRleFBhdGllbnQgPSBjb250YWN0OwogICAgICAgICAgY29uc29sZS5sb2coJ0hhcyBzb3VyY2U6ICcgKyBfdGhpcy5wYXRpZW50SWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7fQp9KTs="},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/components/IndexPatientTableCell.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"AAYA,OAAO,GAAP,MAAgB,KAAhB;AAEA,OAAO,GAAP,MAAgB,OAAhB;AAMA,eAAe,GAAG,CAAC,MAAJ,CAAW;AACxB,EAAA,IAAI,EAAE,uBADkB;AAExB,EAAA,KAAK,EAAE,CAAC,WAAD,CAFiB;AAGxB,EAAA,IAHwB,kBAGpB;AACF,WAAO;AACL,MAAA,YAAY,EAAE;AADT,KAAP;AAGD,GAPuB;AAQxB,EAAA,OARwB,qBAQjB;AAAA;;AACL,IAAA,GAAG,CAAC,2CAAJ,CAAgD,KAAK,SAArD,EAAgE,IAAhE,CACE,UAAC,gBAAD,EAAqB;AACnB,UAAI,gBAAgB,CAAC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,YAAM,OAAO,GAAG,gBAAgB,CAAC,CAAD,CAAhB,CAAoB,MAApC;;AACA,YAAI,OAAJ,EAAa;AACX,UAAA,KAAI,CAAC,YAAL,GAAoB,OAApB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,iBAAiB,KAAI,CAAC,SAAlC;AACD;AACF;AACF,KATH;AAWD,GApBuB;AAqBxB,EAAA,OAAO,EAAE;AArBe,CAAX,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport { ExposureContactContactView } from '@/api/SwaggerApi'\nimport Api from '@/api'\n\ninterface State {\n  indexPatient: ExposureContactContactView | undefined\n}\n\nexport default Vue.extend({\n  name: 'IndexPatientTableCell',\n  props: ['patientId'],\n  data(): State {\n    return {\n      indexPatient: undefined,\n    }\n  },\n  created() {\n    Api.getExposureSourceContactsForPatientUsingGet(this.patientId).then(\n      (infectionSources) => {\n        if (infectionSources.length > 0) {\n          const contact = infectionSources[0].source\n          if (contact) {\n            this.indexPatient = contact\n            console.log('Has source: ' + this.patientId)\n          }\n        }\n      }\n    )\n  },\n  methods: {},\n})\n"],"sourceRoot":""}]}