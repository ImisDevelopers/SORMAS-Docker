{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientDetails.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientDetails.vue","mtime":1586724179216},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2Npcm90emtpL3Byb2plY3RzL3ZpcnVzLzFfMDExX2FfaW5mZWt0aW9uc2ZhbGxfdWViZXJtaXR0ZWxsdW5nL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL2Npcm90emtpL3Byb2plY3RzL3ZpcnVzLzFfMDExX2FfaW5mZWt0aW9uc2ZhbGxfdWViZXJtaXR0ZWxsdW5nL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwppbXBvcnQgQXBpIGZyb20gJ0AvYXBpJzsKaW1wb3J0IHsgcGF0aWVudE1hcHBlciB9IGZyb20gJ0Avc3RvcmUvbW9kdWxlcy9wYXRpZW50cy5tb2R1bGUnOwppbXBvcnQgeyBldmVudFR5cGVzLCB0ZXN0UmVzdWx0cyB9IGZyb20gJ0AvbW9kZWxzL2V2ZW50LXR5cGVzJzsKaW1wb3J0IHsgU1lNUFRPTVMgfSBmcm9tICdAL21vZGVscy9zeW1wdG9tcyc7CmltcG9ydCB7IFBSRV9JTExORVNTRVMgfSBmcm9tICdAL21vZGVscy9wcmUtaWxsbmVzc2VzJzsKaW1wb3J0IHsgdGVzdFR5cGVzIH0gZnJvbSAnQC9tb2RlbHMvdGVzdC10eXBlcyc7CnZhciBjb2x1bW5zVGVzdHMgPSBbewogIHRpdGxlOiAnVGVzdCBJRCcsCiAgZGF0YUluZGV4OiAndGVzdElkJywKICBrZXk6ICd0ZXN0SWQnCn0sIHsKICB0aXRsZTogJ1Rlc3QgVHlwJywKICBkYXRhSW5kZXg6ICd0ZXN0VHlwZScsCiAga2V5OiAndGVzdFR5cGUnLAogIHNjb3BlZFNsb3RzOiB7CiAgICBjdXN0b21SZW5kZXI6ICd0ZXN0VHlwZScKICB9Cn0sIHsKICB0aXRsZTogJ1Rlc3QgU3RhdHVzJywKICBkYXRhSW5kZXg6ICd0ZXN0U3RhdHVzJywKICBrZXk6ICd0ZXN0U3RhdHVzJywKICBzY29wZWRTbG90czogewogICAgY3VzdG9tUmVuZGVyOiAndGVzdFN0YXR1cycKICB9Cn0sIHsKICB0aXRsZTogJ0tvbW1lbnRhcicsCiAgZGF0YUluZGV4OiAnY29tbWVudCcsCiAga2V5OiAnY29tbWVudCcKfV07CmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogIG5hbWU6ICdQYXRpZW50RGV0YWlscycsCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIHBhdGllbnRNYXBwZXIubWFwR2V0dGVycyh7CiAgICBwYXRpZW50QnlJZDogJ3BhdGllbnRCeUlkJwogIH0pKSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMubG9hZERhdGEoKTsKCiAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwYXRpZW50OiB1bmRlZmluZWQsCiAgICAgIHBhdGllbnRTdGF0dXM6IHVuZGVmaW5lZCwKICAgICAgZXZlbnRUeXBlczogZXZlbnRUeXBlcywKICAgICAgdGVzdFJlc3VsdHM6IHRlc3RSZXN1bHRzLAogICAgICB0ZXN0VHlwZXM6IHRlc3RUeXBlcywKICAgICAgc3ltcHRvbXM6IFtdLAogICAgICBwcmVJbGxuZXNzZXM6IFtdLAogICAgICBkYXRlT2ZCaXJ0aDogJycsCiAgICAgIGdlbmRlcjogJycsCiAgICAgIHRlc3RzOiBbXSwKICAgICAgY29sdW1uc1Rlc3RzOiBjb2x1bW5zVGVzdHMKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZS5wYXJhbXMuaWQnOiBmdW5jdGlvbiAkcm91dGVQYXJhbXNJZCgpIHsKICAgICAgdGhpcy5sb2FkRGF0YSgpOwogICAgfQogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7fSwgcGF0aWVudE1hcHBlci5tYXBNdXRhdGlvbnMoewogICAgc2V0UGF0aWVudDogJ3NldFBhdGllbnQnCiAgfSksIHsKICAgIGxvYWREYXRhOiBmdW5jdGlvbiBsb2FkRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgX3RoaXMyJHBhdGllbnQkc3ltcHRvLCBfdGhpczIkcGF0aWVudCRwcmVJbGw7CgogICAgICAgIHZhciBwYXRpZW50SWQsIHBhdGllbnQsIHBhdGllbnRHZW5kZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIExvYWQgUGF0aWVudAogICAgICAgICAgICAgICAgcGF0aWVudElkID0gX3RoaXMyLiRyb3V0ZS5wYXJhbXMuaWQ7CiAgICAgICAgICAgICAgICBfdGhpczIucGF0aWVudCA9IF90aGlzMi5wYXRpZW50QnlJZChfdGhpczIuJHJvdXRlLnBhcmFtcy5pZCk7CgogICAgICAgICAgICAgICAgaWYgKF90aGlzMi5wYXRpZW50KSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIEFwaS5hcGkuZ2V0UGF0aWVudEZvcklkVXNpbmdHZXQocGF0aWVudElkKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcGF0aWVudCA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAgIF90aGlzMi5zZXRQYXRpZW50KHBhdGllbnQpOwoKICAgICAgICAgICAgICAgIF90aGlzMi5wYXRpZW50ID0gcGF0aWVudDsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgLy8gTWFwIHBhdGllbnQgYXR0cmlidXRlcyB0byB0aGVpciBkaXNwbGF5IHJlcHJlc2VudGF0aW9uCiAgICAgICAgICAgICAgICBfdGhpczIucGF0aWVudFN0YXR1cyA9IGV2ZW50VHlwZXMuZmluZChmdW5jdGlvbiAodHlwZSkgewogICAgICAgICAgICAgICAgICB2YXIgX3RoaXMyJHBhdGllbnQ7CgogICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZS5pZCA9PT0gKChfdGhpczIkcGF0aWVudCA9IF90aGlzMi5wYXRpZW50KSA9PT0gbnVsbCB8fCBfdGhpczIkcGF0aWVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMyJHBhdGllbnQucGF0aWVudFN0YXR1cyk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzMi5zeW1wdG9tcyA9ICgoX3RoaXMyJHBhdGllbnQkc3ltcHRvID0gX3RoaXMyLnBhdGllbnQuc3ltcHRvbXMpID09PSBudWxsIHx8IF90aGlzMiRwYXRpZW50JHN5bXB0byA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMyJHBhdGllbnQkc3ltcHRvLm1hcChmdW5jdGlvbiAoc3ltcHRvbSkgewogICAgICAgICAgICAgICAgICB2YXIgcGF0aWVudFN5bXB0b20gPSBTWU1QVE9NUy5maW5kKGZ1bmN0aW9uIChzeW1wdG9tRmluZCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBzeW1wdG9tRmluZC52YWx1ZSA9PT0gc3ltcHRvbTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIHJldHVybiBwYXRpZW50U3ltcHRvbSA/IHBhdGllbnRTeW1wdG9tLmxhYmVsIDogc3ltcHRvbTsKICAgICAgICAgICAgICAgIH0pKSB8fCBbXTsKICAgICAgICAgICAgICAgIF90aGlzMi5wcmVJbGxuZXNzZXMgPSAoKF90aGlzMiRwYXRpZW50JHByZUlsbCA9IF90aGlzMi5wYXRpZW50LnByZUlsbG5lc3NlcykgPT09IG51bGwgfHwgX3RoaXMyJHBhdGllbnQkcHJlSWxsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpczIkcGF0aWVudCRwcmVJbGwubWFwKGZ1bmN0aW9uIChwcmVJbGxuZXNzKSB7CiAgICAgICAgICAgICAgICAgIHZhciBwYXRpZW50SWxsbmVzcyA9IFBSRV9JTExORVNTRVMuZmluZChmdW5jdGlvbiAoaWxsbmVzcykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBpbGxuZXNzLnZhbHVlID09PSBwcmVJbGxuZXNzOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhdGllbnRJbGxuZXNzID8gcGF0aWVudElsbG5lc3MubGFiZWwgOiBwcmVJbGxuZXNzOwogICAgICAgICAgICAgICAgfSkpIHx8IFtdOwogICAgICAgICAgICAgICAgX3RoaXMyLmRhdGVPZkJpcnRoID0gbW9tZW50KF90aGlzMi5wYXRpZW50LmRhdGVPZkJpcnRoKS5mb3JtYXQoJ0RELk1NLllZWVknKTsKICAgICAgICAgICAgICAgIHBhdGllbnRHZW5kZXIgPSBfdGhpczIucGF0aWVudC5nZW5kZXIgfHwgJyc7CiAgICAgICAgICAgICAgICBfdGhpczIuZ2VuZGVyID0gcGF0aWVudEdlbmRlciA9PT0gJ21hbGUnID8gJ23DpG5ubGljaCcgOiBwYXRpZW50R2VuZGVyID09PSAnZmVtYWxlJyA/ICd3ZWlibGljaCcgOiAnZGl2ZXJzJzsgLy8gVGVzdHMKCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE2OwogICAgICAgICAgICAgICAgcmV0dXJuIEFwaS5hcGkuZ2V0TGFiVGVzdEZvclBhdGllbnRVc2luZ0dldChwYXRpZW50SWQpOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgX3RoaXMyLnRlc3RzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICB0aW1lbGluZUNvbG9yOiBmdW5jdGlvbiB0aW1lbGluZUNvbG9yKGV2ZW50VHlwZSkgewogICAgICBzd2l0Y2ggKGV2ZW50VHlwZSkgewogICAgICAgIGNhc2UgJ1RFU1RfRklOSVNIRURfUE9TSVRJVkUnOgogICAgICAgICAgcmV0dXJuICdyZWQnOwoKICAgICAgICBjYXNlICdURVNUX0ZJTklTSEVEX05FR0FUSVZFJzoKICAgICAgICAgIHJldHVybiAnZ3JlZW4nOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuICdncmV5JzsKICAgICAgfQogICAgfSwKICAgIGZvcm1hdFRpbWVzdGFtcDogZnVuY3Rpb24gZm9ybWF0VGltZXN0YW1wKHRpbWVzdGFtcCkgewogICAgICB2YXIgbW9tZW50VGltZXN0YW1wID0gbW9tZW50KHRpbWVzdGFtcCk7CgogICAgICBpZiAobW9tZW50VGltZXN0YW1wLmlzVmFsaWQoKSkgewogICAgICAgIHJldHVybiBtb21lbnQodGltZXN0YW1wKS5mb3JtYXQoJ0RELk1NLllZWVkgSEg6bW0nKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gJ1VuYmVrYW5udCc7CiAgICAgIH0KICAgIH0KICB9KQp9KTs="},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientDetails.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport moment from 'moment'\nimport Api from '@/api'\nimport { LabTest, Patient, Timestamp } from '@/api/SwaggerApi'\nimport { patientMapper } from '@/store/modules/patients.module'\nimport { EventTypeItem, eventTypes, testResults, TestResultType } from '@/models/event-types'\nimport { SYMPTOMS } from '@/models/symptoms'\nimport { PRE_ILLNESSES } from '@/models/pre-illnesses'\nimport { Column } from 'ant-design-vue/types/table/column'\nimport { TestTypeItem, testTypes } from '@/models/test-types'\n\nconst columnsTests: Partial<Column>[] = [\n  {\n    title: 'Test ID',\n    dataIndex: 'testId',\n    key: 'testId',\n  }, {\n    title: 'Test Typ',\n    dataIndex: 'testType',\n    key: 'testType',\n    scopedSlots: {\n      customRender: 'testType',\n    },\n  }, {\n    title: 'Test Status',\n    dataIndex: 'testStatus',\n    key: 'testStatus',\n    scopedSlots: {\n      customRender: 'testStatus',\n    },\n  }, {\n    title: 'Kommentar',\n    dataIndex: 'comment',\n    key: 'comment',\n  },\n]\n\ninterface State {\n  patient: undefined | Patient;\n  patientStatus: EventTypeItem | undefined;\n  eventTypes: any[];\n  symptoms: string[];\n  preIllnesses: string[];\n  dateOfBirth: string;\n  gender: string;\n  tests: LabTest[];\n  columnsTests: Partial<Column>[];\n  testResults: TestResultType[];\n  testTypes: TestTypeItem[];\n}\n\nexport default Vue.extend({\n  name: 'PatientDetails',\n  computed: {\n    ...patientMapper.mapGetters({\n      patientById: 'patientById',\n    }),\n  },\n\n  async created() {\n    this.loadData()\n  },\n\n  data(): State {\n    return {\n      patient: undefined,\n      patientStatus: undefined,\n      eventTypes: eventTypes,\n      testResults: testResults,\n      testTypes: testTypes,\n      symptoms: [],\n      preIllnesses: [],\n      dateOfBirth: '',\n      gender: '',\n      tests: [],\n      columnsTests,\n    }\n  },\n\n  watch: {\n    '$route.params.id'() {\n      this.loadData()\n    },\n  },\n\n  methods: {\n    ...patientMapper.mapMutations({\n      setPatient: 'setPatient',\n    }),\n    async loadData() {\n      // Load Patient\n      const patientId = this.$route.params.id\n      this.patient = this.patientById(this.$route.params.id)\n      if (!this.patient) {\n        const patient = await Api.api.getPatientForIdUsingGet(patientId)\n        this.setPatient(patient)\n        this.patient = patient\n      }\n\n      // Map patient attributes to their display representation\n      this.patientStatus = eventTypes.find(type => type.id === this.patient?.patientStatus)\n      this.symptoms = this.patient.symptoms?.map(symptom => {\n        const patientSymptom = SYMPTOMS.find(symptomFind => symptomFind.value === symptom)\n        return patientSymptom ? patientSymptom.label : symptom\n      }) || []\n      this.preIllnesses = this.patient.preIllnesses?.map(preIllness => {\n        const patientIllness = PRE_ILLNESSES.find(illness => illness.value === preIllness)\n        return patientIllness ? patientIllness.label : preIllness\n      }) || []\n      this.dateOfBirth = moment(this.patient.dateOfBirth).format('DD.MM.YYYY')\n      const patientGender = this.patient.gender || ''\n      this.gender = patientGender === 'male' ? 'männlich' : patientGender === 'female' ? 'weiblich' : 'divers'\n\n      // Tests\n      this.tests = await Api.api.getLabTestForPatientUsingGet(patientId)\n    },\n    timelineColor(eventType: any) {\n      switch (eventType) {\n        case 'TEST_FINISHED_POSITIVE':\n          return 'red'\n        case 'TEST_FINISHED_NEGATIVE':\n          return 'green'\n        default:\n          return 'grey'\n      }\n    },\n    formatTimestamp(timestamp: Timestamp): string {\n      const momentTimestamp = moment(timestamp)\n      if (momentTimestamp.isValid()) {\n        return moment(timestamp).format('DD.MM.YYYY HH:mm')\n      } else {\n        return 'Unbekannt'\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}