{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterPatient.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterPatient.vue","mtime":1586713315433},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterPatient.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Api from '@/api'\nimport { Patient } from '@/api/SwaggerApi'\nimport PatientStammdaten from '@/components/PatientStammdaten.vue'\nimport { ADDITIONAL_SYMPTOMS, SYMPTOMS } from '@/models/symptoms'\nimport { Option } from '@/models'\nimport { PRE_ILLNESSES } from '@/models/pre-illnesses'\nimport { EXPOSURE_LOCATIONS, EXPOSURES_INTERNAL } from '@/models/exposures'\nimport DateInput from '@/components/DateInput.vue'\nimport { EventTypeItem, eventTypes } from '@/models/event-types'\nimport moment, { Moment } from 'moment'\nimport LaboratoryInput from '@/components/LaboratoryInput.vue'\n\ninterface State {\n  form: any;\n  createdPatient: Patient | null;\n  SYMPTOMS: Option[];\n  PRE_ILLNESSES: Option[];\n  ADDITIONAL_SYMPTOMS: Option[];\n  EXPOSURES_INTERNAL: Option[];\n  EXPOSURE_LOCATIONS: Option[];\n  EVENT_TYPES: EventTypeItem[];\n  showOtherSymptoms: boolean;\n  patientString: string;\n  disableExposureLocation: boolean;\n  disableHospitalization: boolean;\n  disableTestOrder: boolean;\n  today: Moment;\n}\n\nexport default Vue.extend({\n  components: {\n    PatientStammdaten,\n    DateInput,\n    LaboratoryInput,\n  },\n  name: 'RegisterPatient',\n  data(): State {\n    return {\n      form: this.$form.createForm(this, { name: 'coordinated' }),\n      createdPatient: null,\n      SYMPTOMS,\n      ADDITIONAL_SYMPTOMS,\n      PRE_ILLNESSES,\n      EXPOSURES_INTERNAL,\n      EXPOSURE_LOCATIONS,\n      EVENT_TYPES: eventTypes,\n      disableExposureLocation: true,\n      showOtherSymptoms: false,\n      patientString: 'der Patient',\n      disableHospitalization: true,\n      disableTestOrder: true,\n      today: moment(),\n    }\n  },\n  methods: {\n    handleSubmit() {\n      this.form.validateFields(async(err: Error, values: any) => {\n        if (err) {\n          return\n        }\n        const request = {\n          ...values,\n          dateOfBirth: values.dateOfBirth.format('YYYY-MM-DD'),\n          riskAreas: [],\n        }\n\n        if (values.dateofIllness) {\n          request.dateOfIllness = values.dateOfIllness.format('YYYY-MM-DD')\n        } else {\n          request.dateOfIllness = moment().format('YYYY-MM-DD')\n        }\n\n        if (values.dateOfReporting) {\n          request.dateOfReporting = values.dateOfReporting.format('YYYY-MM-DD')\n        } else {\n          request.dateOfReporting = moment().format('YYYY-MM-DD')\n        }\n\n        if (!request.symptoms) {\n          request.symptoms = []\n        }\n        if (!request.preIllnesses) {\n          request.preIllnesses = []\n        }\n\n        if (request.dateOfDeath) {\n          request.dateOfDeath = request.dateOfDeath.format('YYYY-MM-DD')\n        }\n\n        if (!this.disableHospitalization) {\n          request.dateOfHospitalization = values.dateOfHospitalization.format('YYYY-MM-DD')\n          request.onIntensiveCareUnit = values.onIntensiveCareUnit\n        } else {\n          request.dateOfHospitalization = null\n          request.onIntensiveCareUnit = null\n        }\n\n        if (!this.disableTestOrder) {\n          request.laboratoryId = values.laboratoryId\n          request.dateOfTest = values.dateOfTest.format('YYYY-MM-DD')\n        } else {\n          request.laboratoryId = null\n          request.dateOfTest = null\n        }\n\n        if (values.exposures) {\n          request.riskAreas = request.riskAreas.concat(values.exposures)\n        }\n        if (this.showOtherSymptoms) {\n          request.symptoms.push(values.symptomsOther)\n        }\n        if (values.exposureLocation) {\n          request.riskAreas = request.riskAreas.concat(\n            values.exposureLocation\n              .map((location: string) => 'CONTACT_WITH_CORONA_' + location),\n          )\n        }\n\n        const patientString = request.gender === 'female' ? 'Patientin' : 'Patient'\n\n        Api.api.addPatientUsingPost(request).then((patient: Patient) => {\n          this.form.resetFields()\n          this.createdPatient = patient as any\n          this.disableExposureLocation = true\n          this.disableTestOrder = true\n          this.disableHospitalization = true\n          this.showOtherSymptoms = false\n          this.form.setFieldsValue({\n            symptomsOther: undefined,\n            symptomsOtherActivated: undefined,\n          })\n          const notification = {\n            message: patientString + ' registriert.',\n            description: 'Der ' + patientString + ' wurde erfolgreich registriert.',\n          }\n          this.$notification.success(notification)\n          window.scrollTo(0, 0)\n        }).catch((error: Error) => {\n          console.error(error)\n          const notification = {\n            message: patientString + ' nicht registriert.',\n            description: 'Der ' + patientString + ' konnte nicht registriert werden.',\n          }\n          this.$notification.error(notification)\n        })\n      })\n    },\n    symptomsChanged(event: Event) {\n      const target = event.target as any\n      this.showOtherSymptoms = target.checked\n    },\n    genderSelected(gender: string) {\n      console.log(gender)\n      this.patientString = gender === 'female' ? 'die Patientin' : 'der Patient'\n    },\n    exposuresChanged(checkedValues: string[]) {\n      this.disableExposureLocation = !checkedValues.includes('CONTACT_WITH_CORONA_CASE')\n    },\n    hospitalizationChanged(event: Event) {\n      const target = event.target as any\n      this.disableHospitalization = !target.checked\n    },\n    testOrderedChanged(event: Event) {\n      const target = event.target as any\n      this.disableTestOrder = !target.checked\n    },\n  },\n})\n"],"sourceRoot":""}]}