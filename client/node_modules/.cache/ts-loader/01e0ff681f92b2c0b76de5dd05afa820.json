{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientList.vue","mtime":1589906836724},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientList.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Column } from 'ant-design-vue/types/table/column'\nimport Vue from 'vue'\nimport { Patient, PatientSearchParamsDTO } from '@/api/SwaggerApi'\nimport { eventTypes } from '@/models/event-types'\nimport { PatientStatus } from '@/models'\nimport { downloadCsv } from '@/util/export-service'\nimport Api from '@/api'\nimport moment from 'moment'\nimport IndexPatientTableCell from '@/components/IndexPatientTableCell.vue'\n\nconst columnsSchema: Partial<Column>[] = [\n  {\n    title: '',\n    dataIndex: 'operation',\n    scopedSlots: {\n      customRender: ['operation'],\n    },\n  },\n  {\n    title: 'Name',\n    key: 'lastName',\n    scopedSlots: {\n      customRender: ['name'],\n    },\n  },\n  {\n    title: 'Geschlecht',\n    dataIndex: 'gender',\n    key: 'gender',\n    scopedSlots: {\n      customRender: 'gender',\n    },\n  },\n  {\n    title: 'Status',\n    dataIndex: 'patientStatus',\n    key: 'patientStatus',\n    scopedSlots: {\n      customRender: 'patientStatus',\n    },\n    sorter: true,\n  },\n  {\n    title: 'Stadt',\n    key: 'city',\n    scopedSlots: {\n      customRender: 'city',\n    },\n  },\n  {\n    title: 'Alter',\n    dataIndex: 'dateOfBirth',\n    key: 'age',\n    scopedSlots: {\n      customRender: 'age',\n    },\n  },\n  {\n    title: 'Indexpatient',\n    dataIndex: 'id',\n    key: 'indexpatient',\n    scopedSlots: {\n      customRender: 'indexpatient',\n    },\n  },\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n    defaultSortOrder: 'ascend',\n  },\n]\n\ninterface SimpleForm {\n  query: string\n  order: string\n  orderBy: string\n  offsetPage: number\n  pageSize: number\n}\n\ninterface State {\n  form: SimpleForm\n  advancedForm: Partial<PatientSearchParamsDTO>\n  quarantineSelection: string\n  currentPatients: Patient[]\n\n  [key: string]: any\n}\n\nexport default Vue.extend({\n  name: 'PatientList',\n  components: {\n    IndexPatientTableCell,\n  },\n  data(): State {\n    return {\n      form: {\n        query: '',\n        order: 'asc',\n        orderBy: 'lastName',\n        offsetPage: 0,\n        pageSize: 10,\n      },\n      advancedForm: {\n        gender: '',\n        city: '',\n        email: '',\n        phoneNumber: '',\n        street: '',\n        houseNumber: '',\n        zip: '',\n        insuranceCompany: '',\n        insuranceMembershipNumber: '',\n        doctorId: '',\n        laboratoryId: '',\n        firstName: '',\n        lastName: '',\n        patientStatus: undefined,\n        quarantineStatus: undefined,\n        id: '',\n      },\n      quarantineSelection: '',\n      content: '',\n      count: 10,\n      currentPage: 1, // Starts at 1\n      columnsSchema,\n      data: [], // data\n      showAdvancedSearch: false,\n      eventTypes: eventTypes,\n      currentPatients: [],\n    }\n  },\n  watch: {\n    currentPage() {\n      this.loadPage()\n    },\n    '$route.query.query'() {\n      this.loadAfterUrlChange()\n    },\n  },\n  created() {\n    this.indexPatientMap = new Map()\n    this.loadAfterUrlChange()\n  },\n  methods: {\n    loadAfterUrlChange() {\n      const query = this.$route.query.query\n      if (query) {\n        this.form.query = query.toString()\n      }\n      this.loadPage()\n    },\n    handleSearch() {\n      this.currentPage = 1\n      this.loadPage()\n    },\n    onShowSizeChange(current: number, pageSize: number) {\n      this.currentPage = current\n      this.advancedForm.pageSize = pageSize\n      this.loadPage()\n    },\n    loadPage() {\n      this.form.offsetPage = this.currentPage - 1\n      let countPromise\n      let queryPromise\n      if (this.showAdvancedSearch) {\n        const formValues = { ...this.form, ...this.advancedForm }\n\n        if (!formValues.patientStatus) {\n          // Backend fails on empty string\n          formValues.patientStatus = undefined\n        }\n        formValues.quarantineStatus = this.getQuarantineSelection() as PatientStatus[]\n\n        countPromise = Api.countQueryPatientsUsingPost(formValues)\n        queryPromise = Api.queryPatientsUsingPost(formValues)\n      } else {\n        const query = this.form.query\n        countPromise = Api.countQueryPatientsSimpleUsingGet({ query })\n        queryPromise = Api.queryPatientsSimpleUsingPost({ ...this.form })\n      }\n\n      countPromise.then((count) => {\n        this.count = count\n      })\n      queryPromise\n        .then((result: Patient[]) => {\n          this.currentPatients = result\n        })\n        .catch((error) => {\n          console.error(error)\n          const notification = {\n            message: 'Fehler beim Laden der Patientendaten.',\n            description: error.message,\n          }\n          this.$notification.error(notification)\n        })\n    },\n    toggleAdvancedSearch() {\n      this.showAdvancedSearch = !this.showAdvancedSearch\n    },\n    downloadPatients() {\n      this.form.offsetPage = this.currentPage - 1\n      let countPromise\n      let formValues: any\n      if (this.showAdvancedSearch) {\n        formValues = { ...this.form, ...this.advancedForm }\n        if (!formValues.patientStatus) {\n          // Backend fails on empty string\n          delete formValues.patientStatus\n        }\n        formValues.quarantineStatus = this.getQuarantineSelection()\n        countPromise = Api.countQueryPatientsUsingPost(formValues)\n      } else {\n        formValues = { ...this.form }\n        const query = this.form.query\n        countPromise = Api.countQueryPatientsSimpleUsingGet({ query })\n      }\n\n      countPromise.then((count) => {\n        // Download all data that applies to the current filter\n        formValues.offsetPage = 0\n        formValues.pageSize = count\n\n        let queryPromise: Promise<Patient[]>\n        if (this.showAdvancedSearch) {\n          queryPromise = Api.queryPatientsUsingPost(formValues)\n        } else {\n          queryPromise = Api.queryPatientsSimpleUsingPost(formValues)\n        }\n\n        queryPromise\n          .then((result) => {\n            const header =\n              'ID;Vorname;Nachname;Geschlecht;Status;Geburtsdatum;Stadt;E-Mail;Telefonnummer;' +\n              'Straße;Hausnummer;Stadt;Versicherung;Versichertennummer'\n            const patients = result\n              .map(\n                (patient: Patient) =>\n                  `${patient.id};${patient.firstName};${patient.lastName};${patient.gender};${patient.patientStatus};` +\n                  `${patient.dateOfBirth};${patient.city};${patient.email};${patient.phoneNumber};${patient.street};` +\n                  `${patient.houseNumber};${patient.city};${patient.insuranceCompany};${patient.insuranceMembershipNumber}`\n              )\n              .join('\\n')\n            const filename =\n              moment().format('YYYY_MM_DD') + '_patienten_export.csv'\n            downloadCsv(header + '\\n' + patients, filename)\n          })\n          .catch((error: Error) => {\n            console.error(error)\n            const notification = {\n              message: 'Fehler beim Laden der Patientendaten.',\n              description: error.message,\n            }\n            this.$notification.error(notification)\n          })\n      })\n    },\n    handleTableChange(pagination: any, filters: any, sorter: any) {\n      const sortKey = sorter.field ? sorter.field : 'lastName'\n      let sortOrder = 'asc'\n      if (sorter.order === 'descend') {\n        sortOrder = 'desc'\n      }\n      this.form.order = sortOrder\n      this.form.orderBy = sortKey\n      this.loadPage()\n    },\n    handlePatientClick(patient: Patient) {\n      if (patient.id) {\n        this.$router.push({\n          name: 'patient-detail',\n          params: { id: patient.id },\n        })\n      }\n    },\n    customRow(record: Patient) {\n      return {\n        on: {\n          dblclick: () => this.handlePatientClick(record),\n        },\n      }\n    },\n    getQuarantineSelection(): (PatientStatus | null)[] {\n      if (!this.quarantineSelection) {\n        return []\n      }\n      if (this.quarantineSelection === 'NO_SELECTION') {\n        return [\n          'QUARANTINE_RELEASED',\n          'QUARANTINE_PROFESSIONBAN_RELEASED',\n          null,\n        ]\n      } else {\n        return [this.quarantineSelection as PatientStatus]\n      }\n    },\n    moment,\n  },\n})\n"],"sourceRoot":""}]}