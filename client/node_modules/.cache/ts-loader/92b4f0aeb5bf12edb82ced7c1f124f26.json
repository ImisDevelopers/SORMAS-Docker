{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js??ref--13-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/store/modules/patients.module.ts","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/store/modules/patients.module.ts","mtime":1586713315430},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js","mtime":1584795992192}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2Npcm90emtpL3Byb2plY3RzL3ZpcnVzLzFfMDExX2FfaW5mZWt0aW9uc2ZhbGxfdWViZXJtaXR0ZWxsdW5nL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvY2lyb3R6a2kvcHJvamVjdHMvdmlydXMvMV8wMTFfYV9pbmZla3Rpb25zZmFsbF91ZWJlcm1pdHRlbGx1bmcvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL2hvbWUvY2lyb3R6a2kvcHJvamVjdHMvdmlydXMvMV8wMTFfYV9pbmZla3Rpb25zZmFsbF91ZWJlcm1pdHRlbGx1bmcvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL2hvbWUvY2lyb3R6a2kvcHJvamVjdHMvdmlydXMvMV8wMTFfYV9pbmZla3Rpb25zZmFsbF91ZWJlcm1pdHRlbGx1bmcvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvY2lyb3R6a2kvcHJvamVjdHMvdmlydXMvMV8wMTFfYV9pbmZla3Rpb25zZmFsbF91ZWJlcm1pdHRlbGx1bmcvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBBcGkgZnJvbSAnQC9hcGknOwppbXBvcnQgeyBBY3Rpb25zLCBjcmVhdGVNYXBwZXIsIEdldHRlcnMsIE1vZHVsZSwgTXV0YXRpb25zIH0gZnJvbSAndnVleC1zbWFydC1tb2R1bGUnOwoKdmFyIFBhdGllbnRTdGF0ZSA9IGZ1bmN0aW9uIFBhdGllbnRTdGF0ZSgpIHsKICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGF0aWVudFN0YXRlKTsKCiAgdGhpcy5wYXRpZW50cyA9IFtdOwp9OwoKdmFyIFBhdGllbnRHZXR0ZXJzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfR2V0dGVycykgewogIF9pbmhlcml0cyhQYXRpZW50R2V0dGVycywgX0dldHRlcnMpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFBhdGllbnRHZXR0ZXJzKTsKCiAgZnVuY3Rpb24gUGF0aWVudEdldHRlcnMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGF0aWVudEdldHRlcnMpOwoKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhQYXRpZW50R2V0dGVycywgW3sKICAgIGtleTogInBhdGllbnRCeUlkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwYXRpZW50QnlJZChpZCkgewogICAgICBpZiAodGhpcy5zdGF0ZS5wYXRpZW50ICYmIHRoaXMuc3RhdGUucGF0aWVudC5pZCA9PT0gaWQpIHsKICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5wYXRpZW50OwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5zdGF0ZS5wYXRpZW50cy5maW5kKGZ1bmN0aW9uIChwYXRpZW50KSB7CiAgICAgICAgcmV0dXJuIHBhdGllbnQuaWQgPT09IGlkOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBQYXRpZW50R2V0dGVyczsKfShHZXR0ZXJzKTsKCnZhciBQYXRpZW50TXV0YXRpb25zID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfTXV0YXRpb25zKSB7CiAgX2luaGVyaXRzKFBhdGllbnRNdXRhdGlvbnMsIF9NdXRhdGlvbnMpOwoKICB2YXIgX3N1cGVyMiA9IF9jcmVhdGVTdXBlcihQYXRpZW50TXV0YXRpb25zKTsKCiAgZnVuY3Rpb24gUGF0aWVudE11dGF0aW9ucygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQYXRpZW50TXV0YXRpb25zKTsKCiAgICByZXR1cm4gX3N1cGVyMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFBhdGllbnRNdXRhdGlvbnMsIFt7CiAgICBrZXk6ICJhZGRQYXRpZW50cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUGF0aWVudHMocGF0aWVudHMpIHsKICAgICAgdGhpcy5zdGF0ZS5wYXRpZW50cy5jb25jYXQocGF0aWVudHMpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFBhdGllbnRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRQYXRpZW50cyhwYXRpZW50cykgewogICAgICB0aGlzLnN0YXRlLnBhdGllbnRzID0gcGF0aWVudHM7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0UGF0aWVudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0UGF0aWVudChwYXRpZW50KSB7CiAgICAgIHRoaXMuc3RhdGUucGF0aWVudCA9IHBhdGllbnQ7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUGF0aWVudE11dGF0aW9uczsKfShNdXRhdGlvbnMpOwoKdmFyIFBhdGllbnRBY3Rpb25zID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQWN0aW9ucykgewogIF9pbmhlcml0cyhQYXRpZW50QWN0aW9ucywgX0FjdGlvbnMpOwoKICB2YXIgX3N1cGVyMyA9IF9jcmVhdGVTdXBlcihQYXRpZW50QWN0aW9ucyk7CgogIGZ1bmN0aW9uIFBhdGllbnRBY3Rpb25zKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBhdGllbnRBY3Rpb25zKTsKCiAgICByZXR1cm4gX3N1cGVyMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFBhdGllbnRBY3Rpb25zLCBbewogICAga2V5OiAiZmV0Y2hQYXRpZW50cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2ZldGNoUGF0aWVudHMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoaW5zdGFuY2UpIHsKICAgICAgICB2YXIgcGF0aWVudHM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBBcGkuYXBpLmdldEFsbFBhdGllbnRzVXNpbmdHZXQoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcGF0aWVudHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgdGhpcy5jb21taXQoJ3NldFBhdGllbnRzJywgcGF0aWVudHMpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGluc3RhbmNlLiRub3RpZmljYXRpb24uZXJyb3IoewogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmVobGVyJywKICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdQYXRpZW50ZW4ga29udGVudCBuaWNodCBnZWxhZGVuIHdlcmRlbicKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1swLCA3XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBmZXRjaFBhdGllbnRzKF94KSB7CiAgICAgICAgcmV0dXJuIF9mZXRjaFBhdGllbnRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmZXRjaFBhdGllbnRzOwogICAgfSgpCiAgfSwgewogICAga2V5OiAicmVnaXN0ZXJQYXRpZW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVnaXN0ZXJQYXRpZW50ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihhcmcpIHsKICAgICAgICB2YXIgcGF0aWVudFJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gQXBpLmFwaS5hZGRQYXRpZW50VXNpbmdQb3N0KGFyZy5wYXRpZW50KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcGF0aWVudFJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICB0aGlzLmNvbW1pdCgnc2V0UGF0aWVudCcsIHBhdGllbnRSZXNwb25zZSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcGF0aWVudFJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgICAgIHRocm93IF9jb250ZXh0Mi50MDsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcywgW1swLCA4XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiByZWdpc3RlclBhdGllbnQoX3gyKSB7CiAgICAgICAgcmV0dXJuIF9yZWdpc3RlclBhdGllbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlZ2lzdGVyUGF0aWVudDsKICAgIH0oKQogIH1dKTsKCiAgcmV0dXJuIFBhdGllbnRBY3Rpb25zOwp9KEFjdGlvbnMpOwoKZXhwb3J0IHZhciBwYXRpZW50TW9kdWxlID0gbmV3IE1vZHVsZSh7CiAgc3RhdGU6IFBhdGllbnRTdGF0ZSwKICBnZXR0ZXJzOiBQYXRpZW50R2V0dGVycywKICBtdXRhdGlvbnM6IFBhdGllbnRNdXRhdGlvbnMsCiAgYWN0aW9uczogUGF0aWVudEFjdGlvbnMKfSk7CmV4cG9ydCB2YXIgcGF0aWVudE1hcHBlciA9IGNyZWF0ZU1hcHBlcihwYXRpZW50TW9kdWxlKTs="},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js??ref--13-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/store/modules/patients.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,GAAP,MAAgB,OAAhB;AAGA,SAAS,OAAT,EAAkB,YAAlB,EAAgC,OAAhC,EAAyC,MAAzC,EAAiD,SAAjD,QAAkE,mBAAlE;;IAEM,Y,GAAN,wBAAA;AAAA;;AAEE,OAAA,QAAA,GAAsB,EAAtB;AACD,C;;IAEK,c;;;;;;;;;;;;;gCACQ,E,EAAU;AACpB,UAAI,KAAK,KAAL,CAAW,OAAX,IAAsB,KAAK,KAAL,CAAW,OAAX,CAAmB,EAAnB,KAA0B,EAApD,EAAwD;AACtD,eAAO,KAAK,KAAL,CAAW,OAAlB;AACD;;AACD,aAAO,KAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAyB,UAAA,OAAO;AAAA,eAAI,OAAO,CAAC,EAAR,KAAe,EAAnB;AAAA,OAAhC,CAAP;AACD;;;;EAN0B,O;;IASvB,gB;;;;;;;;;;;;;gCACQ,Q,EAAmB;AAC7B,WAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA2B,QAA3B;AACD;;;gCAEW,Q,EAAmB;AAC7B,WAAK,KAAL,CAAW,QAAX,GAAsB,QAAtB;AACD;;;+BAEU,O,EAAgB;AACzB,WAAK,KAAL,CAAW,OAAX,GAAqB,OAArB;AACD;;;;EAX4B,S;;IAczB,c;;;;;;;;;;;;;;oGACgB,Q;;;;;;;;uBAGO,GAAG,CAAC,GAAJ,CAAQ,sBAAR,E;;;AAAjB,gBAAA,Q;AACN,qBAAK,MAAL,CAAY,aAAZ,EAA2B,QAA3B;;;;;;;AAEA,gBAAA,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAA6B;AAC3B,kBAAA,OAAO,EAAE,QADkB;AAE3B,kBAAA,WAAW,EAAE;AAFc,iBAA7B;;;;;;;;;;;;;;;;;;;uGAQkB,G;;;;;;;;uBAGY,GAAG,CAAC,GAAJ,CAAQ,mBAAR,CAA4B,GAAG,CAAC,OAAhC,C;;;AAAxB,gBAAA,e;AACN,qBAAK,MAAL,CAAY,YAAZ,EAA0B,eAA1B;kDACO,e;;;;;AAEP,gBAAA,OAAO,CAAC,GAAR;;;;;;;;;;;;;;;;;;;;EAtBuB,O;;AA6B7B,OAAO,IAAM,aAAa,GAAG,IAAI,MAAJ,CAAW;AACtC,EAAA,KAAK,EAAE,YAD+B;AAEtC,EAAA,OAAO,EAAE,cAF6B;AAGtC,EAAA,SAAS,EAAE,gBAH2B;AAItC,EAAA,OAAO,EAAE;AAJ6B,CAAX,CAAtB;AAOP,OAAO,IAAM,aAAa,GAAG,YAAY,CAAC,aAAD,CAAlC","sourcesContent":["import Api from '@/api'\nimport { Patient } from '@/api/SwaggerApi'\nimport { Vue } from 'vue/types/vue'\nimport { Actions, createMapper, Getters, Module, Mutations } from 'vuex-smart-module'\n\nclass PatientState {\n  patient: Patient | undefined\n  patients: Patient[] = []\n}\n\nclass PatientGetters extends Getters<PatientState> {\n  patientById(id: string): Patient | undefined {\n    if (this.state.patient && this.state.patient.id === id) {\n      return this.state.patient\n    }\n    return this.state.patients.find(patient => patient.id === id)\n  }\n}\n\nclass PatientMutations extends Mutations<PatientState> {\n  addPatients(patients: Patient[]) {\n    this.state.patients.concat(patients)\n  }\n\n  setPatients(patients: Patient[]) {\n    this.state.patients = patients\n  }\n\n  setPatient(patient: Patient) {\n    this.state.patient = patient\n  }\n}\n\nclass PatientActions extends Actions<PatientState, PatientGetters, PatientMutations, PatientActions> {\n  async fetchPatients(instance: Vue) {\n    try {\n      // this.commit('shared/startedLoading', 'fetchPatients', { root: true })\n      const patients = await Api.api.getAllPatientsUsingGet()\n      this.commit('setPatients', patients)\n    } catch (err) {\n      instance.$notification.error({\n        message: 'Fehler',\n        description: 'Patienten kontent nicht geladen werden',\n      })\n    }\n    // commit('shared/finishedLoading', 'fetchPatients', { root: true })\n  }\n\n  async registerPatient(arg: { patient: Patient; instance?: Vue }): Promise<Patient> {\n    // commit('shared/startedLoading', 'registerPatient', { root: true })\n    try {\n      const patientResponse = await Api.api.addPatientUsingPost(arg.patient)\n      this.commit('setPatient', patientResponse)\n      return patientResponse\n    } catch (err) {\n      console.log(err)\n      throw err\n    }\n    // commit('shared/finishedLoading', 'registerPatient', { root: true })\n  }\n}\n\nexport const patientModule = new Module({\n  state: PatientState,\n  getters: PatientGetters,\n  mutations: PatientMutations,\n  actions: PatientActions,\n})\n\nexport const patientMapper = createMapper(patientModule)\n"],"sourceRoot":""}]}