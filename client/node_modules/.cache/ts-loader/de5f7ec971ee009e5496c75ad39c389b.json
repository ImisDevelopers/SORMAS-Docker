{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js??ref--13-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/api/SwaggerApi.ts","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/api/SwaggerApi.ts","mtime":1589900670551},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js","mtime":1584795992192}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js??ref--13-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/api/SwaggerApi.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n\nexport type AggregationResultZip = object;\n\nexport interface ApiFunctionSpec {\n  method?: string;\n  path?: string;\n}\n\nexport interface AuthRequestDTO {\n  password?: string;\n  username?: string;\n}\n\nexport interface ChangePasswordDTO {\n  newPassword?: string;\n  oldPassword?: string;\n}\n\nexport interface CreateInstitutionDTO {\n  city?: string;\n  comment?: string;\n  email?: string;\n  houseNumber?: string;\n  id?: string;\n  institutionType?:\n    | \"LABORATORY\"\n    | \"TEST_SITE\"\n    | \"CLINIC\"\n    | \"DOCTORS_OFFICE\"\n    | \"GOVERNMENT_AGENCY\"\n    | \"DEPARTMENT_OF_HEALTH\";\n  name?: string;\n  phoneNumber?: string;\n  street?: string;\n  user?: RegisterUserRequest;\n  zip?: string;\n}\n\nexport interface CreateLabTestDTO {\n  comment?: string;\n  eventDate?: string;\n  laboratoryId?: string;\n  patientId?: string;\n  testId?: string;\n  testMaterial?: \"RACHENABSTRICH\" | \"NASENABSTRICH\" | \"VOLLBLUT\";\n  testType?: \"PCR\" | \"ANTIBODY\";\n}\n\nexport interface CreatePatientDTO {\n  city?: string;\n  coronaContacts?: boolean;\n  country?: string;\n  dateOfBirth?: string;\n  dateOfDeath?: string;\n  dateOfHospitalization?: string;\n  dateOfIllness?: string;\n  dateOfReporting?: string;\n  email?: string;\n  employer?: string;\n  firstName?: string;\n  fluImmunization?: boolean;\n  gender?: string;\n  houseNumber?: string;\n  insuranceCompany?: string;\n  insuranceMembershipNumber?: string;\n  lastName?: string;\n  nationality?: string;\n  occupation?: string;\n  onIntensiveCareUnit?: boolean;\n  patientStatus?:\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\";\n  phoneNumber?: string;\n  preIllnesses?: string[];\n  quarantineUntil?: string;\n  riskAreas?: string[];\n  riskOccupation?:\n    | \"NO_RISK_OCCUPATION\"\n    | \"FIRE_FIGHTER_POLICE\"\n    | \"TEACHER\"\n    | \"PUBLIC_ADMINISTRATION\"\n    | \"STUDENT\"\n    | \"DOCTOR\"\n    | \"CAREGIVER\"\n    | \"NURSE\";\n  speedOfSymptomsOutbreak?: string;\n  stayCity?: string;\n  stayCountry?: string;\n  stayHouseNumber?: string;\n  stayStreet?: string;\n  stayZip?: string;\n  street?: string;\n  symptoms?: string[];\n  weakenedImmuneSystem?: boolean;\n  zip?: string;\n}\n\nexport interface Doctor {\n  city?: string;\n  comment?: string;\n  email?: string;\n  houseNumber?: string;\n  id?: string;\n  name?: string;\n  phoneNumber?: string;\n  street?: string;\n  type?: \"LABORATORY\" | \"TEST_SITE\" | \"CLINIC\" | \"DOCTORS_OFFICE\" | \"GOVERNMENT_AGENCY\" | \"DEPARTMENT_OF_HEALTH\";\n  users?: User[];\n  zip?: string;\n}\n\nexport interface ExposureContactContactView {\n  firstName?: string;\n  id?: string;\n  inQuarantine?: boolean;\n  infected?: boolean;\n  lastName?: string;\n}\n\nexport interface ExposureContactFromServer {\n  comment?: string;\n  contact?: ExposureContactContactView;\n  context?: string;\n  dateOfContact?: string;\n  id?: number;\n  source?: ExposureContactContactView;\n}\n\nexport interface ExposureContactToServer {\n  comment?: string;\n  contact?: string;\n  context?: string;\n  dateOfContact?: string;\n  id?: number;\n  source?: string;\n}\n\nexport interface GrantedAuthority {\n  authority?: string;\n}\n\nexport interface Incident {\n  caseId?: string;\n  eventDate?: string;\n  eventType?:\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\";\n  id?: string;\n  patient?: Patient;\n  versionTimestamp?: string;\n  versionUser?: User;\n}\n\nexport interface Institution {\n  city?: string;\n  comment?: string;\n  email?: string;\n  houseNumber?: string;\n  id?: string;\n  name?: string;\n  phoneNumber?: string;\n  street?: string;\n  type?: \"LABORATORY\" | \"TEST_SITE\" | \"CLINIC\" | \"DOCTORS_OFFICE\" | \"GOVERNMENT_AGENCY\" | \"DEPARTMENT_OF_HEALTH\";\n  users?: User[];\n  zip?: string;\n}\n\nexport interface InstitutionDTO {\n  city?: string;\n  comment?: string;\n  email?: string;\n  houseNumber?: string;\n  id?: string;\n  institutionType?:\n    | \"LABORATORY\"\n    | \"TEST_SITE\"\n    | \"CLINIC\"\n    | \"DOCTORS_OFFICE\"\n    | \"GOVERNMENT_AGENCY\"\n    | \"DEPARTMENT_OF_HEALTH\";\n  name?: string;\n  phoneNumber?: string;\n  street?: string;\n  zip?: string;\n}\n\nexport interface InstitutionImpl {\n  city?: string;\n  comment?: string;\n  email?: string;\n  houseNumber?: string;\n  id?: string;\n  name?: string;\n  phoneNumber?: string;\n  street?: string;\n  type?: \"LABORATORY\" | \"TEST_SITE\" | \"CLINIC\" | \"DOCTORS_OFFICE\" | \"GOVERNMENT_AGENCY\" | \"DEPARTMENT_OF_HEALTH\";\n  users?: User[];\n  zip?: string;\n}\n\nexport interface LabTest {\n  comment?: string;\n  id?: string;\n  lastUpdate?: string;\n  report?: string;\n  testId: string;\n  testMaterial?: \"RACHENABSTRICH\" | \"NASENABSTRICH\" | \"VOLLBLUT\";\n  testStatus?: \"TEST_SUBMITTED\" | \"TEST_IN_PROGRESS\" | \"TEST_POSITIVE\" | \"TEST_NEGATIVE\" | \"TEST_INVALID\";\n  testType?: \"PCR\" | \"ANTIBODY\";\n}\n\nexport interface Laboratory {\n  assignedLabTest?: LabTest[];\n  city?: string;\n  comment?: string;\n  email?: string;\n  houseNumber?: string;\n  id?: string;\n  name?: string;\n  phoneNumber?: string;\n  street?: string;\n  type?: \"LABORATORY\" | \"TEST_SITE\" | \"CLINIC\" | \"DOCTORS_OFFICE\" | \"GOVERNMENT_AGENCY\" | \"DEPARTMENT_OF_HEALTH\";\n  users?: User[];\n  zip?: string;\n}\n\nexport interface Link {\n  href?: string;\n  templated?: boolean;\n}\n\nexport interface ModelAndView {\n  empty?: boolean;\n  model?: object;\n  modelMap?: Record<string, object>;\n  reference?: boolean;\n  status?:\n    | \"100 CONTINUE\"\n    | \"101 SWITCHING_PROTOCOLS\"\n    | \"102 PROCESSING\"\n    | \"103 CHECKPOINT\"\n    | \"200 OK\"\n    | \"201 CREATED\"\n    | \"202 ACCEPTED\"\n    | \"203 NON_AUTHORITATIVE_INFORMATION\"\n    | \"204 NO_CONTENT\"\n    | \"205 RESET_CONTENT\"\n    | \"206 PARTIAL_CONTENT\"\n    | \"207 MULTI_STATUS\"\n    | \"208 ALREADY_REPORTED\"\n    | \"226 IM_USED\"\n    | \"300 MULTIPLE_CHOICES\"\n    | \"301 MOVED_PERMANENTLY\"\n    | \"302 FOUND\"\n    | \"302 MOVED_TEMPORARILY\"\n    | \"303 SEE_OTHER\"\n    | \"304 NOT_MODIFIED\"\n    | \"305 USE_PROXY\"\n    | \"307 TEMPORARY_REDIRECT\"\n    | \"308 PERMANENT_REDIRECT\"\n    | \"400 BAD_REQUEST\"\n    | \"401 UNAUTHORIZED\"\n    | \"402 PAYMENT_REQUIRED\"\n    | \"403 FORBIDDEN\"\n    | \"404 NOT_FOUND\"\n    | \"405 METHOD_NOT_ALLOWED\"\n    | \"406 NOT_ACCEPTABLE\"\n    | \"407 PROXY_AUTHENTICATION_REQUIRED\"\n    | \"408 REQUEST_TIMEOUT\"\n    | \"409 CONFLICT\"\n    | \"410 GONE\"\n    | \"411 LENGTH_REQUIRED\"\n    | \"412 PRECONDITION_FAILED\"\n    | \"413 PAYLOAD_TOO_LARGE\"\n    | \"413 REQUEST_ENTITY_TOO_LARGE\"\n    | \"414 URI_TOO_LONG\"\n    | \"414 REQUEST_URI_TOO_LONG\"\n    | \"415 UNSUPPORTED_MEDIA_TYPE\"\n    | \"416 REQUESTED_RANGE_NOT_SATISFIABLE\"\n    | \"417 EXPECTATION_FAILED\"\n    | \"418 I_AM_A_TEAPOT\"\n    | \"419 INSUFFICIENT_SPACE_ON_RESOURCE\"\n    | \"420 METHOD_FAILURE\"\n    | \"421 DESTINATION_LOCKED\"\n    | \"422 UNPROCESSABLE_ENTITY\"\n    | \"423 LOCKED\"\n    | \"424 FAILED_DEPENDENCY\"\n    | \"425 TOO_EARLY\"\n    | \"426 UPGRADE_REQUIRED\"\n    | \"428 PRECONDITION_REQUIRED\"\n    | \"429 TOO_MANY_REQUESTS\"\n    | \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\"\n    | \"451 UNAVAILABLE_FOR_LEGAL_REASONS\"\n    | \"500 INTERNAL_SERVER_ERROR\"\n    | \"501 NOT_IMPLEMENTED\"\n    | \"502 BAD_GATEWAY\"\n    | \"503 SERVICE_UNAVAILABLE\"\n    | \"504 GATEWAY_TIMEOUT\"\n    | \"505 HTTP_VERSION_NOT_SUPPORTED\"\n    | \"506 VARIANT_ALSO_NEGOTIATES\"\n    | \"507 INSUFFICIENT_STORAGE\"\n    | \"508 LOOP_DETECTED\"\n    | \"509 BANDWIDTH_LIMIT_EXCEEDED\"\n    | \"510 NOT_EXTENDED\"\n    | \"511 NETWORK_AUTHENTICATION_REQUIRED\";\n  view?: View;\n  viewName?: string;\n}\n\nexport interface Patient {\n  city?: string;\n  comment?: string;\n  confirmed?: boolean;\n  coronaContacts?: boolean;\n  country?: string;\n  creationTimestamp?: string;\n  dateOfBirth?: string;\n  dateOfDeath?: string;\n  dateOfHospitalization?: string;\n  dateOfIllness?: string;\n  email?: string;\n  employer?: string;\n  events?: PatientEvent[];\n  firstName?: string;\n  fluImmunization?: boolean;\n  gender?: string;\n  houseNumber?: string;\n  id?: string;\n  insuranceCompany?: string;\n  insuranceMembershipNumber?: string;\n  lastName?: string;\n  nationality?: string;\n  occupation?: string;\n  onIntensiveCareUnit?: boolean;\n  patientStatus?:\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\";\n  phoneNumber?: string;\n  preIllnesses?: string[];\n  quarantineUntil?: string;\n  riskAreas?: string[];\n  riskOccupation?:\n    | \"NO_RISK_OCCUPATION\"\n    | \"FIRE_FIGHTER_POLICE\"\n    | \"TEACHER\"\n    | \"PUBLIC_ADMINISTRATION\"\n    | \"STUDENT\"\n    | \"DOCTOR\"\n    | \"CAREGIVER\"\n    | \"NURSE\";\n  speedOfSymptomsOutbreak?: string;\n  stayCity?: string;\n  stayCountry?: string;\n  stayHouseNumber?: string;\n  stayStreet?: string;\n  stayZip?: string;\n  street?: string;\n  symptoms?: string[];\n  weakenedImmuneSystem?: boolean;\n  zip?: string;\n}\n\nexport interface PatientEvent {\n  accomodation?: string;\n  comment?: string;\n  eventTimestamp?: Timestamp;\n  eventType?:\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\";\n  id?: string;\n  illness?: \"CORONA\";\n  labTest?: LabTest;\n  patient?: Patient;\n  responsibleDoctor?: Doctor;\n}\n\nexport interface PatientSearchParamsDTO {\n  city?: string;\n  doctorId?: string;\n  email?: string;\n  firstName?: string;\n  gender?: string;\n  houseNumber?: string;\n  id?: string;\n  includePatientEvents?: boolean;\n  insuranceCompany?: string;\n  insuranceMembershipNumber?: string;\n  laboratoryId?: string;\n  lastName?: string;\n  offsetPage?: number;\n  order?: string;\n  orderBy?: string;\n  pageSize?: number;\n  patientStatus?:\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\";\n  phoneNumber?: string;\n  quarantineStatus?: Array<\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\"\n  >;\n  street?: string;\n  zip?: string;\n}\n\nexport interface PatientSimpleSearchParamsDTO {\n  offsetPage?: number;\n  order?: string;\n  orderBy?: string;\n  pageSize?: number;\n  query?: string;\n}\n\nexport interface QuarantineIncident {\n  caseId?: string;\n  comment?: string;\n  eventDate?: string;\n  eventType?:\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\";\n  id?: string;\n  patient?: Patient;\n  until?: string;\n  versionTimestamp?: string;\n  versionUser?: User;\n}\n\nexport interface RegisterUserRequest {\n  firstName?: string;\n  lastName?: string;\n  password?: string;\n  userRole?: \"USER_ROLE_ADMIN\" | \"USER_ROLE_REGULAR\";\n  username?: string;\n}\n\nexport interface RequestLabTestDTO {\n  doctorId?: string;\n  laboratoryId?: string;\n  patientId?: string;\n}\n\nexport interface RequestQuarantineDTO {\n  comment?: string;\n  dateUntil?: string;\n  eventDate?: string;\n  status?:\n    | \"REGISTERED\"\n    | \"SUSPECTED\"\n    | \"ORDER_TEST\"\n    | \"SCHEDULED_FOR_TESTING\"\n    | \"TEST_SUBMITTED_IN_PROGRESS\"\n    | \"TEST_FINISHED_POSITIVE\"\n    | \"TEST_FINISHED_NEGATIVE\"\n    | \"TEST_FINISHED_INVALID\"\n    | \"TEST_FINISHED_RECOVERED\"\n    | \"TEST_FINISHED_NOT_RECOVERED\"\n    | \"PATIENT_DEAD\"\n    | \"DOCTORS_VISIT\"\n    | \"QUARANTINE_SELECTED\"\n    | \"QUARANTINE_MANDATED\"\n    | \"QUARANTINE_RELEASED\"\n    | \"QUARANTINE_PROFESSIONBAN_RELEASED\";\n}\n\nexport interface SendToQuarantineDTO {\n  eventDate?: string;\n  patientIds?: string[];\n}\n\nexport interface Timestamp {\n  date?: number;\n  day?: number;\n  hours?: number;\n  minutes?: number;\n  month?: number;\n  nanos?: number;\n  seconds?: number;\n  time?: number;\n  timezoneOffset?: number;\n  year?: number;\n}\n\nexport interface TokenDTO {\n  jwtToken?: string;\n}\n\nexport interface UpdateTestStatusDTO {\n  comment?: string;\n  eventDate?: string;\n  file?: string;\n  status?: \"TEST_SUBMITTED\" | \"TEST_IN_PROGRESS\" | \"TEST_POSITIVE\" | \"TEST_NEGATIVE\" | \"TEST_INVALID\";\n  testId?: string;\n}\n\nexport interface User {\n  accountNonExpired?: boolean;\n  accountNonLocked?: boolean;\n  authorities?: GrantedAuthority[];\n  credentialsNonExpired?: boolean;\n  enabled?: boolean;\n  firstName?: string;\n  id?: number;\n  institution?: InstitutionImpl;\n  institutionId?: string;\n  institutionType?:\n    | \"LABORATORY\"\n    | \"TEST_SITE\"\n    | \"CLINIC\"\n    | \"DOCTORS_OFFICE\"\n    | \"GOVERNMENT_AGENCY\"\n    | \"DEPARTMENT_OF_HEALTH\";\n  lastName?: string;\n  userRole?: \"USER_ROLE_ADMIN\" | \"USER_ROLE_REGULAR\";\n  username?: string;\n}\n\nexport interface UserDTO {\n  authorities?: GrantedAuthority[];\n  firstName?: string;\n  id?: number;\n  lastName?: string;\n  userRole?: \"USER_ROLE_ADMIN\" | \"USER_ROLE_REGULAR\";\n  username?: string;\n}\n\nexport interface View {\n  contentType?: string;\n}\n\nexport type Map_string_Link_ = Record<string, Link>;\n\nexport type RequestParams = Omit<RequestInit, \"body\" | \"method\"> & {\n  secure?: boolean;\n};\n\nexport type RequestQueryParamsType = Record<string, string | string[] | number | number[] | boolean | undefined>;\n\ntype ApiConfig<SecurityDataType> = {\n  baseUrl?: string;\n  baseApiParams?: RequestParams;\n  securityWorker?: (securityData: SecurityDataType) => RequestParams;\n};\n\nclass HttpClient<SecurityDataType> {\n  public baseUrl: string = \"//localhost/\";\n  private securityData: SecurityDataType = null as any;\n  private securityWorker: ApiConfig<SecurityDataType>[\"securityWorker\"] = (() => {}) as any;\n\n  private baseApiParams: RequestParams = {\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n  };\n\n  constructor({ baseUrl, baseApiParams, securityWorker }: ApiConfig<SecurityDataType> = {}) {\n    this.baseUrl = baseUrl || this.baseUrl;\n    this.baseApiParams = baseApiParams || this.baseApiParams;\n    this.securityWorker = securityWorker || this.securityWorker;\n  }\n\n  public setSecurityData = (data: SecurityDataType) => {\n    this.securityData = data;\n  };\n\n  private addQueryParam(query: RequestQueryParamsType, key: string) {\n    return (\n      encodeURIComponent(key) +\n      \"=\" +\n      encodeURIComponent(Array.isArray(query[key]) ? (query[key] as any).join(\",\") : query[key])\n    );\n  }\n\n  protected addQueryParams(query?: RequestQueryParamsType): string {\n    const fixedQuery = query || {};\n    const keys = Object.keys(fixedQuery).filter((key) => \"undefined\" !== typeof fixedQuery[key]);\n    return keys.length === 0 ? \"\" : `?${keys.map((key) => this.addQueryParam(fixedQuery, key)).join(\"&\")}`;\n  }\n\n  private mergeRequestOptions(params: RequestParams, securityParams?: RequestParams): RequestParams {\n    return {\n      ...this.baseApiParams,\n      ...params,\n      ...(securityParams || {}),\n      headers: {\n        ...(this.baseApiParams.headers || {}),\n        ...(params.headers || {}),\n        ...((securityParams && securityParams.headers) || {}),\n      },\n    };\n  }\n\n  private safeParseResponse = <T = any, E = any>(response: Response): Promise<T> =>\n    response\n      .json()\n      .then((data) => data)\n      .catch((e) => response.text);\n\n  public request = <T = any, E = any>(\n    path: string,\n    method: string,\n    { secure, ...params }: RequestParams = {},\n    body?: any,\n    secureByDefault?: boolean,\n  ): Promise<T> =>\n    fetch(`${this.baseUrl}${path}`, {\n      // @ts-ignore\n      ...this.mergeRequestOptions(params, (secureByDefault || secure) && this.securityWorker(this.securityData)),\n      method,\n      body: body ? JSON.stringify(body) : null,\n    }).then(async (response) => {\n      const data = await this.safeParseResponse<T, E>(response);\n      if (!response.ok) throw data;\n      return data;\n    });\n}\n\n/**\n * @title Api Documentation\n * @version 1.0\n * @baseUrl //localhost/\n * Api Documentation\n */\nexport class Api<SecurityDataType = any> extends HttpClient<SecurityDataType> {\n  actuator = {\n    /**\n     * @tags web-mvc-links-handler\n     * @name linksUsingGET\n     * @summary links\n     * @request GET:/actuator\n     * @secure\n     */\n    linksUsingGet: (params?: RequestParams) =>\n      this.request<Record<string, Record<string, Link>>, any>(`/actuator`, \"GET\", params, null, true),\n\n    /**\n     * @tags operation-handler\n     * @name handleUsingGET_1\n     * @summary handle\n     * @request GET:/actuator/health\n     * @secure\n     */\n    handleUsingGet1: (body: Record<string, string>, params?: RequestParams) =>\n      this.request<AggregationResultZip, any>(`/actuator/health`, \"GET\", params, body, true),\n\n    /**\n     * @tags operation-handler\n     * @name handleUsingGET\n     * @summary handle\n     * @request GET:/actuator/health/**\n     * @secure\n     */\n    handleUsingGet: (body: Record<string, string>, params?: RequestParams) =>\n      this.request<AggregationResultZip, any>(`/actuator/health/**`, \"GET\", params, body, true),\n\n    /**\n     * @tags operation-handler\n     * @name handleUsingGET_2\n     * @summary handle\n     * @request GET:/actuator/info\n     * @secure\n     */\n    handleUsingGet2: (body: Record<string, string>, params?: RequestParams) =>\n      this.request<AggregationResultZip, any>(`/actuator/info`, \"GET\", params, body, true),\n  };\n  api = {\n    /**\n     * @tags auth-controller\n     * @name signInUserUsingPOST\n     * @summary signInUser\n     * @request POST:/api/auth\n     * @secure\n     */\n    signInUserUsingPost: (authRequestDTO: AuthRequestDTO, params?: RequestParams) =>\n      this.request<TokenDTO, any>(`/api/auth`, \"POST\", params, authRequestDTO, true),\n\n    /**\n     * @tags auth-controller\n     * @name getInstitutionUsingGET\n     * @summary getInstitution\n     * @request GET:/api/auth/institution\n     * @secure\n     */\n    getInstitutionUsingGet: (params?: RequestParams) =>\n      this.request<InstitutionDTO, any>(`/api/auth/institution`, \"GET\", params, null, true),\n\n    /**\n     * @tags auth-controller\n     * @name registerInstitutionUsingPOST\n     * @summary registerInstitution\n     * @request POST:/api/auth/register/institution\n     * @secure\n     */\n    registerInstitutionUsingPost: (institutionDTO: CreateInstitutionDTO, params?: RequestParams) =>\n      this.request<Institution, any>(`/api/auth/register/institution`, \"POST\", params, institutionDTO, true),\n\n    /**\n     * @tags auth-controller\n     * @name registerUserUsingPOST\n     * @summary registerUser\n     * @request POST:/api/auth/register/user\n     * @secure\n     */\n    registerUserUsingPost: (registerUserRequest: RegisterUserRequest, params?: RequestParams) =>\n      this.request<User, any>(`/api/auth/register/user`, \"POST\", params, registerUserRequest, true),\n\n    /**\n     * @tags auth-controller\n     * @name currentUserUsingGET\n     * @summary currentUser\n     * @request GET:/api/auth/user\n     * @secure\n     */\n    currentUserUsingGet: (params?: RequestParams) =>\n      this.request<User, any>(`/api/auth/user`, \"GET\", params, null, true),\n\n    /**\n     * @tags auth-controller\n     * @name changePasswordUsingPOST\n     * @summary changePassword\n     * @request POST:/api/auth/user/change-password\n     * @secure\n     */\n    changePasswordUsingPost: (changePasswordDTO: ChangePasswordDTO, params?: RequestParams) =>\n      this.request<any, any>(`/api/auth/user/change-password`, \"POST\", params, changePasswordDTO, true),\n\n    /**\n     * @tags doctor-controller\n     * @name addScheduledEventUsingPOST\n     * @summary addScheduledEvent\n     * @request POST:/api/doctor/create_appointment\n     * @secure\n     */\n    addScheduledEventUsingPost: (dto: RequestLabTestDTO, params?: RequestParams) =>\n      this.request<PatientEvent, any>(`/api/doctor/create_appointment`, \"POST\", params, dto, true),\n\n    /**\n     * @tags exposure-contact-controller\n     * @name createExposureContactUsingPOST\n     * @summary createExposureContact\n     * @request POST:/api/exposure-contacts\n     * @secure\n     */\n    createExposureContactUsingPost: (dto: ExposureContactToServer, params?: RequestParams) =>\n      this.request<ExposureContactFromServer, any>(`/api/exposure-contacts`, \"POST\", params, dto, true),\n\n    /**\n     * @tags exposure-contact-controller\n     * @name updateExposureContactUsingPUT\n     * @summary updateExposureContact\n     * @request PUT:/api/exposure-contacts\n     * @secure\n     */\n    updateExposureContactUsingPut: (contact: ExposureContactToServer, params?: RequestParams) =>\n      this.request<ExposureContactFromServer, any>(`/api/exposure-contacts`, \"PUT\", params, contact, true),\n\n    /**\n     * @tags exposure-contact-controller\n     * @name getExposureSourceContactsForPatientUsingGET\n     * @summary getExposureSourceContactsForPatient\n     * @request GET:/api/exposure-contacts/by-contact/{id}\n     * @secure\n     */\n    getExposureSourceContactsForPatientUsingGet: (id: string, params?: RequestParams) =>\n      this.request<ExposureContactFromServer[], any>(\n        `/api/exposure-contacts/by-contact/${id}`,\n        \"GET\",\n        params,\n        null,\n        true,\n      ),\n\n    /**\n     * @tags exposure-contact-controller\n     * @name getExposureContactsForPatientUsingGET\n     * @summary getExposureContactsForPatient\n     * @request GET:/api/exposure-contacts/by-source/{id}\n     * @secure\n     */\n    getExposureContactsForPatientUsingGet: (id: string, params?: RequestParams) =>\n      this.request<ExposureContactFromServer[], any>(\n        `/api/exposure-contacts/by-source/${id}`,\n        \"GET\",\n        params,\n        null,\n        true,\n      ),\n\n    /**\n     * @tags exposure-contact-controller\n     * @name getExposureContactUsingGET\n     * @summary getExposureContact\n     * @request GET:/api/exposure-contacts/{id}\n     * @secure\n     */\n    getExposureContactUsingGet: (id: number, params?: RequestParams) =>\n      this.request<ExposureContactFromServer, any>(`/api/exposure-contacts/${id}`, \"GET\", params, null, true),\n\n    /**\n     * @tags exposure-contact-controller\n     * @name removeExposureContactUsingDELETE\n     * @summary removeExposureContact\n     * @request DELETE:/api/exposure-contacts/{id}\n     * @secure\n     */\n    removeExposureContactUsingDelete: (id: number, params?: RequestParams) =>\n      this.request<any, any>(`/api/exposure-contacts/${id}`, \"DELETE\", params, null, true),\n\n    /**\n     * @tags incident-controller\n     * @name getPatientCurrentUsingGET\n     * @summary getPatientCurrent\n     * @request GET:/api/incidents/patient/{id}\n     * @secure\n     */\n    getPatientCurrentUsingGet: (id: string, params?: RequestParams) =>\n      this.request<Incident[], any>(`/api/incidents/patient/${id}`, \"GET\", params, null, true),\n\n    /**\n     * @tags incident-controller\n     * @name getPatientLogUsingGET\n     * @summary getPatientLog\n     * @request GET:/api/incidents/patient/{id}/log\n     * @secure\n     */\n    getPatientLogUsingGet: (id: string, params?: RequestParams) =>\n      this.request<Incident[], any>(`/api/incidents/patient/${id}/log`, \"GET\", params, null, true),\n\n    /**\n     * @tags incident-controller\n     * @name getSelectedForQuarantineUsingGET\n     * @summary getSelectedForQuarantine\n     * @request GET:/api/incidents/selected-for-quarantine\n     * @secure\n     */\n    getSelectedForQuarantineUsingGet: (params?: RequestParams) =>\n      this.request<QuarantineIncident[], any>(`/api/incidents/selected-for-quarantine`, \"GET\", params, null, true),\n\n    /**\n     * @tags incident-controller\n     * @name getIncidentUsingGET\n     * @summary getIncident\n     * @request GET:/api/incidents/{id}\n     * @secure\n     */\n    getIncidentUsingGet: (id: string, params?: RequestParams) =>\n      this.request<Incident, any>(`/api/incidents/${id}`, \"GET\", params, null, true),\n\n    /**\n     * @tags incident-controller\n     * @name getLogUsingGET\n     * @summary getLog\n     * @request GET:/api/incidents/{id}/log\n     * @secure\n     */\n    getLogUsingGet: (id: string, params?: RequestParams) =>\n      this.request<Incident[], any>(`/api/incidents/${id}/log`, \"GET\", params, null, true),\n\n    /**\n     * @tags incident-controller\n     * @name getPatientCurrentByTypeUsingGET\n     * @summary getPatientCurrentByType\n     * @request GET:/api/incidents/{type}/patient/{id}\n     * @secure\n     */\n    getPatientCurrentByTypeUsingGet: (\n      id: string,\n      type: \"test\" | \"quarantine\" | \"administrative\",\n      params?: RequestParams,\n    ) => this.request<Incident[], any>(`/api/incidents/${type}/patient/${id}`, \"GET\", params, null, true),\n\n    /**\n     * @tags incident-controller\n     * @name getPatientLogByTypeUsingGET\n     * @summary getPatientLogByType\n     * @request GET:/api/incidents/{type}/patient/{id}/log\n     * @secure\n     */\n    getPatientLogByTypeUsingGet: (id: string, type: \"test\" | \"quarantine\" | \"administrative\", params?: RequestParams) =>\n      this.request<Incident[], any>(`/api/incidents/${type}/patient/${id}/log`, \"GET\", params, null, true),\n\n    /**\n     * @tags institution-controller\n     * @name createInstitutionUsingPOST\n     * @summary createInstitution\n     * @request POST:/api/institutions\n     * @secure\n     */\n    createInstitutionUsingPost: (createInstitutionDTO: CreateInstitutionDTO, params?: RequestParams) =>\n      this.request<InstitutionDTO, any>(`/api/institutions`, \"POST\", params, createInstitutionDTO, true),\n\n    /**\n     * @tags institution-controller\n     * @name updateInstitutionUsingPUT\n     * @summary updateInstitution\n     * @request PUT:/api/institutions\n     * @secure\n     */\n    updateInstitutionUsingPut: (institutionDTO: InstitutionDTO, params?: RequestParams) =>\n      this.request<InstitutionDTO, any>(`/api/institutions`, \"PUT\", params, institutionDTO, true),\n\n    /**\n     * @tags institution-controller\n     * @name getAllDoctorsUsingGET\n     * @summary getAllDoctors\n     * @request GET:/api/institutions/doctors\n     * @secure\n     */\n    getAllDoctorsUsingGet: (params?: RequestParams) =>\n      this.request<Doctor[], any>(`/api/institutions/doctors`, \"GET\", params, null, true),\n\n    /**\n     * @tags institution-controller\n     * @name getAllLaboratoriesUsingGET\n     * @summary getAllLaboratories\n     * @request GET:/api/institutions/laboratories\n     * @secure\n     */\n    getAllLaboratoriesUsingGet: (params?: RequestParams) =>\n      this.request<Laboratory[], any>(`/api/institutions/laboratories`, \"GET\", params, null, true),\n\n    /**\n     * @tags institution-controller\n     * @name queryAllLaboratoriesUsingGET\n     * @summary queryAllLaboratories\n     * @request GET:/api/institutions/laboratories/query\n     * @secure\n     */\n    queryAllLaboratoriesUsingGet: (query: { id: string }, params?: RequestParams) =>\n      this.request<Laboratory[], any>(\n        `/api/institutions/laboratories/query${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        true,\n      ),\n\n    /**\n     * @tags lab-test-controller\n     * @name createTestForPatientUsingPOST\n     * @summary createTestForPatient\n     * @request POST:/api/labtests\n     * @secure\n     */\n    createTestForPatientUsingPost: (createLabTestRequest: CreateLabTestDTO, params?: RequestParams) =>\n      this.request<LabTest, any>(`/api/labtests`, \"POST\", params, createLabTestRequest, true),\n\n    /**\n     * @tags lab-test-controller\n     * @name getLabTestForPatientUsingGET\n     * @summary getLabTestForPatient\n     * @request GET:/api/labtests/patient/{id}\n     * @secure\n     */\n    getLabTestForPatientUsingGet: (id: string, params?: RequestParams) =>\n      this.request<LabTest[], any>(`/api/labtests/patient/${id}`, \"GET\", params, null, true),\n\n    /**\n     * @tags lab-test-controller\n     * @name queryLabTestsByIdUsingGET\n     * @summary queryLabTestsById\n     * @request GET:/api/labtests/query\n     * @secure\n     */\n    queryLabTestsByIdUsingGet: (query: { labTestIdQuery: string }, params?: RequestParams) =>\n      this.request<LabTest[], any>(`/api/labtests/query${this.addQueryParams(query)}`, \"GET\", params, null, true),\n\n    /**\n     * @tags lab-test-controller\n     * @name updateTestStatusUsingPUT\n     * @summary updateTestStatus\n     * @request PUT:/api/labtests/{laboratoryId}\n     * @secure\n     */\n    updateTestStatusUsingPut: (laboratoryId: string, statusDTO: UpdateTestStatusDTO, params?: RequestParams) =>\n      this.request<LabTest, any>(`/api/labtests/${laboratoryId}`, \"PUT\", params, statusDTO, true),\n\n    /**\n     * @tags patient-controller\n     * @name getAllPatientsUsingGET\n     * @summary getAllPatients\n     * @request GET:/api/patients\n     * @secure\n     */\n    getAllPatientsUsingGet: (params?: RequestParams) =>\n      this.request<Patient[], any>(`/api/patients`, \"GET\", params, null, true),\n\n    /**\n     * @tags patient-controller\n     * @name addPatientUsingPOST\n     * @summary addPatient\n     * @request POST:/api/patients\n     * @secure\n     */\n    addPatientUsingPost: (dto: CreatePatientDTO, params?: RequestParams) =>\n      this.request<Patient, any>(`/api/patients`, \"POST\", params, dto, true),\n\n    /**\n     * @tags patient-controller\n     * @name updatePatientUsingPUT\n     * @summary updatePatient\n     * @request PUT:/api/patients\n     * @secure\n     */\n    updatePatientUsingPut: (patient: Patient, params?: RequestParams) =>\n      this.request<Patient, any>(`/api/patients`, \"PUT\", params, patient, true),\n\n    /**\n     * @tags patient-controller\n     * @name createOrderTestEventUsingPOST\n     * @summary createOrderTestEvent\n     * @request POST:/api/patients/event/order-test\n     * @secure\n     */\n    createOrderTestEventUsingPost: (query?: { patientId?: string }, params?: RequestParams) =>\n      this.request<PatientEvent, any>(\n        `/api/patients/event/order-test${this.addQueryParams(query)}`,\n        \"POST\",\n        params,\n        null,\n        true,\n      ),\n\n    /**\n     * @tags patient-controller\n     * @name sendToQuarantineUsingPOST\n     * @summary sendToQuarantine\n     * @request POST:/api/patients/quarantine\n     * @secure\n     */\n    sendToQuarantineUsingPost: (dto: SendToQuarantineDTO, params?: RequestParams) =>\n      this.request<any, any>(`/api/patients/quarantine`, \"POST\", params, dto, true),\n\n    /**\n     * @tags patient-controller\n     * @name requestQuarantineUsingPOST\n     * @summary requestQuarantine\n     * @request POST:/api/patients/quarantine/{id}\n     * @secure\n     */\n    requestQuarantineUsingPost: (id: string, statusDTO: RequestQuarantineDTO, params?: RequestParams) =>\n      this.request<Patient, any>(`/api/patients/quarantine/${id}`, \"POST\", params, statusDTO, true),\n\n    /**\n     * @tags patient-controller\n     * @name queryPatientsUsingPOST\n     * @summary queryPatients\n     * @request POST:/api/patients/query\n     * @secure\n     */\n    queryPatientsUsingPost: (patientSearchParamsDTO: PatientSearchParamsDTO, params?: RequestParams) =>\n      this.request<Patient[], any>(`/api/patients/query`, \"POST\", params, patientSearchParamsDTO, true),\n\n    /**\n     * @tags patient-controller\n     * @name queryPatientsSimpleUsingPOST\n     * @summary queryPatientsSimple\n     * @request POST:/api/patients/query-simple\n     * @secure\n     */\n    queryPatientsSimpleUsingPost: (query: PatientSimpleSearchParamsDTO, params?: RequestParams) =>\n      this.request<Patient[], any>(`/api/patients/query-simple`, \"POST\", params, query, true),\n\n    /**\n     * @tags patient-controller\n     * @name countQueryPatientsSimpleUsingGET\n     * @summary countQueryPatientsSimple\n     * @request GET:/api/patients/query-simple/count\n     * @secure\n     */\n    countQueryPatientsSimpleUsingGet: (query: { query: string }, params?: RequestParams) =>\n      this.request<number, any>(\n        `/api/patients/query-simple/count${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        true,\n      ),\n\n    /**\n     * @tags patient-controller\n     * @name countQueryPatientsUsingPOST\n     * @summary countQueryPatients\n     * @request POST:/api/patients/query/count\n     * @secure\n     */\n    countQueryPatientsUsingPost: (patientSearchParamsDTO: PatientSearchParamsDTO, params?: RequestParams) =>\n      this.request<number, any>(`/api/patients/query/count`, \"POST\", params, patientSearchParamsDTO, true),\n\n    /**\n     * @tags patient-controller\n     * @name getPatientForIdUsingGET\n     * @summary getPatientForId\n     * @request GET:/api/patients/{id}\n     * @secure\n     */\n    getPatientForIdUsingGet: (id: string, params?: RequestParams) =>\n      this.request<Patient, any>(`/api/patients/${id}`, \"GET\", params, null, true),\n\n    /**\n     * @tags permission-query-controller\n     * @name queryPermissionsUsingPOST\n     * @summary queryPermissions\n     * @request POST:/api/permissions\n     * @secure\n     */\n    queryPermissionsUsingPost: (items: Record<string, ApiFunctionSpec>, params?: RequestParams) =>\n      this.request<Record<string, boolean>, any>(`/api/permissions`, \"POST\", params, items, true),\n\n    /**\n     * @tags stats-controller\n     * @name getForZipUsingGET\n     * @summary getForZip\n     * @request GET:/api/stats\n     * @secure\n     */\n    getForZipUsingGet: (query: { lowerBoundsZip: string; upperBoundsZips: string }, params?: RequestParams) =>\n      this.request<AggregationResultZip[], any>(`/api/stats${this.addQueryParams(query)}`, \"GET\", params, null, true),\n\n    /**\n     * @tags user-controller\n     * @name getInstitutionUsersUsingGET\n     * @summary getInstitutionUsers\n     * @request GET:/api/users\n     * @secure\n     */\n    getInstitutionUsersUsingGet: (params?: RequestParams) =>\n      this.request<UserDTO[], any>(`/api/users`, \"GET\", params, null, true),\n\n    /**\n     * @tags user-controller\n     * @name updateInstitutionUserUsingPUT\n     * @summary updateInstitutionUser\n     * @request PUT:/api/users\n     * @secure\n     */\n    updateInstitutionUserUsingPut: (\n      query?: {\n        \"authorities[0].authority\"?: string;\n        firstName?: string;\n        id?: number;\n        lastName?: string;\n        userRole?: \"USER_ROLE_ADMIN\" | \"USER_ROLE_REGULAR\";\n        username?: string;\n      },\n      params?: RequestParams,\n    ) => this.request<UserDTO, any>(`/api/users${this.addQueryParams(query)}`, \"PUT\", params, null, true),\n\n    /**\n     * @tags user-controller\n     * @name deleteInstitutionUserUsingDELETE\n     * @summary deleteInstitutionUser\n     * @request DELETE:/api/users/{id}\n     * @secure\n     */\n    deleteInstitutionUserUsingDelete: (id: number, params?: RequestParams) =>\n      this.request<any, any>(`/api/users/${id}`, \"DELETE\", params, null, true),\n  };\n  error = {\n    /**\n     * @tags basic-error-controller\n     * @name errorHtmlUsingGET\n     * @summary errorHtml\n     * @request GET:/error\n     * @secure\n     */\n    errorHtmlUsingGet: (params?: RequestParams) => this.request<ModelAndView, any>(`/error`, \"GET\", params, null, true),\n\n    /**\n     * @tags basic-error-controller\n     * @name errorHtmlUsingHEAD\n     * @summary errorHtml\n     * @request HEAD:/error\n     * @secure\n     */\n    errorHtmlUsingHead: (params?: RequestParams) =>\n      this.request<ModelAndView, any>(`/error`, \"HEAD\", params, null, true),\n\n    /**\n     * @tags basic-error-controller\n     * @name errorHtmlUsingPOST\n     * @summary errorHtml\n     * @request POST:/error\n     * @secure\n     */\n    errorHtmlUsingPost: (params?: RequestParams) =>\n      this.request<ModelAndView, any>(`/error`, \"POST\", params, null, true),\n\n    /**\n     * @tags basic-error-controller\n     * @name errorHtmlUsingPUT\n     * @summary errorHtml\n     * @request PUT:/error\n     * @secure\n     */\n    errorHtmlUsingPut: (params?: RequestParams) => this.request<ModelAndView, any>(`/error`, \"PUT\", params, null, true),\n\n    /**\n     * @tags basic-error-controller\n     * @name errorHtmlUsingDELETE\n     * @summary errorHtml\n     * @request DELETE:/error\n     * @secure\n     */\n    errorHtmlUsingDelete: (params?: RequestParams) =>\n      this.request<ModelAndView, any>(`/error`, \"DELETE\", params, null, true),\n\n    /**\n     * @tags basic-error-controller\n     * @name errorHtmlUsingOPTIONS\n     * @summary errorHtml\n     * @request OPTIONS:/error\n     * @secure\n     */\n    errorHtmlUsingOptions: (params?: RequestParams) =>\n      this.request<ModelAndView, any>(`/error`, \"OPTIONS\", params, null, true),\n\n    /**\n     * @tags basic-error-controller\n     * @name errorHtmlUsingPATCH\n     * @summary errorHtml\n     * @request PATCH:/error\n     * @secure\n     */\n    errorHtmlUsingPatch: (params?: RequestParams) =>\n      this.request<ModelAndView, any>(`/error`, \"PATCH\", params, null, true),\n  };\n}\n"],"sourceRoot":""}]}