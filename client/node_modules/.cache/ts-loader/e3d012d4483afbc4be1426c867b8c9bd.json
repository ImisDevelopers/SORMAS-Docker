{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterPatient.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterPatient.vue","mtime":1589906836724},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/RegisterPatient.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport Api from '@/api'\nimport { Patient } from '@/api/SwaggerApi'\nimport PatientStammdaten from '@/components/PatientStammdaten.vue'\nimport { SYMPTOMS } from '@/models/symptoms'\nimport { Option } from '@/models'\nimport { ADDITIONAL_PRE_ILLNESSES, PRE_ILLNESSES } from '@/models/pre-illnesses'\nimport { EXPOSURE_LOCATIONS, EXPOSURES_INTERNAL } from '@/models/exposures'\nimport DateInput from '@/components/DateInput.vue'\nimport { EventTypeItem, eventTypes } from '@/models/event-types'\nimport moment, { Moment } from 'moment'\n\ninterface State {\n  form: any\n  createdPatient: Patient | null\n  SYMPTOMS: Option[]\n  PRE_ILLNESSES: Option[]\n  ADDITIONAL_PRE_ILLNESSES: Option[]\n  EXPOSURES_INTERNAL: Option[]\n  EXPOSURE_LOCATIONS: Option[]\n  EVENT_TYPES: EventTypeItem[]\n  showOtherSymptoms: boolean\n  showOtherPreIllnesses: boolean\n  disableExposureLocation: boolean\n  disableHospitalization: boolean\n  today: Moment\n}\n\nexport default Vue.extend({\n  components: {\n    PatientStammdaten,\n    DateInput,\n  },\n  name: 'RegisterPatient',\n  data(): State {\n    return {\n      form: this.$form.createForm(this, { name: 'coordinated' }),\n      createdPatient: null,\n      SYMPTOMS,\n      ADDITIONAL_PRE_ILLNESSES,\n      PRE_ILLNESSES,\n      EXPOSURES_INTERNAL,\n      EXPOSURE_LOCATIONS,\n      EVENT_TYPES: eventTypes,\n      disableExposureLocation: true,\n      showOtherSymptoms: false,\n      showOtherPreIllnesses: false,\n      disableHospitalization: true,\n      today: moment(),\n    }\n  },\n  methods: {\n    handleSubmit() {\n      this.form.validateFields(async (err: Error, values: any) => {\n        if (err) {\n          return\n        }\n        const request = {\n          ...values,\n          dateOfBirth: values.dateOfBirth.format('YYYY-MM-DD'),\n          riskAreas: [],\n        }\n\n        if (values.dateofIllness) {\n          request.dateOfIllness = values.dateOfIllness.format('YYYY-MM-DD')\n        } else {\n          request.dateOfIllness = moment().format('YYYY-MM-DD')\n        }\n\n        if (values.dateOfReporting) {\n          request.dateOfReporting = values.dateOfReporting.format('YYYY-MM-DD')\n        } else {\n          request.dateOfReporting = moment().format('YYYY-MM-DD')\n        }\n\n        if (!request.symptoms) {\n          request.symptoms = []\n        }\n        if (!request.preIllnesses) {\n          request.preIllnesses = []\n        }\n\n        if (request.dateOfDeath) {\n          request.dateOfDeath = request.dateOfDeath.format('YYYY-MM-DD')\n        }\n\n        if (!this.disableHospitalization) {\n          request.dateOfHospitalization = values.dateOfHospitalization.format(\n            'YYYY-MM-DD'\n          )\n          request.onIntensiveCareUnit = values.onIntensiveCareUnit\n        } else {\n          request.dateOfHospitalization = null\n          request.onIntensiveCareUnit = null\n        }\n\n        if (values.exposures) {\n          request.riskAreas = request.riskAreas.concat(values.exposures)\n        }\n        if (this.showOtherSymptoms) {\n          request.symptoms.push(values.symptomsOther)\n        }\n        if (this.showOtherPreIllnesses) {\n          request.preIllnesses.push(values.preIllnessesOther)\n        }\n        if (values.exposureLocation) {\n          request.riskAreas = request.riskAreas.concat(\n            values.exposureLocation.map(\n              (location: string) => 'CONTACT_WITH_CORONA_' + location\n            )\n          )\n        }\n\n        Api.addPatientUsingPost(request)\n          .then((patient: Patient) => {\n            this.form.resetFields()\n            this.createdPatient = patient as any\n            this.disableExposureLocation = true\n            this.disableHospitalization = true\n            this.showOtherSymptoms = false\n            this.form.setFieldsValue({\n              symptomsOther: undefined,\n              symptomsOtherActivated: undefined,\n              preIllnessesOther: undefined,\n              preIllnessesActivated: undefined,\n            })\n            const notification = {\n              message: 'Patient/in registriert.',\n              description: 'Patient/in wurde erfolgreich registriert.',\n            }\n            this.$notification.success(notification)\n            window.scrollTo(0, 0)\n          })\n          .catch((error: Error) => {\n            console.error(error)\n            const notification = {\n              message: 'Patient/in nicht registriert.',\n              description: 'Patient/in konnte nicht registriert werden.',\n            }\n            this.$notification.error(notification)\n          })\n      })\n    },\n    symptomsChanged(event: Event) {\n      const target = event.target as any\n      this.showOtherSymptoms = target.checked\n    },\n    preIllnessesChanged(event: Event) {\n      const target = event.target as any\n      this.showOtherPreIllnesses = target.checked\n    },\n    exposuresChanged(checkedValues: string[]) {\n      this.disableExposureLocation = !checkedValues.includes(\n        'CONTACT_WITH_CORONA_CASE'\n      )\n    },\n    hospitalizationChanged(event: Event) {\n      const target = event.target as any\n      this.disableHospitalization = !target.checked\n    },\n  },\n})\n"],"sourceRoot":""}]}