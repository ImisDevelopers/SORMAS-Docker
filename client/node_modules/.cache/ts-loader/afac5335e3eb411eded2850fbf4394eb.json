{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientList.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientList.vue","mtime":1586713315430},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js","mtime":1584795993380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/views/PatientList.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Column } from 'ant-design-vue/types/table/column'\nimport Vue from 'vue'\nimport { Patient, PatientSearchParamsDTO } from '@/api/SwaggerApi'\nimport { eventTypes } from '@/models/event-types'\nimport { downloadCsv } from '@/util/export-service'\nimport Api from '@/api'\nimport moment from 'moment'\n\nconst columnsSchema: Partial<Column>[] = [\n  {\n    title: '',\n    dataIndex: 'operation',\n    scopedSlots: {\n      customRender: ['operation'],\n    },\n  },\n  {\n    title: 'Nachname',\n    // sorter: (a, b) => a.lastName.localeCompare(b.lastName),\n    dataIndex: 'lastName',\n    key: 'lastName',\n  },\n  {\n    title: 'Vorname',\n    // sorter: (a, b) => a.firstName.localeCompare(b.firstName),\n    dataIndex: 'firstName',\n    key: 'firstName',\n  },\n  {\n    title: 'Geschlecht',\n    dataIndex: 'gender',\n    key: 'gender',\n  },\n  {\n    title: 'Status',\n    dataIndex: 'patientStatus',\n    key: 'patientStatus',\n    scopedSlots: {\n      customRender: 'patientStatus',\n    },\n    sorter: true,\n  },\n  {\n    title: 'Stadt',\n    dataIndex: 'city',\n    key: 'city',\n  },\n  {\n    title: 'E-Mail',\n    dataIndex: 'email',\n    key: 'email',\n  },\n  {\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n    defaultSortOrder: 'ascend',\n  },\n]\n\ninterface SimpleForm {\n  query: string;\n  order: string;\n  orderBy: string;\n  offsetPage: number;\n  pageSize: number;\n}\n\ninterface State {\n  form: SimpleForm;\n  advancedForm: Partial<PatientSearchParamsDTO>;\n\n  [key: string]: any;\n}\n\nexport default Vue.extend({\n  name: 'PatientList',\n  data(): State {\n    return {\n      form: {\n        query: '',\n        order: 'asc',\n        orderBy: 'lastName',\n        offsetPage: 0,\n        pageSize: 10,\n      },\n      advancedForm: {\n        gender: '',\n        city: '',\n        email: '',\n        phoneNumber: '',\n        street: '',\n        houseNumber: '',\n        zip: '',\n        insuranceCompany: '',\n        insuranceMembershipNumber: '',\n        doctorId: '',\n        laboratoryId: '',\n        firstName: '',\n        lastName: '',\n        patientStatus: undefined,\n        id: '',\n      },\n      content: '',\n      count: 0,\n      currentPage: 1, // Starts at 1\n      columnsSchema,\n      data: [], // data\n      showAdvancedSearch: false,\n      eventTypes: eventTypes,\n      actualPatients: [],\n    }\n  },\n  watch: {\n    currentPage() {\n      this.loadPage()\n    },\n    '$route.query.query'() {\n      this.loadAfterUrlChange()\n    },\n  },\n  created() {\n    this.loadAfterUrlChange()\n  },\n  methods: {\n    loadAfterUrlChange() {\n      const query = this.$route.query.query\n      if (query) {\n        this.form.query = query.toString()\n      }\n      this.loadPage()\n    },\n    handleSearch() {\n      this.currentPage = 1\n      this.loadPage()\n    },\n    onShowSizeChange(current: number, pageSize: number) {\n      this.currentPage = current\n      this.advancedForm.pageSize = pageSize\n      this.loadPage()\n    },\n    loadPage() {\n      this.form.offsetPage = this.currentPage - 1\n      let countPromise\n      let queryPromise\n      if (this.showAdvancedSearch) {\n        const formValues = { ...this.form, ...this.advancedForm }\n\n        if (formValues.patientStatus) {\n          // Backend fails on empty string\n          formValues.patientStatus = undefined\n        }\n\n        countPromise = Api.api.countQueryPatientsUsingPost(formValues)\n        queryPromise = Api.api.queryPatientsUsingPost(formValues)\n      } else {\n        const query = this.form.query\n        countPromise = Api.api.countQueryPatientsSimpleUsingGet({ query })\n        queryPromise = Api.api.queryPatientsSimpleUsingPost({ ...this.form })\n      }\n\n      countPromise.then(count => {\n        this.count = count\n      })\n      queryPromise.then((result: Patient[]) => {\n        this.actualPatients = result\n      }).catch(error => {\n        console.error(error)\n        const notification = {\n          message: 'Fehler beim Laden der Patientendaten.',\n          description: error.message,\n        }\n        this.$notification.error(notification)\n      })\n    },\n    toggleAdvancedSearch() {\n      this.showAdvancedSearch = !this.showAdvancedSearch\n    },\n    downloadPatients() {\n      this.form.offsetPage = this.currentPage - 1\n      let countPromise\n      let formValues: any\n      if (this.showAdvancedSearch) {\n        formValues = { ...this.form, ...this.advancedForm }\n        if (formValues.patientStatus) {\n          // Backend fails on empty string\n          formValues.patientStatus = undefined\n        }\n        countPromise = Api.api.countQueryPatientsUsingPost(formValues)\n      } else {\n        formValues = { ...this.form }\n        const query = this.form.query\n        countPromise = Api.api.countQueryPatientsSimpleUsingGet({ query })\n      }\n\n      countPromise.then(count => {\n        // Download all data that applies to the current filter\n        formValues.offsetPage = 0\n        formValues.pageSize = count\n\n        let queryPromise: Promise<Patient[]>\n        if (this.showAdvancedSearch) {\n          queryPromise = Api.api.queryPatientsUsingPost(formValues)\n        } else {\n          queryPromise = Api.api.queryPatientsSimpleUsingPost(formValues)\n        }\n\n        queryPromise.then(result => {\n          const header = 'ID,Vorname,Nachname,Geschlecht,Status,Geburtsdatum,Stadt,E-Mail;Telefonnummer;' +\n            'Straße;Hausnummer;Stadt;Versicherung;Versichertennummer;'\n          const patients = result.map((patient: Patient) =>\n            `${patient.id};${patient.firstName};${patient.lastName};${patient.gender};${patient.patientStatus};` +\n            `${patient.dateOfBirth};${patient.city};${patient.email};${patient.phoneNumber};${patient.street};` +\n            `${patient.houseNumber};${patient.city};${patient.insuranceCompany};${patient.insuranceMembershipNumber}`,\n          ).join('\\n')\n          const filename = moment().format('YYYY_MM_DD') + '_patienten_export.csv'\n          downloadCsv(header + '\\n' + patients, filename)\n        }).catch((error: Error) => {\n          console.error(error)\n          const notification = {\n            message: 'Fehler beim Laden der Patientendaten.',\n            description: error.message,\n          }\n          this.$notification.error(notification)\n        })\n      })\n    },\n    handleTableChange(pagination: any, filters: any, sorter: any) {\n      const sortKey = sorter.field ? sorter.field : 'lastName'\n      let sortOrder = 'asc'\n      if (sorter.order === 'descend') {\n        sortOrder = 'desc'\n      }\n      this.form.order = sortOrder\n      this.form.orderBy = sortKey\n      this.loadPage()\n    },\n    handlePatientClick(patient: Patient) {\n      if (patient.id) {\n        this.$router.push({ name: 'patient-detail', params: { id: patient.id } })\n      }\n    },\n    customRow(record: Patient) {\n      return {\n        on: {\n          dblclick: () => this.handlePatientClick(record),\n        },\n      }\n    },\n  },\n})\n\n"],"sourceRoot":""}]}