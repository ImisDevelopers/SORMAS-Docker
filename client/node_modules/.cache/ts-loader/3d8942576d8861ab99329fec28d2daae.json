{"remainingRequest":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js??ref--14-3!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js??ref--13-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/models/event-types.ts","dependencies":[{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/models/event-types.ts","mtime":1586713315430},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/cache-loader/dist/cjs.js","mtime":1584795984278},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/thread-loader/dist/cjs.js","mtime":1584795984506},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/babel-loader/lib/index.js","mtime":1584795984276},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/ts-loader/index.js","mtime":1586724162024},{"path":"/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js","mtime":1584795992192}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IHZhciBldmVudFR5cGVzID0gW3sKICBpZDogJ1JFR0lTVEVSRUQnLAogIGxhYmVsOiAnUmVnaXN0cmllcnQnLAogIGljb246ICdsb2dpbicKfSwgewogIGlkOiAnU1VTUEVDVEVEJywKICBsYWJlbDogJ1ZlcmRhY2h0c2ZhbGwnLAogIGljb246ICdzZWFyY2gnCn0sIHsKICBpZDogJ1NDSEVEVUxFRF9GT1JfVEVTVElORycsCiAgbGFiZWw6ICdXYXJ0ZXQgYXVmIFRlc3QnLAogIGljb246ICd0ZWFtJwp9LCB7CiAgaWQ6ICdURVNUX1NVQk1JVFRFRF9JTl9QUk9HUkVTUycsCiAgbGFiZWw6ICdUZXN0IGVpbmdlcmVpY2h0JywKICBpY29uOiAnY2xvY2stY2lyY2xlJwp9LCB7CiAgaWQ6ICdURVNUX0ZJTklTSEVEX1BPU0lUSVZFJywKICBsYWJlbDogJ1Rlc3QgcG9zaXRpdicsCiAgaWNvbjogJ2NoZWNrJwp9LCB7CiAgaWQ6ICdURVNUX0ZJTklTSEVEX05FR0FUSVZFJywKICBsYWJlbDogJ1Rlc3QgbmVnYXRpdicsCiAgaWNvbjogJ3N0b3AnCn0sIHsKICBpZDogJ1RFU1RfRklOSVNIRURfSU5WQUxJRCcsCiAgbGFiZWw6ICdUZXN0IGludmFsaWRlJywKICBpY29uOiAnd2FybmluZycKfSwgewogIGlkOiAnVEVTVF9GSU5JU0hFRF9SRUNPVkVSRUQnLAogIGxhYmVsOiAnR2V0ZXN0ZXQgdW5kIGVyaG9sdCcsCiAgaWNvbjogJ3JvbGxiYWNrJwp9LCB7CiAgaWQ6ICdURVNUX0ZJTklTSEVEX05PVF9SRUNPVkVSRUQnLAogIGxhYmVsOiAnR2V0ZXN0ZXQgdW5kIG5pY2h0IGVyaG9sdCcsCiAgaWNvbjogJ2xvZ291dCcKfSwgewogIGlkOiAnUEFUSUVOVF9ERUFEJywKICBsYWJlbDogJ1ZlcnN0b3JiZW4nLAogIGljb246ICdjbG91ZCcKfSwgewogIGlkOiAnRE9DVE9SU19WSVNJVCcsCiAgbGFiZWw6ICdBcnp0YmVzdWNoJywKICBpY29uOiAncmVjb25jaWxpYXRpb24nCn1dOwpleHBvcnQgdmFyIHRlc3RSZXN1bHRzID0gW3sKICBpZDogJ1RFU1RfU1VCTUlUVEVEJywKICBsYWJlbDogJ1Rlc3QgZWluZ2VyZWljaHQnLAogIGljb246ICdsb2dpbicKfSwgewogIGlkOiAnVEVTVF9JTl9QUk9HUkVTUycsCiAgbGFiZWw6ICdUZXN0IGzDpHVmdCcsCiAgaWNvbjogJ2Nsb2NrLWNpcmNsZScKfSwgewogIGlkOiAnVEVTVF9QT1NJVElWRScsCiAgbGFiZWw6ICdUZXN0IHBvc2l0aXYnLAogIGljb246ICdjaGVjaycKfSwgewogIGlkOiAnVEVTVF9ORUdBVElWRScsCiAgbGFiZWw6ICdUZXN0IG5lZ2F0aXYnLAogIGljb246ICdzdG9wJwp9LCB7CiAgaWQ6ICdURVNUX0lOVkFMSUQnLAogIGxhYmVsOiAnVGVzdCBpbnZhbGlkZScsCiAgaWNvbjogJ3dhcm5pbmcnCn1dOw=="},{"version":3,"sources":["/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/node_modules/eslint-loader/index.js??ref--13-0!/home/cirotzki/projects/virus/1_011_a_infektionsfall_uebermittellung/client/src/models/event-types.ts"],"names":[],"mappings":"AAQA,OAAO,IAAM,UAAU,GAAoB,CACzC;AACE,EAAA,EAAE,EAAE,YADN;AAEE,EAAA,KAAK,EAAE,aAFT;AAGE,EAAA,IAAI,EAAE;AAHR,CADyC,EAKtC;AACD,EAAA,EAAE,EAAE,WADH;AAED,EAAA,KAAK,EAAE,eAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CALsC,EAStC;AACD,EAAA,EAAE,EAAE,uBADH;AAED,EAAA,KAAK,EAAE,iBAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CATsC,EAatC;AACD,EAAA,EAAE,EAAE,4BADH;AAED,EAAA,KAAK,EAAE,kBAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CAbsC,EAiBtC;AACD,EAAA,EAAE,EAAE,wBADH;AAED,EAAA,KAAK,EAAE,cAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CAjBsC,EAqBtC;AACD,EAAA,EAAE,EAAE,wBADH;AAED,EAAA,KAAK,EAAE,cAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CArBsC,EAyBtC;AACD,EAAA,EAAE,EAAE,uBADH;AAED,EAAA,KAAK,EAAE,eAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CAzBsC,EA6BtC;AACD,EAAA,EAAE,EAAE,yBADH;AAED,EAAA,KAAK,EAAE,qBAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CA7BsC,EAiCtC;AACD,EAAA,EAAE,EAAE,6BADH;AAED,EAAA,KAAK,EAAE,2BAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CAjCsC,EAqCtC;AACD,EAAA,EAAE,EAAE,cADH;AAED,EAAA,KAAK,EAAE,YAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CArCsC,EAyCtC;AACD,EAAA,EAAE,EAAE,eADH;AAED,EAAA,KAAK,EAAE,YAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CAzCsC,CAApC;AAqDP,OAAO,IAAM,WAAW,GAAqB,CAC3C;AACE,EAAA,EAAE,EAAE,gBADN;AAEE,EAAA,KAAK,EAAE,kBAFT;AAGE,EAAA,IAAI,EAAE;AAHR,CAD2C,EAKxC;AACD,EAAA,EAAE,EAAE,kBADH;AAED,EAAA,KAAK,EAAE,YAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CALwC,EASxC;AACD,EAAA,EAAE,EAAE,eADH;AAED,EAAA,KAAK,EAAE,cAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CATwC,EAaxC;AACD,EAAA,EAAE,EAAE,eADH;AAED,EAAA,KAAK,EAAE,cAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CAbwC,EAiBxC;AACD,EAAA,EAAE,EAAE,cADH;AAED,EAAA,KAAK,EAAE,eAFN;AAGD,EAAA,IAAI,EAAE;AAHL,CAjBwC,CAAtC","sourcesContent":["import { PatientStatus } from '@/models/index'\n\nexport interface EventTypeItem {\n  id: PatientStatus;\n  label: string;\n  icon: string;\n}\n\nexport const eventTypes: EventTypeItem[] = [\n  {\n    id: 'REGISTERED',\n    label: 'Registriert',\n    icon: 'login',\n  }, {\n    id: 'SUSPECTED',\n    label: 'Verdachtsfall',\n    icon: 'search',\n  }, {\n    id: 'SCHEDULED_FOR_TESTING',\n    label: 'Wartet auf Test',\n    icon: 'team',\n  }, {\n    id: 'TEST_SUBMITTED_IN_PROGRESS',\n    label: 'Test eingereicht',\n    icon: 'clock-circle',\n  }, {\n    id: 'TEST_FINISHED_POSITIVE',\n    label: 'Test positiv',\n    icon: 'check',\n  }, {\n    id: 'TEST_FINISHED_NEGATIVE',\n    label: 'Test negativ',\n    icon: 'stop',\n  }, {\n    id: 'TEST_FINISHED_INVALID',\n    label: 'Test invalide',\n    icon: 'warning',\n  }, {\n    id: 'TEST_FINISHED_RECOVERED',\n    label: 'Getestet und erholt',\n    icon: 'rollback',\n  }, {\n    id: 'TEST_FINISHED_NOT_RECOVERED',\n    label: 'Getestet und nicht erholt',\n    icon: 'logout',\n  }, {\n    id: 'PATIENT_DEAD',\n    label: 'Verstorben',\n    icon: 'cloud',\n  }, {\n    id: 'DOCTORS_VISIT',\n    label: 'Arztbesuch',\n    icon: 'reconciliation',\n  },\n]\n\nexport interface TestResultType {\n  id: 'TEST_SUBMITTED' | 'TEST_IN_PROGRESS' | 'TEST_POSITIVE' | 'TEST_NEGATIVE' | 'TEST_INVALID';\n  label: string;\n  icon: string;\n}\nexport const testResults: TestResultType[] = [\n  {\n    id: 'TEST_SUBMITTED',\n    label: 'Test eingereicht',\n    icon: 'login',\n  }, {\n    id: 'TEST_IN_PROGRESS',\n    label: 'Test l√§uft',\n    icon: 'clock-circle',\n  }, {\n    id: 'TEST_POSITIVE',\n    label: 'Test positiv',\n    icon: 'check',\n  }, {\n    id: 'TEST_NEGATIVE',\n    label: 'Test negativ',\n    icon: 'stop',\n  }, {\n    id: 'TEST_INVALID',\n    label: 'Test invalide',\n    icon: 'warning',\n  },\n]\n"],"sourceRoot":""}]}